<?xml version="1.0" encoding="UTF-8"?>
<metadata versionNo="20140820">
<structs>
<struct>
<name>UserCredit</name>
<desc>用户信用</desc>
<props>
<prop>
<name>good_num</name>
<type>Number</type>
<level>Basic</level>
<desc>收到的好评总条数。取值范围:大于零的整数</desc>
</prop>
<prop>
<name>level</name>
<type>Number</type>
<level>Basic</level>
<desc>信用等级（是根据score生成的），信用等级：淘宝会员在淘宝网上的信用度，分为20个级别，级别如：level = 1 时，表示一心；level = 2 时，表示二心</desc>
</prop>
<prop>
<name>score</name>
<type>Number</type>
<level>Basic</level>
<desc>信用总分（“好评”加一分，“中评”不加分，“差评”扣一分。分越高，等级越高）</desc>
</prop>
<prop>
<name>total_num</name>
<type>Number</type>
<level>Basic</level>
<desc>收到的评价总条数。取值范围:大于零的整数</desc>
</prop>
</props>
</struct>
<struct>
<name>Location</name>
<desc>用户地址</desc>
<props>
<prop>
<name>address</name>
<type>String</type>
<level>Basic</level>
<desc>详细地址，最大256个字节（128个中文）</desc>
</prop>
<prop>
<name>city</name>
<type>String</type>
<level>Basic</level>
<desc>所在城市（中文名称）</desc>
</prop>
<prop>
<name>country</name>
<type>String</type>
<level>Basic</level>
<desc>国家名称</desc>
</prop>
<prop>
<name>district</name>
<type>String</type>
<level>Basic</level>
<desc>区/县（只适用于物流API）</desc>
</prop>
<prop>
<name>state</name>
<type>String</type>
<level>Basic</level>
<desc>所在省份（中文名称）</desc>
</prop>
<prop>
<name>zip</name>
<type>String</type>
<level>Basic</level>
<desc>邮政编码</desc>
</prop>
</props>
</struct>
<struct>
<name>User</name>
<desc>用户</desc>
<props>
<prop>
<name>alipay_bind</name>
<type>String</type>
<level>Basic</level>
<desc>有无绑定。可选值:bind(绑定),notbind(未绑定)</desc>
</prop>
<prop>
<name>auto_repost</name>
<type>String</type>
<level>Basic</level>
<desc>是否受限制。可选值:limited(受限制),unlimited(不受限)</desc>
</prop>
<prop>
<name>avatar</name>
<type>String</type>
<level>Basic</level>
<desc>用户头像地址</desc>
</prop>
<prop>
<name>birthday</name>
<type>Date</type>
<level>Basic</level>
<desc>生日</desc>
</prop>
<prop>
<name>buyer_credit</name>
<type>UserCredit</type>
<level>Object</level>
<desc>买家信用</desc>
</prop>
<prop>
<name>consumer_protection</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否参加消保</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>用户注册时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>email</name>
<type>String</type>
<level>Basic</level>
<desc>联系人email</desc>
</prop>
<prop>
<name>has_more_pic</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否购买多图服务。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>has_shop</name>
<type>Boolean</type>
<level>Basic</level>
<desc>用户作为卖家是否开过店</desc>
</prop>
<prop>
<name>has_sub_stock</name>
<type>Boolean</type>
<level>Basic</level>
<desc>表示用户是否具备修改商品减库存逻辑的权限（一共有拍下减库存和付款减库存两种逻辑） 值含义： 1）true：是 2）false：否。</desc>
</prop>
<prop>
<name>is_golden_seller</name>
<type>Boolean</type>
<level>Basic</level>
<desc>用户是否是金牌卖家</desc>
</prop>
<prop>
<name>is_lightning_consignment</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否24小时闪电发货(实物类)</desc>
</prop>
<prop>
<name>item_img_num</name>
<type>Number</type>
<level>Basic</level>
<desc>可上传商品图片数量</desc>
</prop>
<prop>
<name>item_img_size</name>
<type>Number</type>
<level>Basic</level>
<desc>单张商品图片最大容量(商品主图大小)。单位:k</desc>
</prop>
<prop>
<name>last_visit</name>
<type>Date</type>
<level>Basic</level>
<desc>最近登陆时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>liangpin</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否是无名良品用户，true or false</desc>
</prop>
<prop>
<name>location</name>
<type>Location</type>
<level>Object</level>
<desc>用户当前居住地公开信息。如：location.city获取其中的city数据</desc>
</prop>
<prop>
<name>magazine_subscribe</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否订阅了淘宝天下杂志</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>用户昵称</desc>
</prop>
<prop>
<name>online_gaming</name>
<type>Boolean</type>
<level>Basic</level>
<desc>用户是否为网游用户，属于隐私信息，需要登陆才能查看自己的。 目前仅供taobao.user.get使用</desc>
</prop>
<prop>
<name>promoted_type</name>
<type>String</type>
<level>Basic</level>
<desc>有无实名认证。可选值:authentication(实名认证),not authentication(没有认证)</desc>
</prop>
<prop>
<name>prop_img_num</name>
<type>Number</type>
<level>Basic</level>
<desc>可上传属性图片数量</desc>
</prop>
<prop>
<name>prop_img_size</name>
<type>Number</type>
<level>Basic</level>
<desc>单张销售属性图片最大容量（非主图的商品图片和商品属性图片）。单位:k</desc>
</prop>
<prop>
<name>seller_credit</name>
<type>UserCredit</type>
<level>Object</level>
<desc>卖家信用</desc>
</prop>
<prop>
<name>sex</name>
<type>String</type>
<level>Basic</level>
<desc>性别。可选值:m(男),f(女)</desc>
</prop>
<prop>
<name>sign_food_seller_promise</name>
<type>Boolean</type>
<level>Basic</level>
<desc>卖家是否签署食品卖家承诺协议</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>状态。可选值:normal(正常),inactive(未激活),delete(删除),reeze(冻结),supervise(监管)</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>用户类型。可选值:B(B商家),C(C商家)</desc>
</prop>
<prop>
<name>uid</name>
<type>String</type>
<level>Basic</level>
<desc>用户字符串ID</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>用户数字ID</desc>
</prop>
<prop>
<name>vertical_market</name>
<type>String</type>
<level>Basic</level>
<desc>用户参与垂直市场类型。shoes表示鞋城垂直市场用户，3C表示3C垂直市场用户。多个类型之间用","分隔。如：一个用户既是3C用户又是鞋城用户，那么这个字段返回就是"3C,shoes"。如果用户不是垂直市场用户，此字段返回为""。</desc>
</prop>
<prop>
<name>vip_info</name>
<type>String</type>
<level>Basic</level>
<desc>用户的全站vip信息，可取值如下：c(普通会员),asso_vip(荣誉会员)，vip1,vip2,vip3,vip4,vip5,vip6(六个等级的正式vip会员)，共8种取值，其中asso_vip是由vip会员衰退而成，与主站上的vip0对应。</desc>
</prop>
</props>
</struct>
<struct>
<name>UserInfo</name>
<desc>图片空间的用户信息获取，包括订购容量等</desc>
<props>
<prop>
<name>available_space</name>
<type>String</type>
<level>Basic</level>
<desc>用户的可用容量，即订购量与免费量之和</desc>
</prop>
<prop>
<name>free_space</name>
<type>String</type>
<level>Basic</level>
<desc>图片空间的免费容量</desc>
</prop>
<prop>
<name>order_expiry_date</name>
<type>String</type>
<level>Basic</level>
<desc>图片空间的订购有效期</desc>
</prop>
<prop>
<name>order_space</name>
<type>String</type>
<level>Basic</level>
<desc>用户订购的图片空间容量</desc>
</prop>
<prop>
<name>remaining_space</name>
<type>String</type>
<level>Basic</level>
<desc>剩余的图片空间容量</desc>
</prop>
<prop>
<name>used_space</name>
<type>String</type>
<level>Basic</level>
<desc>已使用的图片空间容量</desc>
</prop>
<prop>
<name>water_mark</name>
<type>String</type>
<level>Basic</level>
<desc>用户自定义的水印参数，通过"|"分割开，如果用户没有定义则为"" 
具体水印参数组合方法，用"|"分开，顺序按"是否全局设置|水印文字|是否文字水印优先|透明度|字体|字体大小|字体是否加粗|字体是否斜体|字体是否加下划线|字体颜色|旋转角度|是否带阴影|水印位置|图片水印URL|reference水印相对位置" reference取值有左上（1）/中间（3）/右下（2）,其中的null代表为空</desc>
</prop>
</props>
</struct>
<struct>
<name>ProductBooks</name>
<desc>图书类目导入返回结果</desc>
<props>
<prop>
<name>author</name>
<type>String</type>
<level>Basic</level>
<desc>作者/著者</desc>
</prop>
<prop>
<name>bar_code</name>
<type>String</type>
<level>Basic</level>
<desc>条形码，13位，9787开头</desc>
</prop>
<prop>
<name>book_name</name>
<type>String</type>
<level>Basic</level>
<desc>完整的图书名称</desc>
</prop>
<prop>
<name>category_id</name>
<type>Number</type>
<level>Basic</level>
<desc>类目id</desc>
</prop>
<prop>
<name>isbn</name>
<type>String</type>
<level>Basic</level>
<desc>ISBN号</desc>
</prop>
<prop>
<name>price</name>
<type>String</type>
<level>Basic</level>
<desc>图书价格，若有多个，则以';'号分隔</desc>
</prop>
</props>
</struct>
<struct>
<name>ProductImg</name>
<desc>产品图片</desc>
<props>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>添加时间.格式:yyyy-mm-dd hh:mm:ss</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>产品图片ID</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间.格式:yyyy-mm-dd hh:mm:ss</desc>
</prop>
<prop>
<name>position</name>
<type>Number</type>
<level>Basic</level>
<desc>图片序号。产品里的图片展示顺序，数据越小越靠前。要求是正整数。</desc>
</prop>
<prop>
<name>product_id</name>
<type>Number</type>
<level>Basic</level>
<desc>图片所属产品的ID</desc>
</prop>
<prop>
<name>url</name>
<type>String</type>
<level>Basic</level>
<desc>图片地址.(绝对地址,格式:http://host/image_path)</desc>
</prop>
</props>
</struct>
<struct>
<name>Product</name>
<desc>产品结构</desc>
<props>
<prop>
<name>barcode_str</name>
<type>String</type>
<level>Basic</level>
<desc>产品条码信息，仅在taobao.products.search接口且商城可用</desc>
</prop>
<prop>
<name>binds</name>
<type>String</type>
<level>Basic</level>
<desc>产品的非关键属性列表.格式:pid:vid;pid:vid.</desc>
</prop>
<prop>
<name>binds_str</name>
<type>String</type>
<level>Basic</level>
<desc>产品的非关键属性字符串列表.格式同props_str(&lt;strong&gt;注：&lt;/strong&gt;&lt;font color="red"&gt;属性名称中的冒号":"被转换为："#cln#";  
分号";"被转换为："#scln#"
&lt;/font&gt;)</desc>
</prop>
<prop>
<name>cat_name</name>
<type>String</type>
<level>Basic</level>
<desc>商品类目名称</desc>
</prop>
<prop>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<desc>商品类目ID.必须是叶子类目ID</desc>
</prop>
<prop>
<name>collect_num</name>
<type>Number</type>
<level>Basic</level>
<desc>产品的collect次数（不提供数据，返回0)</desc>
</prop>
<prop>
<name>commodity_id</name>
<type>Number</type>
<level>Basic</level>
<desc>品类ID</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间.格式:yyyy-mm-dd hh:mm:ss</desc>
</prop>
<prop>
<name>cspu_feature</name>
<type>String</type>
<level>Basic</level>
<desc>标识是否为达尔文体系下的产品 。 
如果为空表示是非达尔文体系下的产品 
如果cspu:0 表示是达尔文体系下的产品，有cspu正在待小二审核，但不能发布商品。 
如果cspu:1 表示是达尔文体系下的产品，且有小二确认的cspu，能发布商品</desc>
</prop>
<prop>
<name>customer_props</name>
<type>String</type>
<level>Basic</level>
<desc>用户自定义属性,结构：pid1:value1;pid2:value2 例如：“20000:优衣库”，表示“品牌:优衣库”</desc>
</prop>
<prop>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<desc>产品的描述.最大25000个字节</desc>
</prop>
<prop>
<name>is_suite_effective</name>
<type>Boolean</type>
<level>Basic</level>
<desc>标识套装产品是否有效，无效的套装产品需要重新发布</desc>
</prop>
<prop>
<name>level</name>
<type>Number</type>
<level>Basic</level>
<desc>产品的级别level</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间.格式:yyyy-mm-dd hh:mm:ss</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>产品名称</desc>
</prop>
<prop>
<name>outer_id</name>
<type>String</type>
<level>Basic</level>
<desc>外部产品ID</desc>
</prop>
<prop>
<name>pic_path</name>
<type>String</type>
<level>Basic</level>
<desc>产品对应的图片路径</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>产品的主图片地址.(绝对地址,格式:http://host/image_path)</desc>
</prop>
<prop>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<desc>产品的市场价.单位为元.精确到2位小数;如:200.07</desc>
</prop>
<prop>
<name>product_extra_infos</name>
<type>ProductExtraInfo</type>
<level>Object Array</level>
<desc>产品扩展信息</desc>
</prop>
<prop>
<name>product_id</name>
<type>Number</type>
<level>Basic</level>
<desc>产品ID</desc>
</prop>
<prop>
<name>product_imgs</name>
<type>ProductImg</type>
<level>Object Array</level>
<desc>产品的子图片.目前最多支持4张。fields中设置为product_imgs.id、product_imgs.url、product_imgs.position 等形式就会返回相应的字段</desc>
</prop>
<prop>
<name>product_prop_imgs</name>
<type>ProductPropImg</type>
<level>Object Array</level>
<desc>产品的属性图片.比如说黄色对应的产品图片,绿色对应的产品图片。fields中设置为product_prop_imgs.id、  
product_prop_imgs.props、product_prop_imgs.url、product_prop_imgs.position等形式就会返回相应的字段</desc>
</prop>
<prop>
<name>property_alias</name>
<type>String</type>
<level>Basic</level>
<desc>销售属性值别名。格式为pid1:vid1:alias1;pid1:vid2:alia2。</desc>
</prop>
<prop>
<name>props</name>
<type>String</type>
<level>Basic</level>
<desc>产品的关键属性列表.格式：pid:vid;pid:vid</desc>
</prop>
<prop>
<name>props_str</name>
<type>String</type>
<level>Basic</level>
<desc>产品的关键属性字符串列表.比如:品牌:诺基亚;型号:N73(&lt;strong&gt;注：&lt;/strong&gt;&lt;font color="red"&gt;属性名称中的冒号":"被转换为："#cln#";  
分号";"被转换为："#scln#"
&lt;/font&gt;)</desc>
</prop>
<prop>
<name>rate_num</name>
<type>Number</type>
<level>Basic</level>
<desc>产品的评分次数</desc>
</prop>
<prop>
<name>sale_num</name>
<type>Number</type>
<level>Basic</level>
<desc>产品的销售量</desc>
</prop>
<prop>
<name>sale_props</name>
<type>String</type>
<level>Basic</level>
<desc>产品的销售属性列表.格式:pid:vid;pid:vid</desc>
</prop>
<prop>
<name>sale_props_str</name>
<type>String</type>
<level>Basic</level>
<desc>产品的销售属性字符串列表.格式同props_str(&lt;strong&gt;注：&lt;/strong&gt;&lt;font color="red"&gt;属性名称中的冒号":"被转换为："#cln#";  
分号";"被转换为："#scln#"
&lt;/font&gt;)</desc>
</prop>
<prop>
<name>sell_pt</name>
<type>String</type>
<level>Basic</level>
<desc>产品卖点描述，长度限制20个汉字</desc>
</prop>
<prop>
<name>shop_price</name>
<type>String</type>
<level>Basic</level>
<desc>产品的店内价格</desc>
</prop>
<prop>
<name>standard_price</name>
<type>String</type>
<level>Basic</level>
<desc>产品的标准价格</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<desc>当前状态(0 商家确认 1 屏蔽 3 小二确认 2 未确认 -1 删除)</desc>
</prop>
<prop>
<name>suite_items_str</name>
<type>String</type>
<level>Basic</level>
<desc>套装产品关联的子规格,同时该字段不为空标识该产品是套装产品</desc>
</prop>
<prop>
<name>template_id</name>
<type>Number</type>
<level>Basic</level>
<desc>模板ID</desc>
</prop>
<prop>
<name>tsc</name>
<type>String</type>
<level>Basic</level>
<desc>淘宝标准产品编码</desc>
</prop>
<prop>
<name>vertical_market</name>
<type>Number</type>
<level>Basic</level>
<desc>垂直市场,如：3（3C），4（鞋城）</desc>
</prop>
</props>
</struct>
<struct>
<name>RefundRemindTimeout</name>
<desc>退款超时结构</desc>
<props>
<prop>
<name>exist_timeout</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否存在超时。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>remind_type</name>
<type>Number</type>
<level>Basic</level>
<desc>提醒的类型（退款详情中提示信息的类型）</desc>
</prop>
<prop>
<name>timeout</name>
<type>Date</type>
<level>Basic</level>
<desc>超时时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
</props>
</struct>
<struct>
<name>RefundMessage</name>
<desc>留言/凭证数据结构</desc>
<props>
<prop>
<name>content</name>
<type>String</type>
<level>Basic</level>
<desc>留言内容。最大长度: 400个字节</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>留言创建时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>留言编号</desc>
</prop>
<prop>
<name>message_type</name>
<type>String</type>
<level>Basic</level>
<desc>退款类型：NORMAL（普通留言），RETURN_GOODS_APPROVED（卖家留退货地址时留言）；如果为RETURN_GOODS_APPROVED，则退款留言中有卖家收货地址</desc>
</prop>
<prop>
<name>owner_id</name>
<type>Number</type>
<level>Basic</level>
<desc>留言者编号</desc>
</prop>
<prop>
<name>owner_nick</name>
<type>String</type>
<level>Basic</level>
<desc>留言者昵称</desc>
</prop>
<prop>
<name>owner_role</name>
<type>String</type>
<level>Basic</level>
<desc>留言者身份
1代表买家，2代表卖家，3代表小二</desc>
</prop>
<prop>
<name>pic_urls</name>
<type>PicUrl</type>
<level>Object Array</level>
<desc>凭证附件地址（图片）</desc>
</prop>
<prop>
<name>refund_id</name>
<type>Number</type>
<level>Basic</level>
<desc>退款编号。</desc>
</prop>
</props>
</struct>
<struct>
<name>Order</name>
<desc>订单结构</desc>
<props>
<prop>
<name>adjust_fee</name>
<type>String</type>
<level>Basic</level>
<desc>手工调整金额.格式为:1.01;单位:元;精确到小数点后两位.</desc>
</prop>
<prop>
<name>bind_oid</name>
<type>Number</type>
<level>Basic</level>
<desc>捆绑的子订单号，表示该子订单要和捆绑的子订单一起发货，用于卖家子订单捆绑发货</desc>
</prop>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<desc>买家昵称</desc>
</prop>
<prop>
<name>buyer_rate</name>
<type>Boolean</type>
<level>Basic</level>
<desc>买家是否已评价。可选值：true(已评价)，false(未评价)</desc>
</prop>
<prop>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<desc>交易商品对应的类目ID</desc>
</prop>
<prop>
<name>consign_time</name>
<type>String</type>
<level>Basic</level>
<desc>子订单发货时间，当卖家对订单进行了多次发货，子订单的发货时间和主订单的发货时间可能不一样了，那么就需要以子订单的时间为准。（没有进行多次发货的订单，主订单的发货时间和子订单的发货时间都一样）</desc>
</prop>
<prop>
<name>discount_fee</name>
<type>String</type>
<level>Basic</level>
<desc>子订单级订单优惠金额。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>divide_order_fee</name>
<type>String</type>
<level>Basic</level>
<desc>分摊之后的实付金额</desc>
</prop>
<prop>
<name>end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>子订单的交易结束时间 
说明：子订单有单独的结束时间，与主订单的结束时间可能有所不同，在有退款发起的时候或者是主订单分阶段付款的时候，子订单的结束时间会早于主订单的结束时间，所以开放这个字段便于订单结束状态的判断</desc>
</prop>
<prop>
<name>iid</name>
<type>String</type>
<level>Basic</level>
<desc>商品的字符串编号(注意：iid近期即将废弃，请用num_iid参数)</desc>
</prop>
<prop>
<name>invoice_no</name>
<type>String</type>
<level>Basic</level>
<desc>子订单所在包裹的运单号</desc>
</prop>
<prop>
<name>is_daixiao</name>
<type>Boolean</type>
<level>Basic</level>
<desc>表示订单交易是否含有对应的代销采购单。 
如果该订单中存在一个对应的代销采购单，那么该值为true；反之，该值为false。</desc>
</prop>
<prop>
<name>is_oversold</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否超卖</desc>
</prop>
<prop>
<name>is_service_order</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否是服务订单，是返回true，否返回false。</desc>
</prop>
<prop>
<name>is_www</name>
<type>Boolean</type>
<level>Basic</level>
<desc>子订单是否是www订单</desc>
</prop>
<prop>
<name>item_meal_id</name>
<type>Number</type>
<level>Basic</level>
<desc>套餐ID</desc>
</prop>
<prop>
<name>item_meal_name</name>
<type>String</type>
<level>Basic</level>
<desc>套餐的值。如：M8原装电池:便携支架:M8专用座充:莫凡保护袋</desc>
</prop>
<prop>
<name>logistics_company</name>
<type>String</type>
<level>Basic</level>
<desc>子订单发货的快递公司名称</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>订单修改时间，目前只有taobao.trade.ordersku.update会返回此字段。</desc>
</prop>
<prop>
<name>num</name>
<type>Number</type>
<level>Basic</level>
<desc>购买数量。取值范围:大于零的整数</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<desc>商品数字ID</desc>
</prop>
<prop>
<name>oid</name>
<type>Number</type>
<level>Basic</level>
<desc>子订单编号</desc>
</prop>
<prop>
<name>order_from</name>
<type>String</type>
<level>Basic</level>
<desc>子订单来源,如jhs(聚划算)、taobao(淘宝)、wap(无线)</desc>
</prop>
<prop>
<name>outer_iid</name>
<type>String</type>
<level>Basic</level>
<desc>商家外部编码(可与商家外部系统对接)。外部商家自己定义的商品Item的id，可以通过taobao.items.custom.get获取商品的Item的信息</desc>
</prop>
<prop>
<name>outer_sku_id</name>
<type>String</type>
<level>Basic</level>
<desc>外部网店自己定义的Sku编号</desc>
</prop>
<prop>
<name>part_mjz_discount</name>
<type>String</type>
<level>Basic</level>
<desc>优惠分摊</desc>
</prop>
<prop>
<name>payment</name>
<type>String</type>
<level>Basic</level>
<desc>子订单实付金额。精确到2位小数，单位:元。如:200.07，表示:200元7分。对于多子订单的交易，计算公式如下：payment = price * num + adjust_fee - discount_fee ；单子订单交易，payment与主订单的payment一致，对于退款成功的子订单，由于主订单的优惠分摊金额，会造成该字段可能不为0.00元。建议使用退款前的实付金额减去退款单中的实际退款金额计算。</desc>
</prop>
<prop>
<name>pic_path</name>
<type>String</type>
<level>Basic</level>
<desc>商品图片的绝对路径</desc>
</prop>
<prop>
<name>price</name>
<type>String</type>
<level>Basic</level>
<desc>商品价格。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>refund_id</name>
<type>Number</type>
<level>Basic</level>
<desc>最近退款ID</desc>
</prop>
<prop>
<name>refund_status</name>
<type>String</type>
<level>Basic</level>
<desc>退款状态。退款状态。可选值 WAIT_SELLER_AGREE(买家已经申请退款，等待卖家同意) WAIT_BUYER_RETURN_GOODS(卖家已经同意退款，等待买家退货) WAIT_SELLER_CONFIRM_GOODS(买家已经退货，等待卖家确认收货) SELLER_REFUSE_BUYER(卖家拒绝退款) CLOSED(退款关闭) SUCCESS(退款成功)</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>seller_rate</name>
<type>Boolean</type>
<level>Basic</level>
<desc>卖家是否已评价。可选值：true(已评价)，false(未评价)</desc>
</prop>
<prop>
<name>seller_type</name>
<type>String</type>
<level>Basic</level>
<desc>卖家类型，可选值为：B（商城商家），C（普通卖家）</desc>
</prop>
<prop>
<name>shipping_type</name>
<type>String</type>
<level>Basic</level>
<desc>子订单的运送方式（卖家对订单进行多次发货之后，一个主订单下的子订单的运送方式可能不同，用order.shipping_type来区分子订单的运送方式）</desc>
</prop>
<prop>
<name>sku_id</name>
<type>String</type>
<level>Basic</level>
<desc>商品的最小库存单位Sku的id.可以通过taobao.item.sku.get获取详细的Sku信息</desc>
</prop>
<prop>
<name>sku_properties_name</name>
<type>String</type>
<level>Basic</level>
<desc>SKU的值。如：机身颜色:黑色;手机套餐:官方标配</desc>
</prop>
<prop>
<name>snapshot</name>
<type>String</type>
<level>Basic</level>
<desc>订单快照详细信息</desc>
</prop>
<prop>
<name>snapshot_url</name>
<type>String</type>
<level>Basic</level>
<desc>订单快照URL</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>订单状态（请关注此状态，如果为TRADE_CLOSED_BY_TAOBAO状态，则不要对此订单进行发货，切记啊！）。可选值:  
&lt;ul&gt; 
&lt;li&gt;TRADE_NO_CREATE_PAY(没有创建支付宝交易)  
&lt;li&gt;WAIT_BUYER_PAY(等待买家付款)  
&lt;li&gt;WAIT_SELLER_SEND_GOODS(等待卖家发货,即:买家已付款)  
&lt;li&gt;WAIT_BUYER_CONFIRM_GOODS(等待买家确认收货,即:卖家已发货)  
&lt;li&gt;TRADE_BUYER_SIGNED(买家已签收,货到付款专用)  
&lt;li&gt;TRADE_FINISHED(交易成功)  
&lt;li&gt;TRADE_CLOSED(付款以后用户退款成功，交易自动关闭)  
&lt;li&gt;TRADE_CLOSED_BY_TAOBAO(付款以前，卖家或买家主动关闭交易) 
&lt;li&gt;PAY_PENDING(国际信用卡支付付款确认中)</desc>
</prop>
<prop>
<name>store_code</name>
<type>String</type>
<level>Basic</level>
<desc>发货的仓库编码</desc>
</prop>
<prop>
<name>ticket_expdate_key</name>
<type>String</type>
<level>Basic</level>
<desc>门票有效期的key</desc>
</prop>
<prop>
<name>ticket_outer_id</name>
<type>String</type>
<level>Basic</level>
<desc>对应门票有效期的外部id</desc>
</prop>
<prop>
<name>timeout_action_time</name>
<type>Date</type>
<level>Basic</level>
<desc>订单超时到期时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>商品标题</desc>
</prop>
<prop>
<name>total_fee</name>
<type>String</type>
<level>Basic</level>
<desc>应付金额（商品价格 * 商品数量 + 手工调整金额 - 子订单级订单优惠金额）。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
</props>
</struct>
<struct>
<name>Refund</name>
<desc>退款结构</desc>
<props>
<prop>
<name>address</name>
<type>String</type>
<level>Basic</level>
<desc>卖家收货地址</desc>
</prop>
<prop>
<name>advance_status</name>
<type>Number</type>
<level>Basic</level>
<desc>退款先行垫付默认的未申请状态 0; 
退款先行垫付申请中  1; 
退款先行垫付，垫付完成 2; 
退款先行垫付，卖家拒绝收货 3; 
退款先行垫付，垫付关闭 4; 
退款先行垫付，垫付分账成功 5;</desc>
</prop>
<prop>
<name>alipay_no</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝交易号</desc>
</prop>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<desc>买家昵称</desc>
</prop>
<prop>
<name>company_name</name>
<type>String</type>
<level>Basic</level>
<desc>物流公司名称</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>退款申请时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>cs_status</name>
<type>Number</type>
<level>Basic</level>
<desc>不需客服介入1; 
需要客服介入2; 
客服已经介入3; 
客服初审完成 4; 
客服主管复审失败5; 
客服处理完成6;</desc>
</prop>
<prop>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<desc>退款说明</desc>
</prop>
<prop>
<name>good_return_time</name>
<type>Date</type>
<level>Basic</level>
<desc>退货时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>good_status</name>
<type>String</type>
<level>Basic</level>
<desc>货物状态。可选值 
BUYER_NOT_RECEIVED (买家未收到货)  
BUYER_RECEIVED (买家已收到货)  
BUYER_RETURNED_GOODS (买家已退货)</desc>
</prop>
<prop>
<name>has_good_return</name>
<type>Boolean</type>
<level>Basic</level>
<desc>买家是否需要退货。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>iid</name>
<type>String</type>
<level>Basic</level>
<desc>申请退款的商品字符串编号(注意：iid近期即将废弃，请用num_iid参数)</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>更新时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>num</name>
<type>Number</type>
<level>Basic</level>
<desc>商品购买数量</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<desc>申请退款的商品数字编号</desc>
</prop>
<prop>
<name>oid</name>
<type>Number</type>
<level>Basic</level>
<desc>子订单号。如果是单笔交易oid会等于tid</desc>
</prop>
<prop>
<name>order_status</name>
<type>String</type>
<level>Basic</level>
<desc>退款对应的订单交易状态。 
可选值 
TRADE_NO_CREATE_PAY(没有创建支付宝交易)  
WAIT_BUYER_PAY(等待买家付款)  
WAIT_SELLER_SEND_GOODS(等待卖家发货,即:买家已付款)  
WAIT_BUYER_CONFIRM_GOODS(等待买家确认收货,即:卖家已发货)  
TRADE_BUYER_SIGNED(买家已签收,货到付款专用)  
TRADE_FINISHED(交易成功)  
TRADE_CLOSED(交易关闭)  
TRADE_CLOSED_BY_TAOBAO(交易被淘宝关闭)  
ALL_WAIT_PAY(包含：WAIT_BUYER_PAY、TRADE_NO_CREATE_PAY)  
ALL_CLOSED(包含：TRADE_CLOSED、TRADE_CLOSED_BY_TAOBAO)  
取自"http://open.taobao.com/dev/index.php/%E4%BA%A4%E6%98%93%E7%8A%B6%E6%80%81"</desc>
</prop>
<prop>
<name>payment</name>
<type>String</type>
<level>Basic</level>
<desc>支付给卖家的金额(交易总金额-退还给买家的金额)。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>price</name>
<type>String</type>
<level>Basic</level>
<desc>商品价格。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>reason</name>
<type>String</type>
<level>Basic</level>
<desc>退款原因</desc>
</prop>
<prop>
<name>refund_fee</name>
<type>String</type>
<level>Basic</level>
<desc>退还金额(退还给买家的金额)。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>refund_id</name>
<type>Number</type>
<level>Basic</level>
<desc>退款单号</desc>
</prop>
<prop>
<name>refund_remind_timeout</name>
<type>RefundRemindTimeout</type>
<level>Object</level>
<desc>退款超时结构RefundRemindTimeout</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>shipping_type</name>
<type>String</type>
<level>Basic</level>
<desc>物流方式.可选值:free(卖家包邮),post(平邮),express(快递),ems(EMS).</desc>
</prop>
<prop>
<name>sid</name>
<type>String</type>
<level>Basic</level>
<desc>退货运单号</desc>
</prop>
<prop>
<name>split_seller_fee</name>
<type>String</type>
<level>Basic</level>
<desc>分账给卖家的钱</desc>
</prop>
<prop>
<name>split_taobao_fee</name>
<type>String</type>
<level>Basic</level>
<desc>分账给淘宝的钱</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>退款状态。 
可选值 
WAIT_SELLER_AGREE(买家已经申请退款，等待卖家同意)  
WAIT_BUYER_RETURN_GOODS(卖家已经同意退款，等待买家退货)  
WAIT_SELLER_CONFIRM_GOODS(买家已经退货，等待卖家确认收货)  
SELLER_REFUSE_BUYER(卖家拒绝退款)  
CLOSED(退款关闭)  
SUCCESS(退款成功)</desc>
</prop>
<prop>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<desc>淘宝交易单号</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>商品标题</desc>
</prop>
<prop>
<name>total_fee</name>
<type>String</type>
<level>Basic</level>
<desc>交易总金额。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
</props>
</struct>
<struct>
<name>Trade</name>
<desc>交易结构</desc>
<props>
<prop>
<name>adjust_fee</name>
<type>String</type>
<level>Basic</level>
<desc>卖家手工调整金额，精确到2位小数，单位：元。如：200.07，表示：200元7分。来源于订单价格修改，如果有多笔子订单的时候，这个为0，单笔的话则跟[order].adjust_fee一样</desc>
</prop>
<prop>
<name>alipay_id</name>
<type>Number</type>
<level>Basic</level>
<desc>买家的支付宝id号，在UIC中有记录，买家支付宝的唯一标示，不因为买家更换Email账号而改变。</desc>
</prop>
<prop>
<name>alipay_no</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝交易号，如：2009112081173831</desc>
</prop>
<prop>
<name>alipay_point</name>
<type>Number</type>
<level>Basic</level>
<desc>付款时使用的支付宝积分的额度,单位分，比如返回1，则为1分钱</desc>
</prop>
<prop>
<name>alipay_url</name>
<type>String</type>
<level>Basic</level>
<desc>创建交易接口成功后，返回的支付url</desc>
</prop>
<prop>
<name>alipay_warn_msg</name>
<type>String</type>
<level>Basic</level>
<desc>淘宝下单成功了,但由于某种错误支付宝订单没有创建时返回的信息。taobao.trade.add接口专用</desc>
</prop>
<prop>
<name>area_id</name>
<type>String</type>
<level>Basic</level>
<desc>区域id，代表订单下单的区位码，区位码是通过省市区转换而来，通过区位码能精确到区内的划分，比如310012是杭州市西湖区华星路</desc>
</prop>
<prop>
<name>arrive_cut_time</name>
<type>String</type>
<level>Basic</level>
<desc>物流到货时效截单时间，格式 HH:mm</desc>
</prop>
<prop>
<name>arrive_interval</name>
<type>Number</type>
<level>Basic</level>
<desc>物流到货时效，单位天</desc>
</prop>
<prop>
<name>async_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>同步到卖家库的时间，taobao.trades.sold.incrementv.get接口返回此字段</desc>
</prop>
<prop>
<name>available_confirm_fee</name>
<type>String</type>
<level>Basic</level>
<desc>交易中剩余的确认收货金额（这个金额会随着子订单确认收货而不断减少，交易成功后会变为零）。精确到2位小数;单位:元。如:200.07，表示:200 元7分</desc>
</prop>
<prop>
<name>buyer_alipay_no</name>
<type>String</type>
<level>Basic</level>
<desc>买家支付宝账号</desc>
</prop>
<prop>
<name>buyer_area</name>
<type>String</type>
<level>Basic</level>
<desc>买家下单的地区</desc>
</prop>
<prop>
<name>buyer_cod_fee</name>
<type>String</type>
<level>Basic</level>
<desc>买家货到付款服务费。精确到2位小数;单位:元。如:12.07，表示:12元7分</desc>
</prop>
<prop>
<name>buyer_email</name>
<type>String</type>
<level>Basic</level>
<desc>买家邮件地址</desc>
</prop>
<prop>
<name>buyer_flag</name>
<type>Number</type>
<level>Basic</level>
<desc>买家备注旗帜（与淘宝网上订单的买家备注旗帜对应，只有买家才能查看该字段）
红、黄、绿、蓝、紫 分别对应 1、2、3、4、5</desc>
</prop>
<prop>
<name>buyer_memo</name>
<type>String</type>
<level>Basic</level>
<desc>买家备注（与淘宝网上订单的买家备注对应，只有买家才能查看该字段）</desc>
</prop>
<prop>
<name>buyer_message</name>
<type>String</type>
<level>Basic</level>
<desc>买家留言</desc>
</prop>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<desc>买家昵称</desc>
</prop>
<prop>
<name>buyer_obtain_point_fee</name>
<type>Number</type>
<level>Basic</level>
<desc>买家获得积分,返点的积分。格式:100;单位:个。返点的积分要交易成功之后才能获得。</desc>
</prop>
<prop>
<name>buyer_rate</name>
<type>Boolean</type>
<level>Basic</level>
<desc>买家是否已评价。可选值:true(已评价),false(未评价)。如买家只评价未打分，此字段仍返回false</desc>
</prop>
<prop>
<name>can_rate</name>
<type>Boolean</type>
<level>Basic</level>
<desc>买家可以通过此字段查询是否当前交易可以评论，can_rate=true可以评价，false则不能评价。</desc>
</prop>
<prop>
<name>cod_fee</name>
<type>String</type>
<level>Basic</level>
<desc>货到付款服务费。精确到2位小数;单位:元。如:12.07，表示:12元7分。</desc>
</prop>
<prop>
<name>cod_status</name>
<type>String</type>
<level>Basic</level>
<desc>货到付款物流状态。
初始状态 NEW_CREATED,
接单成功 ACCEPTED_BY_COMPANY,
接单失败 REJECTED_BY_COMPANY,
接单超时 RECIEVE_TIMEOUT,
揽收成功 TAKEN_IN_SUCCESS,
揽收失败 TAKEN_IN_FAILED,
揽收超时 TAKEN_TIMEOUT,
签收成功 SIGN_IN,
签收失败 REJECTED_BY_OTHER_SIDE,
订单等待发送给物流公司 WAITING_TO_BE_SENT,
用户取消物流订单 CANCELED</desc>
</prop>
<prop>
<name>commission_fee</name>
<type>String</type>
<level>Basic</level>
<desc>交易佣金。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>consign_interval</name>
<type>Number</type>
<level>Basic</level>
<desc>物流发货时效，单位小时</desc>
</prop>
<prop>
<name>consign_time</name>
<type>Date</type>
<level>Basic</level>
<desc>卖家发货时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>交易创建时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>credit_card_fee</name>
<type>String</type>
<level>Basic</level>
<desc>使用信用卡支付金额数</desc>
</prop>
<prop>
<name>discount_fee</name>
<type>String</type>
<level>Basic</level>
<desc>建议使用trade.promotion_details查询系统优惠
系统优惠金额（如打折，VIP，满就送等），精确到2位小数，单位：元。如：200.07，表示：200元7分</desc>
</prop>
<prop>
<name>end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>交易结束时间。交易成功时间(更新交易状态为成功的同时更新)/确认收货时间或者交易关闭时间 。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>eticket_ext</name>
<type>String</type>
<level>Basic</level>
<desc>电子凭证的垂直信息</desc>
</prop>
<prop>
<name>express_agency_fee</name>
<type>String</type>
<level>Basic</level>
<desc>快递代收款。精确到2位小数;单位:元。如:212.07，表示:212元7分</desc>
</prop>
<prop>
<name>has_buyer_message</name>
<type>Boolean</type>
<level>Basic</level>
<desc>判断订单是否有买家留言，有买家留言返回true，否则返回false</desc>
</prop>
<prop>
<name>has_post_fee</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否包含邮费。与available_confirm_fee同时使用。可选值:true(包含),false(不包含)</desc>
</prop>
<prop>
<name>has_yfx</name>
<type>Boolean</type>
<level>Basic</level>
<desc>订单中是否包含运费险订单，如果包含运费险订单返回true，不包含运费险订单，返回false</desc>
</prop>
<prop>
<name>iid</name>
<type>String</type>
<level>Basic</level>
<desc>商品字符串编号(注意：iid近期即将废弃，请用num_iid参数)</desc>
</prop>
<prop>
<name>invoice_name</name>
<type>String</type>
<level>Basic</level>
<desc>发票抬头</desc>
</prop>
<prop>
<name>invoice_type</name>
<type>String</type>
<level>Basic</level>
<desc>发票类型</desc>
</prop>
<prop>
<name>is_3D</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否是3D淘宝交易</desc>
</prop>
<prop>
<name>is_brand_sale</name>
<type>Boolean</type>
<level>Basic</level>
<desc>表示是否是品牌特卖（常规特卖，不包括特卖惠和特实惠）订单，如果是返回true，如果不是返回false。当此字段与is_force_wlb均为true时，订单强制物流宝发货。</desc>
</prop>
<prop>
<name>is_daixiao</name>
<type>Boolean</type>
<level>Basic</level>
<desc>表示订单交易是否含有对应的代销采购单。 
如果该订单中存在一个对应的代销采购单，那么该值为true；反之，该值为false。</desc>
</prop>
<prop>
<name>is_force_wlb</name>
<type>Boolean</type>
<level>Basic</level>
<desc>订单是否强制使用物流宝发货。当此字段与is_brand_sale均为true时，订单强制物流宝发货。此字段为false时，该订单根据流转规则设置可以使用物流宝或者常规方式发货</desc>
</prop>
<prop>
<name>is_lgtype</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否保障速递，如果为true，则为保障速递订单，使用线下联系发货接口发货，如果未false，则该订单非保障速递，根据卖家设置的订单流转规则可使用物流宝或者常规物流发货。</desc>
</prop>
<prop>
<name>is_part_consign</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否是多次发货的订单 
如果卖家对订单进行多次发货，则为true 
否则为false</desc>
</prop>
<prop>
<name>is_wt</name>
<type>Boolean</type>
<level>Basic</level>
<desc>表示订单交易是否网厅订单。 如果该订单是网厅订单，那么该值为true；反之，该值为false。</desc>
</prop>
<prop>
<name>lg_aging</name>
<type>String</type>
<level>Basic</level>
<desc>次日达订单送达时间</desc>
</prop>
<prop>
<name>lg_aging_type</name>
<type>String</type>
<level>Basic</level>
<desc>次日达，三日达等送达类型</desc>
</prop>
<prop>
<name>mark_desc</name>
<type>String</type>
<level>Basic</level>
<desc>订单出现异常问题的时候，给予用户的描述,没有异常的时候，此值为空</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>交易修改时间(用户对订单的任何修改都会更新此字段)。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>num</name>
<type>Number</type>
<level>Basic</level>
<desc>商品购买数量。取值范围：大于零的整数,对于一个trade对应多个order的时候（一笔主订单，对应多笔子订单），num=0，num是一个跟商品关联的属性，一笔订单对应多比子订单的时候，主订单上的num无意义。</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<desc>商品数字编号</desc>
</prop>
<prop>
<name>nut_feature</name>
<type>String</type>
<level>Basic</level>
<desc>卡易售垂直表信息，去除下单ip之后的结果</desc>
</prop>
<prop>
<name>o2o</name>
<type>String</type>
<level>Basic</level>
<desc>导购宝=crm</desc>
</prop>
<prop>
<name>o2o_delivery</name>
<type>String</type>
<level>Basic</level>
<desc>导购宝提货方式，inshop：店内提货，online：线上发货</desc>
</prop>
<prop>
<name>o2o_guide_id</name>
<type>String</type>
<level>Basic</level>
<desc>导购员id</desc>
</prop>
<prop>
<name>o2o_guide_name</name>
<type>String</type>
<level>Basic</level>
<desc>导购员名称</desc>
</prop>
<prop>
<name>o2o_out_trade_id</name>
<type>String</type>
<level>Basic</level>
<desc>外部订单号</desc>
</prop>
<prop>
<name>o2o_shop_id</name>
<type>String</type>
<level>Basic</level>
<desc>导购员门店id</desc>
</prop>
<prop>
<name>o2o_shop_name</name>
<type>String</type>
<level>Basic</level>
<desc>导购门店名称</desc>
</prop>
<prop>
<name>orders</name>
<type>Order</type>
<level>Object Array</level>
<desc>订单列表</desc>
</prop>
<prop>
<name>pay_time</name>
<type>Date</type>
<level>Basic</level>
<desc>付款时间。格式:yyyy-MM-dd HH:mm:ss。订单的付款时间即为物流订单的创建时间。</desc>
</prop>
<prop>
<name>payment</name>
<type>String</type>
<level>Basic</level>
<desc>实付金额。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>pcc_af</name>
<type>Number</type>
<level>Basic</level>
<desc>天猫点券卡实付款金额,单位分</desc>
</prop>
<prop>
<name>pic_path</name>
<type>String</type>
<level>Basic</level>
<desc>商品图片绝对途径</desc>
</prop>
<prop>
<name>point_fee</name>
<type>Number</type>
<level>Basic</level>
<desc>买家使用积分,下单时生成，且一直不变。格式:100;单位:个.</desc>
</prop>
<prop>
<name>post_fee</name>
<type>String</type>
<level>Basic</level>
<desc>邮费。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>price</name>
<type>String</type>
<level>Basic</level>
<desc>商品价格。精确到2位小数；单位：元。如：200.07，表示：200元7分</desc>
</prop>
<prop>
<name>promotion</name>
<type>String</type>
<level>Basic</level>
<desc>交易促销详细信息</desc>
</prop>
<prop>
<name>promotion_details</name>
<type>PromotionDetail</type>
<level>Object Array</level>
<desc>优惠详情</desc>
</prop>
<prop>
<name>real_point_fee</name>
<type>Number</type>
<level>Basic</level>
<desc>买家实际使用积分（扣除部分退款使用的积分），交易完成后生成（交易成功或关闭），交易未完成时该字段值为0。格式:100;单位:个</desc>
</prop>
<prop>
<name>received_payment</name>
<type>String</type>
<level>Basic</level>
<desc>卖家实际收到的支付宝打款金额（由于子订单可以部分确认收货，这个金额会随着子订单的确认收货而不断增加，交易成功后等于买家实付款减去退款金额）。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>receiver_address</name>
<type>String</type>
<level>Basic</level>
<desc>收货人的详细地址</desc>
</prop>
<prop>
<name>receiver_city</name>
<type>String</type>
<level>Basic</level>
<desc>收货人的所在城市&lt;br&gt;
注：因为国家对于城市和地区的划分的有：省直辖市和省直辖县级行政区（区级别的）划分的，淘宝这边根据这个差异保存在不同字段里面
比如：广东广州：广州属于一个直辖市是放在的receiver_city的字段里面；而河南济源：济源属于省直辖县级行政区划分，是区级别的，放在了receiver_district里面
&lt;br&gt;建议：程序依赖于城市字段做物流等判断的操作，最好加一个判断逻辑：如果返回值里面只有receiver_district参数，该参数作为城市</desc>
</prop>
<prop>
<name>receiver_district</name>
<type>String</type>
<level>Basic</level>
<desc>收货人的所在地区&lt;br&gt;
注：因为国家对于城市和地区的划分的有：省直辖市和省直辖县级行政区（区级别的）划分的，淘宝这边根据这个差异保存在不同字段里面
比如：广东广州：广州属于一个直辖市是放在的receiver_city的字段里面；而河南济源：济源属于省直辖县级行政区划分，是区级别的，放在了receiver_district里面
&lt;br&gt;建议：程序依赖于城市字段做物流等判断的操作，最好加一个判断逻辑：如果返回值里面只有receiver_district参数，该参数作为城市</desc>
</prop>
<prop>
<name>receiver_mobile</name>
<type>String</type>
<level>Basic</level>
<desc>收货人的手机号码</desc>
</prop>
<prop>
<name>receiver_name</name>
<type>String</type>
<level>Basic</level>
<desc>收货人的姓名</desc>
</prop>
<prop>
<name>receiver_phone</name>
<type>String</type>
<level>Basic</level>
<desc>收货人的电话号码</desc>
</prop>
<prop>
<name>receiver_state</name>
<type>String</type>
<level>Basic</level>
<desc>收货人的所在省份</desc>
</prop>
<prop>
<name>receiver_zip</name>
<type>String</type>
<level>Basic</level>
<desc>收货人的邮编</desc>
</prop>
<prop>
<name>seller_alipay_no</name>
<type>String</type>
<level>Basic</level>
<desc>卖家支付宝账号</desc>
</prop>
<prop>
<name>seller_can_rate</name>
<type>Boolean</type>
<level>Basic</level>
<desc>卖家是否可以对订单进行评价</desc>
</prop>
<prop>
<name>seller_cod_fee</name>
<type>String</type>
<level>Basic</level>
<desc>卖家货到付款服务费。精确到2位小数;单位:元。如:12.07，表示:12元7分。卖家不承担服务费的订单：未发货的订单获取服务费为0，发货后就能获取到正确值。</desc>
</prop>
<prop>
<name>seller_email</name>
<type>String</type>
<level>Basic</level>
<desc>卖家邮件地址</desc>
</prop>
<prop>
<name>seller_flag</name>
<type>Number</type>
<level>Basic</level>
<desc>卖家备注旗帜（与淘宝网上订单的卖家备注旗帜对应，只有卖家才能查看该字段）
红、黄、绿、蓝、紫 分别对应 1、2、3、4、5</desc>
</prop>
<prop>
<name>seller_memo</name>
<type>String</type>
<level>Basic</level>
<desc>卖家备注（与淘宝网上订单的卖家备注对应，只有卖家才能查看该字段）</desc>
</prop>
<prop>
<name>seller_mobile</name>
<type>String</type>
<level>Basic</level>
<desc>卖家手机</desc>
</prop>
<prop>
<name>seller_name</name>
<type>String</type>
<level>Basic</level>
<desc>卖家姓名</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>seller_phone</name>
<type>String</type>
<level>Basic</level>
<desc>卖家电话</desc>
</prop>
<prop>
<name>seller_rate</name>
<type>Boolean</type>
<level>Basic</level>
<desc>卖家是否已评价。可选值:true(已评价),false(未评价)</desc>
</prop>
<prop>
<name>send_time</name>
<type>String</type>
<level>Basic</level>
<desc>订单将在此时间前发出，主要用于预售订单</desc>
</prop>
<prop>
<name>service_orders</name>
<type>ServiceOrder</type>
<level>Object Array</level>
<desc>服务子订单列表</desc>
</prop>
<prop>
<name>service_tags</name>
<type>LogisticsTag</type>
<level>Object Array</level>
<desc>物流标签</desc>
</prop>
<prop>
<name>shipping_type</name>
<type>String</type>
<level>Basic</level>
<desc>创建交易时的物流方式（交易完成前，物流方式有可能改变，但系统里的这个字段一直不变）。可选值：free(卖家包邮),post(平邮),express(快递),ems(EMS),virtual(虚拟发货)，25(次日必达)，26(预约配送)。</desc>
</prop>
<prop>
<name>snapshot</name>
<type>String</type>
<level>Basic</level>
<desc>交易快照详细信息</desc>
</prop>
<prop>
<name>snapshot_url</name>
<type>String</type>
<level>Basic</level>
<desc>交易快照地址</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>交易状态。可选值: 
    * TRADE_NO_CREATE_PAY(没有创建支付宝交易) 
    * WAIT_BUYER_PAY(等待买家付款) 
    * SELLER_CONSIGNED_PART(卖家部分发货) 
    * WAIT_SELLER_SEND_GOODS(等待卖家发货,即:买家已付款) 
    * WAIT_BUYER_CONFIRM_GOODS(等待买家确认收货,即:卖家已发货) 
    * TRADE_BUYER_SIGNED(买家已签收,货到付款专用) 
    * TRADE_FINISHED(交易成功) 
    * TRADE_CLOSED(付款以后用户退款成功，交易自动关闭) 
    * TRADE_CLOSED_BY_TAOBAO(付款以前，卖家或买家主动关闭交易) 
    * PAY_PENDING(国际信用卡支付付款确认中) 
    * WAIT_PRE_AUTH_CONFIRM(0元购合约中)</desc>
</prop>
<prop>
<name>step_paid_fee</name>
<type>String</type>
<level>Basic</level>
<desc>分阶段付款的已付金额（万人团订单已付金额）</desc>
</prop>
<prop>
<name>step_trade_status</name>
<type>String</type>
<level>Basic</level>
<desc>分阶段付款的订单状态（例如万人团订单等），目前有三返回状态 
FRONT_NOPAID_FINAL_NOPAID(定金未付尾款未付)，FRONT_PAID_FINAL_NOPAID(定金已付尾款未付)，FRONT_PAID_FINAL_PAID(定金和尾款都付)</desc>
</prop>
<prop>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<desc>交易编号 (父订单的交易编号)</desc>
</prop>
<prop>
<name>timeout_action_time</name>
<type>Date</type>
<level>Basic</level>
<desc>超时到期时间。格式:yyyy-MM-dd HH:mm:ss。业务规则： 
前提条件：只有在买家已付款，卖家已发货的情况下才有效 
如果申请了退款，那么超时会落在子订单上；比如说3笔ABC，A申请了，那么返回的是BC的列表, 主定单不存在 
如果没有申请过退款，那么超时会挂在主定单上；比如ABC，返回主定单，ABC的超时和主定单相同</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>交易标题，以店铺名作为此标题的值。注:taobao.trades.get接口返回的Trade中的title是商品名称</desc>
</prop>
<prop>
<name>total_fee</name>
<type>String</type>
<level>Basic</level>
<desc>商品金额（商品价格乘以数量的总金额）。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>trade_from</name>
<type>String</type>
<level>Basic</level>
<desc>交易内部来源。 
WAP(手机);HITAO(嗨淘);TOP(TOP平台);TAOBAO(普通淘宝);JHS(聚划算) 
一笔订单可能同时有以上多个标记，则以逗号分隔</desc>
</prop>
<prop>
<name>trade_memo</name>
<type>String</type>
<level>Basic</level>
<desc>交易备注。</desc>
</prop>
<prop>
<name>trade_source</name>
<type>String</type>
<level>Basic</level>
<desc>交易外部来源：ownshop(商家官网)</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>交易类型列表，同时查询多种交易类型可用逗号分隔。默认同时查询guarantee_trade, auto_delivery, ec, cod的4种交易类型的数据 
可选值 
fixed(一口价) 
auction(拍卖) 
guarantee_trade(一口价、拍卖) 
auto_delivery(自动发货) 
independent_simple_trade(旺店入门版交易) 
independent_shop_trade(旺店标准版交易) 
ec(直冲) 
cod(货到付款) 
fenxiao(分销) 
game_equipment(游戏装备) 
shopex_trade(ShopEX交易) 
netcn_trade(万网交易) 
external_trade(统一外部交易)
step (万人团)
nopaid(无付款订单)
pre_auth_type(预授权0元购机交易)</desc>
</prop>
<prop>
<name>yfx_fee</name>
<type>String</type>
<level>Basic</level>
<desc>订单的运费险，单位为元</desc>
</prop>
<prop>
<name>yfx_id</name>
<type>String</type>
<level>Basic</level>
<desc>运费险支付号</desc>
</prop>
<prop>
<name>yfx_type</name>
<type>String</type>
<level>Basic</level>
<desc>运费险类型</desc>
</prop>
<prop>
<name>zero_purchase</name>
<type>Boolean</type>
<level>Basic</level>
<desc>在返回的trade对象上专门增加一个字段zero_purchase来区分，这个为true的就是0元购机预授权交易</desc>
</prop>
</props>
</struct>
<struct>
<name>DeliveryTemplate</name>
<desc>运费模板对象</desc>
<props>
<prop>
<name>address</name>
<type>String</type>
<level>Basic</level>
<desc>运费模板上设置的发货地址</desc>
</prop>
<prop>
<name>assumer</name>
<type>Number</type>
<level>Basic</level>
<desc>可选值：0,1,2,3&lt;br&gt;,说明如下&lt;br&gt;
1)买家承担运费的模版&lt;br&gt;
0：买家承担服务费&lt;br&gt;
1: 卖家承担服务费&lt;br&gt;
2)卖家承担运费的模版&lt;br&gt;
2:卖家承担运费的模版（集市），卖家承担服务费&lt;br&gt;
3:卖家承担运费的模版（天猫），卖家承担服务费&lt;br&gt;</desc>
</prop>
<prop>
<name>consign_area_id</name>
<type>Number</type>
<level>Basic</level>
<desc>该模板上设置的卖家发货地址区域ID，如：address为浙江省杭州市西湖去文三路XX号那么这个consign_area_id的值就是西湖区的ID</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>模板创建时间</desc>
</prop>
<prop>
<name>fee_list</name>
<type>TopFee</type>
<level>Object Array</level>
<desc>运费模板中运费详细信息对象，包含默认运费和指定地区运费</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>模板修改时间</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>模板名称，长度不能超过25个字节</desc>
</prop>
<prop>
<name>supports</name>
<type>String</type>
<level>Basic</level>
<desc>物流服务模板支持增值服务列表，多个用分号隔开。cod:货到付款 mops：刷卡付款</desc>
</prop>
<prop>
<name>template_id</name>
<type>Number</type>
<level>Basic</level>
<desc>模块ID</desc>
</prop>
<prop>
<name>valuation</name>
<type>Number</type>
<level>Basic</level>
<desc>可选值：0 
说明： 
0:表示按宝贝件数计算运费 
&lt;br/&gt;&lt;br/&gt; 
1:表示按宝贝重量计算运费 
&lt;br/&gt;&lt;br/&gt; 
3:表示按宝贝体积计算运费</desc>
</prop>
</props>
</struct>
<struct>
<name>TopFee</name>
<desc>运费模板中运费信息对象</desc>
<props>
<prop>
<name>add_fee</name>
<type>String</type>
<level>Basic</level>
<desc>增费：输入0.00-999.99（最多包含两位小数） 不能为空不输入运费时必须输入0</desc>
</prop>
<prop>
<name>add_standard</name>
<type>String</type>
<level>Basic</level>
<desc>增费标准：当valuation(记价方式)为0时输入1-9999范围内的整数</desc>
</prop>
<prop>
<name>destination</name>
<type>String</type>
<level>Basic</level>
<desc>邮费子项涉及的地区,多个地区用逗号连接数量串;可以用taobao.areas.get接口获取.或者参考:http://www.stats.gov.cn/tjbz/xzqhdm/t20080215_402462675.htm 例 (110000,310000,320000,330000).就代表邮费子项涉 及(北京,上海,江苏,浙江)四个地区.填写时要注意对照地区代码值,如果填入错误地区代码,将会出现错误信息.</desc>
</prop>
<prop>
<name>service_type</name>
<type>String</type>
<level>Basic</level>
<desc>可选值：post:平邮; cod:货到付款; ems:EMS; express:快递公司</desc>
</prop>
<prop>
<name>start_fee</name>
<type>String</type>
<level>Basic</level>
<desc>首费：输入0.01-999.99（最多包含两位小数） 不能为空也不能为0</desc>
</prop>
<prop>
<name>start_standard</name>
<type>String</type>
<level>Basic</level>
<desc>首费标准：当valuation(记价方式)为0时输入1-9999范围内的整数</desc>
</prop>
</props>
</struct>
<struct>
<name>Sku</name>
<desc>Sku结构</desc>
<props>
<prop>
<name>barcode</name>
<type>String</type>
<level>Basic</level>
<desc>商品级别的条形码</desc>
</prop>
<prop>
<name>change_prop</name>
<type>String</type>
<level>Basic</level>
<desc>基础色数据</desc>
</prop>
<prop>
<name>created</name>
<type>String</type>
<level>Basic</level>
<desc>sku创建日期 时间格式：yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>iid</name>
<type>String</type>
<level>Basic</level>
<desc>sku所属商品id(注意：iid近期即将废弃，请用num_iid参数)</desc>
</prop>
<prop>
<name>modified</name>
<type>String</type>
<level>Basic</level>
<desc>sku最后修改日期 时间格式：yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<desc>sku所属商品数字id</desc>
</prop>
<prop>
<name>outer_id</name>
<type>String</type>
<level>Basic</level>
<desc>商家设置的外部id。天猫和集市的卖家，需要登录才能获取到自己的商家编码，不能获取到他人的商家编码。</desc>
</prop>
<prop>
<name>price</name>
<type>String</type>
<level>Basic</level>
<desc>属于这个sku的商品的价格 取值范围:0-100000000;精确到2位小数;单位:元。如:200.07，表示:200元7分。</desc>
</prop>
<prop>
<name>properties</name>
<type>String</type>
<level>Basic</level>
<desc>sku的销售属性组合字符串（颜色，大小，等等，可通过类目API获取某类目下的销售属性）,格式是p1:v1;p2:v2</desc>
</prop>
<prop>
<name>properties_name</name>
<type>String</type>
<level>Basic</level>
<desc>sku所对应的销售属性的中文名字串，格式如：pid1:vid1:pid_name1:vid_name1;pid2:vid2:pid_name2:vid_name2……</desc>
</prop>
<prop>
<name>quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>属于这个sku的商品的数量，</desc>
</prop>
<prop>
<name>sku_delivery_time</name>
<type>String</type>
<level>Basic</level>
<desc>sku级别发货时间</desc>
</prop>
<prop>
<name>sku_id</name>
<type>Number</type>
<level>Basic</level>
<desc>sku的id</desc>
</prop>
<prop>
<name>sku_spec_id</name>
<type>Number</type>
<level>Basic</level>
<desc>表示SKu上的产品规格信息</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>sku状态。 normal:正常 ；delete:删除</desc>
</prop>
<prop>
<name>with_hold_quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>商品在付款减库存的状态下，该sku上未付款的订单数量</desc>
</prop>
</props>
</struct>
<struct>
<name>Video</name>
<desc>商品视频关联记录</desc>
<props>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>视频关联记录创建时间（格式：yyyy-MM-dd HH:mm:ss）</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>视频关联记录的id，和商品相对应</desc>
</prop>
<prop>
<name>iid</name>
<type>String</type>
<level>Basic</level>
<desc>视频记录关联的商品的数字id(注意：iid近期即将废弃，请用num_iid参数)</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>视频关联记录修改时间（格式：yyyy-MM-dd HH:mm:ss）</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<desc>视频记录所关联的商品的数字id</desc>
</prop>
<prop>
<name>url</name>
<type>String</type>
<level>Basic</level>
<desc>video的url连接地址。淘秀里视频记录里面存储的url地址</desc>
</prop>
<prop>
<name>video_id</name>
<type>Number</type>
<level>Basic</level>
<desc>video的id，对应于视频在淘秀的存储记录</desc>
</prop>
</props>
</struct>
<struct>
<name>ShopScore</name>
<desc>店铺动态评分信息</desc>
<props>
<prop>
<name>delivery_score</name>
<type>String</type>
<level>Basic</level>
<desc>发货速度评分</desc>
</prop>
<prop>
<name>item_score</name>
<type>String</type>
<level>Basic</level>
<desc>商品描述评分</desc>
</prop>
<prop>
<name>service_score</name>
<type>String</type>
<level>Basic</level>
<desc>服务态度评分</desc>
</prop>
</props>
</struct>
<struct>
<name>SellerCat</name>
<desc>店铺内卖家自定义类目</desc>
<props>
<prop>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<desc>卖家自定义类目编号</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间。格式：yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间。格式：yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>卖家自定义类目名称</desc>
</prop>
<prop>
<name>parent_cid</name>
<type>Number</type>
<level>Basic</level>
<desc>父类目编号，值等于0：表示此类目为店铺下的一级类目，值不等于0：表示此类目有父类目</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>链接图片地址</desc>
</prop>
<prop>
<name>sort_order</name>
<type>Number</type>
<level>Basic</level>
<desc>该类目在页面上的排序位置</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>店铺类目类型：可选值：manual_type：手动分类，new_type：新品上价， tree_type：二三级类目树 ，property_type：属性叶子类目树， brand_type：品牌推广</desc>
</prop>
</props>
</struct>
<struct>
<name>LoginLog</name>
<desc>登录日志</desc>
<props>
<prop>
<name>time</name>
<type>String</type>
<level>Basic</level>
<desc>用户登录或退出客户端的时间</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>标志用户登录或退出。
0表示登陆，1表示退出。</desc>
</prop>
</props>
</struct>
<struct>
<name>Ticket</name>
<desc>产品规格审核信息</desc>
<props>
<prop>
<name>audit_seller_id</name>
<type>Number</type>
<level>Basic</level>
<desc>如果产品规格，需要商家审核，为商家审核用户ID</desc>
</prop>
<prop>
<name>create_user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>创建人ID</desc>
</prop>
<prop>
<name>gmt_create</name>
<type>Date</type>
<level>Basic</level>
<desc>产品规格申请时间</desc>
</prop>
<prop>
<name>gmt_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>产品规格审核单最后修改时间</desc>
</prop>
<prop>
<name>memo</name>
<type>String</type>
<level>Basic</level>
<desc>关于审核原因，更详细的说明</desc>
</prop>
<prop>
<name>reason</name>
<type>String</type>
<level>Basic</level>
<desc>审核原因</desc>
</prop>
<prop>
<name>spec_id</name>
<type>Number</type>
<level>Basic</level>
<desc>产品规格ID</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<desc>1, "商家确认" 
2, "商家拒绝" 
3, "小二确认" 
4, "小二拒绝" 
5, "待商家处理" 
6, "商家审核超时" 
7, "待小二审核"</desc>
</prop>
</props>
</struct>
<struct>
<name>EvalDetail</name>
<desc>评价详细</desc>
<props>
<prop>
<name>eval_code</name>
<type>Number</type>
<level>Basic</level>
<desc>评价详细： 
1 非常满意 
2 满意 
3 一般 
4 不满意</desc>
</prop>
<prop>
<name>eval_recer</name>
<type>String</type>
<level>Basic</level>
<desc>评价接收者</desc>
</prop>
<prop>
<name>eval_sender</name>
<type>String</type>
<level>Basic</level>
<desc>评价发送者</desc>
</prop>
<prop>
<name>eval_time</name>
<type>Date</type>
<level>Basic</level>
<desc>评价时间</desc>
</prop>
<prop>
<name>send_time</name>
<type>Date</type>
<level>Basic</level>
<desc>评价发送时间</desc>
</prop>
</props>
</struct>
<struct>
<name>StreamWeight</name>
<desc>分流权重</desc>
<props>
<prop>
<name>user</name>
<type>String</type>
<level>Basic</level>
<desc>账号</desc>
</prop>
<prop>
<name>weight</name>
<type>Number</type>
<level>Basic</level>
<desc>账号对应的权重</desc>
</prop>
</props>
</struct>
<struct>
<name>TradeConfirmFee</name>
<desc>确认收货费用结构</desc>
<props>
<prop>
<name>confirm_fee</name>
<type>Price</type>
<level>Basic</level>
<desc>确认收货的金额(不包含邮费)。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>confirm_post_fee</name>
<type>Price</type>
<level>Basic</level>
<desc>需确认收货的邮费，当不是最后一笔收货或者没有邮费时是0.00。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>is_last_order</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否是最后一笔订单（只对子订单有效，当其他子订单都是交易完成时，返回true，否则false）</desc>
</prop>
</props>
</struct>
<struct>
<name>ItemImg</name>
<desc>ItemImg结构</desc>
<props>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>图片创建时间 时间格式：yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品图片的id，和商品相对应（主图id默认为0）</desc>
</prop>
<prop>
<name>position</name>
<type>Number</type>
<level>Basic</level>
<desc>图片放在第几张（多图时可设置）</desc>
</prop>
<prop>
<name>url</name>
<type>String</type>
<level>Basic</level>
<desc>图片链接地址</desc>
</prop>
</props>
</struct>
<struct>
<name>ShopCat</name>
<desc>店铺类目</desc>
<props>
<prop>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<desc>类目编号</desc>
</prop>
<prop>
<name>is_parent</name>
<type>Boolean</type>
<level>Basic</level>
<desc>该类目是否为父类目。即：该类目是否还有子类目</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>类目名称</desc>
</prop>
<prop>
<name>parent_cid</name>
<type>Number</type>
<level>Basic</level>
<desc>父类目编号，注：此类目指前台类目，值等于0：表示此类目为一级类目，值不等于0：表示此类目有父类目</desc>
</prop>
</props>
</struct>
<struct>
<name>ProductPropImg</name>
<desc>产品属性图片</desc>
<props>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>添加时间.格式:yyyy-mm-dd hh:mm:ss</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>产品属性图片ID</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间.格式:yyyy-mm-dd hh:mm:ss</desc>
</prop>
<prop>
<name>position</name>
<type>Number</type>
<level>Basic</level>
<desc>图片序号。产品里的图片展示顺序，数据越小越靠前。要求是正整数。</desc>
</prop>
<prop>
<name>product_id</name>
<type>Number</type>
<level>Basic</level>
<desc>图片所属产品的ID</desc>
</prop>
<prop>
<name>props</name>
<type>String</type>
<level>Basic</level>
<desc>属性串(pid:vid),目前只有颜色属性.如:颜色:红色表示为　1627207:28326</desc>
</prop>
<prop>
<name>url</name>
<type>String</type>
<level>Basic</level>
<desc>图片地址.(绝对地址,格式:http://host/image_path)</desc>
</prop>
</props>
</struct>
<struct>
<name>CarriageDetail</name>
<desc>物流公司资费相关信息</desc>
<props>
<prop>
<name>add_fee</name>
<type>Number</type>
<level>Basic</level>
<desc>续费（单位：元）</desc>
</prop>
<prop>
<name>add_weight</name>
<type>Number</type>
<level>Basic</level>
<desc>续重（单位：千克）</desc>
</prop>
<prop>
<name>damage_payment</name>
<type>String</type>
<level>Basic</level>
<desc>破损赔付</desc>
</prop>
<prop>
<name>got_time</name>
<type>String</type>
<level>Basic</level>
<desc>物流公司揽收时间段</desc>
</prop>
<prop>
<name>initial_fee</name>
<type>Number</type>
<level>Basic</level>
<desc>首费（单位：元）</desc>
</prop>
<prop>
<name>initial_weight</name>
<type>Number</type>
<level>Basic</level>
<desc>首重（单位：千克）</desc>
</prop>
<prop>
<name>lost_payment</name>
<type>String</type>
<level>Basic</level>
<desc>丢单赔付</desc>
</prop>
<prop>
<name>way_day</name>
<type>String</type>
<level>Basic</level>
<desc>快件送达所需的时间(单位：天)</desc>
</prop>
</props>
</struct>
<struct>
<name>Place</name>
<desc>定向推广位置</desc>
<props>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>last_update_time</name>
<type>Date</type>
<level>Basic</level>
<desc>最后修改时间</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>位置名称</desc>
</prop>
<prop>
<name>place_id</name>
<type>Number</type>
<level>Basic</level>
<desc>位置标识</desc>
</prop>
</props>
</struct>
<struct>
<name>Shop</name>
<desc>店铺信息</desc>
<props>
<prop>
<name>all_count</name>
<type>Number</type>
<level>Basic</level>
<desc>总橱窗数量，对于C卖家返回总橱窗数，对于B卖家返回0（只有taobao.shop.remainshowcase.get可以返回）</desc>
</prop>
<prop>
<name>bulletin</name>
<type>String</type>
<level>Basic</level>
<desc>店铺公告</desc>
</prop>
<prop>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<desc>店铺所属的类目编号</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>开店时间。格式：yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<desc>店铺描述</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>最后修改时间。格式：yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>pic_path</name>
<type>String</type>
<level>Basic</level>
<desc>店标地址。返回相对路径，可以用"http://logo.taobao.com/shop-logo"来拼接成绝对路径</desc>
</prop>
<prop>
<name>remain_count</name>
<type>Number</type>
<level>Basic</level>
<desc>剩余橱窗数量，对于C卖家返回剩余橱窗数，对于B卖家返回-1（只有taobao.shop.remainshowcase.get可以返回）</desc>
</prop>
<prop>
<name>shop_score</name>
<type>ShopScore</type>
<level>Object</level>
<desc>店铺动态评分信息</desc>
</prop>
<prop>
<name>sid</name>
<type>Number</type>
<level>Basic</level>
<desc>店铺编号。shop+sid.taobao.com即店铺地址，如shop123456.taobao.com</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>店铺标题</desc>
</prop>
<prop>
<name>used_count</name>
<type>Number</type>
<level>Basic</level>
<desc>已用的橱窗数量，对于C卖家返回已使用的橱窗数，对于B卖家返回-1（只有taobao.shop.remainshowcase.get可以返回）</desc>
</prop>
</props>
</struct>
<struct>
<name>AccountInfo</name>
<desc>E客服账号操作信息</desc>
<props>
<prop>
<name>account</name>
<type>String</type>
<level>Basic</level>
<desc>账号</desc>
</prop>
<prop>
<name>account_stats</name>
<type>AccountStat</type>
<level>Object Array</level>
<desc>操作列表</desc>
</prop>
<prop>
<name>count</name>
<type>Number</type>
<level>Basic</level>
<desc>account_stats列表的长度</desc>
</prop>
</props>
</struct>
<struct>
<name>ServiceOrder</name>
<desc>商城虚拟服务子订单数据结构</desc>
<props>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>item_oid</name>
<type>Number</type>
<level>Basic</level>
<desc>服务所属的交易订单号。如果服务为一年包换，则item_oid这笔订单享受改服务的保护</desc>
</prop>
<prop>
<name>num</name>
<type>Number</type>
<level>Basic</level>
<desc>购买数量，取值范围为大于0的整数</desc>
</prop>
<prop>
<name>oid</name>
<type>Number</type>
<level>Basic</level>
<desc>虚拟服务子订单订单号</desc>
</prop>
<prop>
<name>payment</name>
<type>String</type>
<level>Basic</level>
<desc>子订单实付金额。精确到2位小数，单位:元。如:200.07，表示:200元7分。</desc>
</prop>
<prop>
<name>pic_path</name>
<type>String</type>
<level>Basic</level>
<desc>服务图片地址</desc>
</prop>
<prop>
<name>price</name>
<type>String</type>
<level>Basic</level>
<desc>服务价格，精确到小数点后两位：单位:元</desc>
</prop>
<prop>
<name>refund_id</name>
<type>Number</type>
<level>Basic</level>
<desc>最近退款的id</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>service_detail_url</name>
<type>String</type>
<level>Basic</level>
<desc>服务详情的URL地址</desc>
</prop>
<prop>
<name>service_id</name>
<type>Number</type>
<level>Basic</level>
<desc>服务数字id</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>商品名称</desc>
</prop>
<prop>
<name>total_fee</name>
<type>String</type>
<level>Basic</level>
<desc>服务子订单总费用</desc>
</prop>
</props>
</struct>
<struct>
<name>PropImg</name>
<desc>商品属性图片结构</desc>
<props>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>图片创建时间 时间格式：yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>属性图片的id，和商品相对应</desc>
</prop>
<prop>
<name>position</name>
<type>Number</type>
<level>Basic</level>
<desc>图片放在第几张（多图时可设置）</desc>
</prop>
<prop>
<name>properties</name>
<type>String</type>
<level>Basic</level>
<desc>图片所对应的属性组合的字符串</desc>
</prop>
<prop>
<name>url</name>
<type>String</type>
<level>Basic</level>
<desc>图片链接地址</desc>
</prop>
</props>
</struct>
<struct>
<name>UserSubscribe</name>
<desc>用户订购信息</desc>
<props>
<prop>
<name>end_date</name>
<type>Date</type>
<level>Basic</level>
<desc>订购结束时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>start_date</name>
<type>Date</type>
<level>Basic</level>
<desc>订购开始时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>订购状况。应用订购者：subscribeUser;尚未订购：unsubscribeUser；非法用户：invalidateUser</desc>
</prop>
<prop>
<name>version_no</name>
<type>Number</type>
<level>Basic</level>
<desc>0-无版本信息；1-初级版；2-中级版；3-高级版</desc>
</prop>
</props>
</struct>
<struct>
<name>Brand</name>
<desc>品牌</desc>
<props>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>vid的值</desc>
</prop>
<prop>
<name>pid</name>
<type>Number</type>
<level>Basic</level>
<desc>品牌的属性id</desc>
</prop>
<prop>
<name>prop_name</name>
<type>String</type>
<level>Basic</level>
<desc>品牌的属性名</desc>
</prop>
<prop>
<name>vid</name>
<type>Number</type>
<level>Basic</level>
<desc>对应属性的 pid:vid 串中的vid</desc>
</prop>
</props>
</struct>
<struct>
<name>ItemCat</name>
<desc>商品类目结构</desc>
<props>
<prop>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<desc>商品所属类目ID</desc>
</prop>
<prop>
<name>features</name>
<type>Feature</type>
<level>Object Array</level>
<desc>Feature对象列表 
目前已有的属性： 
若Attr_key为 udsaleprop，attr_value为1 则允许卖家在改类目新增自定义销售属性,不然为不允许</desc>
</prop>
<prop>
<name>is_parent</name>
<type>Boolean</type>
<level>Basic</level>
<desc>该类目是否为父类目(即：该类目是否还有子类目)</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>类目名称</desc>
</prop>
<prop>
<name>parent_cid</name>
<type>Number</type>
<level>Basic</level>
<desc>父类目ID=0时，代表的是一级的类目</desc>
</prop>
<prop>
<name>sort_order</name>
<type>Number</type>
<level>Basic</level>
<desc>排列序号，表示同级类目的展现次序，如数值相等则按名称次序排列。取值范围:大于零的整数</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>状态。可选值:normal(正常),deleted(删除)</desc>
</prop>
</props>
</struct>
<struct>
<name>PropValue</name>
<desc>属性值</desc>
<props>
<prop>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<desc>类目ID</desc>
</prop>
<prop>
<name>features</name>
<type>Feature</type>
<level>Object Array</level>
<desc>属性值feature</desc>
</prop>
<prop>
<name>is_parent</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否为父类目属性</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间（类目增量专用）</desc>
</prop>
<prop>
<name>modified_type</name>
<type>String</type>
<level>Basic</level>
<desc>三种枚举类型：modify，add，delete (增量类目专用)</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>属性值</desc>
</prop>
<prop>
<name>name_alias</name>
<type>String</type>
<level>Basic</level>
<desc>属性值别名</desc>
</prop>
<prop>
<name>pid</name>
<type>Number</type>
<level>Basic</level>
<desc>属性 ID</desc>
</prop>
<prop>
<name>prop_name</name>
<type>String</type>
<level>Basic</level>
<desc>属性名</desc>
</prop>
<prop>
<name>sort_order</name>
<type>Number</type>
<level>Basic</level>
<desc>排列序号。取值范围:大于零的整数</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>状态。可选值:normal(正常),deleted(删除)</desc>
</prop>
<prop>
<name>vid</name>
<type>Number</type>
<level>Basic</level>
<desc>属性值ID</desc>
</prop>
</props>
</struct>
<struct>
<name>CreativePage</name>
<desc>广告创意分页对象</desc>
<props>
<prop>
<name>creative_list</name>
<type>Creative</type>
<level>Object Array</level>
<desc>广告创意列表</desc>
</prop>
<prop>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<desc>返回第几页的数据从1开始</desc>
</prop>
<prop>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<desc>每页数据大小</desc>
</prop>
<prop>
<name>total_item</name>
<type>Number</type>
<level>Basic</level>
<desc>所查询的数据总数，只有当返回第一页数据时有值，当要求返回的数据非第一页时，此返回值无效</desc>
</prop>
</props>
</struct>
<struct>
<name>AccountStat</name>
<desc>E客服账号操作记录</desc>
<props>
<prop>
<name>login_status</name>
<type>Number</type>
<level>Basic</level>
<desc>登录状态。0：离线；1：在线</desc>
</prop>
<prop>
<name>onservice_status</name>
<type>Number</type>
<level>Basic</level>
<desc>服务状态。0：挂起；1：服务</desc>
</prop>
<prop>
<name>time</name>
<type>String</type>
<level>Basic</level>
<desc>操作时间。格式：YYYY-mm-dd HH:MM:SS</desc>
</prop>
</props>
</struct>
<struct>
<name>Demographic</name>
<desc>投放人群</desc>
<props>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>group_id</name>
<type>Number</type>
<level>Basic</level>
<desc>投放人群所属的组ID</desc>
</prop>
<prop>
<name>group_name</name>
<type>String</type>
<level>Basic</level>
<desc>投放人群所属组的组名</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>投放人群ID</desc>
</prop>
<prop>
<name>last_update_time</name>
<type>Date</type>
<level>Basic</level>
<desc>最后修改时间</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>投放人群名称</desc>
</prop>
</props>
</struct>
<struct>
<name>Item</name>
<desc>Item(商品)结构</desc>
<props>
<prop>
<name>after_sale_id</name>
<type>Number</type>
<level>Basic</level>
<desc>售后服务ID,该字段仅在taobao.item.get接口中返回</desc>
</prop>
<prop>
<name>approve_status</name>
<type>String</type>
<level>Basic</level>
<desc>商品上传后的状态。onsale出售中，instock库中</desc>
</prop>
<prop>
<name>auction_point</name>
<type>Number</type>
<level>Basic</level>
<desc>天猫订单抽佣比例，为5的倍数，最低0.5%。跟淘客佣金没有关系。</desc>
</prop>
<prop>
<name>auto_fill</name>
<type>String</type>
<level>Basic</level>
<desc>代充商品类型。在代充商品的类目下，不传表示不标记商品类型（交易搜索中就不能通过标记搜到相关的交易了）。可选类型： no_mark(不做类型标记) time_card(点卡软件代充) fee_card(话费软件代充)</desc>
</prop>
<prop>
<name>barcode</name>
<type>String</type>
<level>Basic</level>
<desc>商品级别的条形码</desc>
</prop>
<prop>
<name>change_prop</name>
<type>String</type>
<level>Basic</level>
<desc>基础色数据</desc>
</prop>
<prop>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<desc>商品所属的叶子类目 id</desc>
</prop>
<prop>
<name>cod_postage_id</name>
<type>Number</type>
<level>Basic</level>
<desc>货到付款运费模板ID</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>Item的发布时间，目前仅供taobao.item.add和taobao.item.get可用</desc>
</prop>
<prop>
<name>custom_made_type_id</name>
<type>String</type>
<level>Basic</level>
<desc>定制工具Id</desc>
</prop>
<prop>
<name>delist_time</name>
<type>Date</type>
<level>Basic</level>
<desc>下架时间（格式：yyyy-MM-dd HH:mm:ss）</desc>
</prop>
<prop>
<name>delivery_time</name>
<type>DeliveryTime</type>
<level>Object</level>
<desc>发货时间信息</desc>
</prop>
<prop>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<desc>商品描述, 字数要大于5个字符，小于25000个字符</desc>
</prop>
<prop>
<name>desc_module_info</name>
<type>DescModuleInfo</type>
<level>Object</level>
<desc>宝贝描述规范化模块锚点信息</desc>
</prop>
<prop>
<name>desc_modules</name>
<type>String</type>
<level>Basic</level>
<desc>商品描述模块化，模块列表，由List转化成jsonArray存入，后端逻辑验证通过，拼装成模块内容+锚点导航后存入desc中。数据结构具体参见Item_Desc_Module</desc>
</prop>
<prop>
<name>detail_url</name>
<type>String</type>
<level>Basic</level>
<desc>商品url</desc>
</prop>
<prop>
<name>ems_fee</name>
<type>Price</type>
<level>Basic</level>
<desc>ems费用,格式：5.00；单位：元；精确到：分</desc>
</prop>
<prop>
<name>express_fee</name>
<type>Price</type>
<level>Basic</level>
<desc>快递费用,格式：5.00；单位：元；精确到：分</desc>
</prop>
<prop>
<name>features</name>
<type>String</type>
<level>Basic</level>
<desc>宝贝特征值， 
只有在Top支持的特征值才能保存到宝贝上</desc>
</prop>
<prop>
<name>food_security</name>
<type>FoodSecurity</type>
<level>Object</level>
<desc>食品安全信息，包括：生产许可证编号、产品标准号、厂名、厂址等</desc>
</prop>
<prop>
<name>freight_payer</name>
<type>String</type>
<level>Basic</level>
<desc>运费承担方式,seller（卖家承担），buyer(买家承担）</desc>
</prop>
<prop>
<name>global_stock_country</name>
<type>String</type>
<level>Basic</level>
<desc>全球购商品采购地信息（地区/国家），代表全球购商品的产地信息。</desc>
</prop>
<prop>
<name>global_stock_type</name>
<type>String</type>
<level>Basic</level>
<desc>全球购商品采购地信息（库存类型），有两种库存类型：现货和代购; 
参数值为1时代表现货，值为2时代表代购</desc>
</prop>
<prop>
<name>has_discount</name>
<type>Boolean</type>
<level>Basic</level>
<desc>支持会员打折,true/false</desc>
</prop>
<prop>
<name>has_invoice</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否有发票,true/false</desc>
</prop>
<prop>
<name>has_showcase</name>
<type>Boolean</type>
<level>Basic</level>
<desc>橱窗推荐,true/false</desc>
</prop>
<prop>
<name>has_warranty</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否有保修,true/false</desc>
</prop>
<prop>
<name>increment</name>
<type>String</type>
<level>Basic</level>
<desc>加价幅度。如果为0，代表系统代理幅度。 
在竞拍中，为了超越上一个出价，会员需要在当前出价上增加金额，这个金额就是加价幅度。卖家在发布宝贝的时候可以自定义加价幅度，也可以让系统自动代理加价。系统自动代理加价的加价幅度随着当前出价金额的增加而增加，我们建议会员使用系统自动代理加价，并请买家在出价前看清楚加价幅度的具体金额。另外需要注意是，此功能只适用于拍卖的商品。 
以下是系统自动代理加价幅度表： 
当前价（加价幅度 ） 
1-40（ 1 ）、41-100（ 2 ）、101-200（5 ）、201-500 （10）、501-1001（15）、001-2000（25）、2001-5000（50）、5001-10000（100） 
10001以上         200</desc>
</prop>
<prop>
<name>inner_shop_auction_template_id</name>
<type>Number</type>
<level>Basic</level>
<desc>用户内店宝贝装修模板id</desc>
</prop>
<prop>
<name>input_pids</name>
<type>String</type>
<level>Basic</level>
<desc>用户自行输入的类目属性ID串。结构："pid1,pid2,pid3"，如："20000"（表示品牌） 注：通常一个类目下用户可输入的关键属性不超过1个。</desc>
</prop>
<prop>
<name>input_str</name>
<type>String</type>
<level>Basic</level>
<desc>用户自行输入的子属性名和属性值，结构:"父属性值;一级子属性名;一级子属性值;二级子属性名;自定义输入值,....",如：“耐克;耐克系列;科比系列;科比系列;2K5”，input_str需要与input_pids一一对应，注：通常一个类目下用户可输入的关键属性不超过1个。所有属性别名加起来不能超过 3999字节。</desc>
</prop>
<prop>
<name>is_3D</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否是3D淘宝的商品</desc>
</prop>
<prop>
<name>is_cspu</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否为达尔文挂接成功了的商品</desc>
</prop>
<prop>
<name>is_ex</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否在外部网店显示</desc>
</prop>
<prop>
<name>is_fenxiao</name>
<type>Number</type>
<level>Basic</level>
<desc>非分销商品：0，代销：1，经销：2</desc>
</prop>
<prop>
<name>is_lightning_consignment</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否24小时闪电发货</desc>
</prop>
<prop>
<name>is_offline</name>
<type>String</type>
<level>Basic</level>
<desc>是否是线下商品。 
1：线上商品（默认值）； 
2：线上或线下商品； 
3：线下商品。</desc>
</prop>
<prop>
<name>is_prepay</name>
<type>Boolean</type>
<level>Basic</level>
<desc>商品是否为先行赔付 
taobao.items.search和taobao.items.vip.search专用</desc>
</prop>
<prop>
<name>is_taobao</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否在淘宝显示</desc>
</prop>
<prop>
<name>is_timing</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否定时上架商品</desc>
</prop>
<prop>
<name>is_virtual</name>
<type>Boolean</type>
<level>Basic</level>
<desc>虚拟商品的状态字段</desc>
</prop>
<prop>
<name>is_xinpin</name>
<type>Boolean</type>
<level>Basic</level>
<desc>标示商品是否为新品。 
值含义：true-是，false-否。</desc>
</prop>
<prop>
<name>item_imgs</name>
<type>ItemImg</type>
<level>Object Array</level>
<desc>商品图片列表(包括主图)。fields中只设置item_img可以返回ItemImg结构体中所有字段，如果设置为item_img.id、item_img.url、item_img.position等形式就只会返回相应的字段</desc>
</prop>
<prop>
<name>item_size</name>
<type>String</type>
<level>Basic</level>
<desc>表示商品的体积，用于按体积计费的运费模板。该值的单位为立方米（m3）。 
该值支持两种格式的设置：格式1：bulk:3,单位为立方米(m3),表示直接设置为商品的体积。格式2：weight:10;breadth:10;height:10，单位为米（m）</desc>
</prop>
<prop>
<name>item_weight</name>
<type>String</type>
<level>Basic</level>
<desc>商品的重量，用于按重量计费的运费模板。注意：单位为kg</desc>
</prop>
<prop>
<name>list_time</name>
<type>Date</type>
<level>Basic</level>
<desc>上架时间（格式：yyyy-MM-dd HH:mm:ss）</desc>
</prop>
<prop>
<name>locality_life</name>
<type>LocalityLife</type>
<level>Object</level>
<desc>本地生活电子交易凭证业务，目前此字段只涉及到的信息为有效期: 
如果有效期为起止日期类型，此值为2012-08-06,2012-08-16 
如果有效期为【购买成功日 至】类型则格式为2012-08-16 
如果有效期为天数类型则格式为3</desc>
</prop>
<prop>
<name>location</name>
<type>Location</type>
<level>Object</level>
<desc>商品所在地</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>商品修改时间（格式：yyyy-MM-dd HH:mm:ss）</desc>
</prop>
<prop>
<name>mpic_video</name>
<type>MpicVideo</type>
<level>Object</level>
<desc>宝贝主图视频的数据信息，包括：视频ID，视频缩略图URL，视频时长，视频状态等信息。</desc>
</prop>
<prop>
<name>newprepay</name>
<type>String</type>
<level>Basic</level>
<desc>是否为新消保法中的7天无理由退货</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>num</name>
<type>Number</type>
<level>Basic</level>
<desc>商品数量</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<desc>商品数字id</desc>
</prop>
<prop>
<name>one_station</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否淘1站商品</desc>
</prop>
<prop>
<name>outer_id</name>
<type>String</type>
<level>Basic</level>
<desc>商家外部编码(可与商家外部系统对接)。需要授权才能获取。</desc>
</prop>
<prop>
<name>outer_shop_auction_template_id</name>
<type>Number</type>
<level>Basic</level>
<desc>用户外店装修模板id</desc>
</prop>
<prop>
<name>paimai_info</name>
<type>PaimaiInfo</type>
<level>Object</level>
<desc>用于保存拍卖有关的信息</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>商品主图片地址</desc>
</prop>
<prop>
<name>post_fee</name>
<type>Price</type>
<level>Basic</level>
<desc>平邮费用,格式：5.00；单位：元；精确到：分</desc>
</prop>
<prop>
<name>postage_id</name>
<type>Number</type>
<level>Basic</level>
<desc>宝贝所属的运费模板ID，如果没有返回则说明没有使用运费模板</desc>
</prop>
<prop>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<desc>商品价格，格式：5.00；单位：元；精确到：分</desc>
</prop>
<prop>
<name>product_id</name>
<type>Number</type>
<level>Basic</level>
<desc>宝贝所属产品的id(可能为空). 该字段可以通过taobao.products.search 得到</desc>
</prop>
<prop>
<name>promoted_service</name>
<type>String</type>
<level>Basic</level>
<desc>消保类型，多个类型以,分割。可取以下值：
2：假一赔三；4：7天无理由退换货；taobao.items.search和taobao.items.vip.search专用</desc>
</prop>
<prop>
<name>prop_imgs</name>
<type>PropImg</type>
<level>Object Array</level>
<desc>商品属性图片列表。fields中只设置prop_img可以返回PropImg结构体中所有字段，如果设置为prop_img.id、prop_img.url、prop_img.properties、prop_img.position等形式就只会返回相应的字段</desc>
</prop>
<prop>
<name>property_alias</name>
<type>String</type>
<level>Basic</level>
<desc>属性值别名,比如颜色的自定义名称</desc>
</prop>
<prop>
<name>props</name>
<type>String</type>
<level>Basic</level>
<desc>商品属性 格式：pid:vid;pid:vid</desc>
</prop>
<prop>
<name>props_name</name>
<type>String</type>
<level>Basic</level>
<desc>商品属性名称。标识着props内容里面的pid和vid所对应的名称。格式为：pid1:vid1:pid_name1:vid_name1;pid2:vid2:pid_name2:vid_name2……(&lt;strong&gt;注：&lt;/strong&gt;&lt;font color="red"&gt;属性名称中的冒号":"被转换为："#cln#";  
分号";"被转换为："#scln#"
&lt;/font&gt;)</desc>
</prop>
<prop>
<name>score</name>
<type>Number</type>
<level>Basic</level>
<desc>商品所属卖家的信用等级数，1表示1心，2表示2心……，只有调用商品搜索:taobao.items.get和taobao.items.search的时候才能返回</desc>
</prop>
<prop>
<name>second_kill</name>
<type>String</type>
<level>Basic</level>
<desc>秒杀商品类型。打上秒杀标记的商品，用户只能下架并不能再上架，其他任何编辑或删除操作都不能进行。如果用户想取消秒杀标记，需要联系小二进行操作。如果秒杀结束需要自由编辑请联系活动负责人（小二）去掉秒杀标记。可选类型 
web_only(只能通过web网络秒杀) 
wap_only(只能通过wap网络秒杀) 
web_and_wap(既能通过web秒杀也能通过wap秒杀)</desc>
</prop>
<prop>
<name>second_result</name>
<type>Boolean</type>
<level>Basic</level>
<desc>达尔文数据挂接，第二步保存结果</desc>
</prop>
<prop>
<name>sell_point</name>
<type>String</type>
<level>Basic</level>
<desc>商品卖点信息，天猫商家使用字段，最长150个字符。</desc>
</prop>
<prop>
<name>sell_promise</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否承诺退换货服务!</desc>
</prop>
<prop>
<name>seller_cids</name>
<type>String</type>
<level>Basic</level>
<desc>商品所属的店铺内卖家自定义类目列表</desc>
</prop>
<prop>
<name>skus</name>
<type>Sku</type>
<level>Object Array</level>
<desc>&lt;a href="http://open.taobao.com/dev/index.php/Sku"&gt;Sku&lt;/a&gt;列表。fields中只设置sku可以返回Sku结构体中所有字段，如果设置为sku.sku_id、sku.properties、sku.quantity等形式就只会返回相应的字段</desc>
</prop>
<prop>
<name>sold_quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>商品销量</desc>
</prop>
<prop>
<name>stuff_status</name>
<type>String</type>
<level>Basic</level>
<desc>商品新旧程度(全新:new，闲置:unused，二手：second)</desc>
</prop>
<prop>
<name>sub_stock</name>
<type>Number</type>
<level>Basic</level>
<desc>商品是否支持拍下减库存:1支持;2取消支持(付款减库存);0(默认)不更改 集市卖家默认拍下减库存; 商城卖家默认付款减库存</desc>
</prop>
<prop>
<name>sub_title</name>
<type>String</type>
<level>Basic</level>
<desc>商品的子标题，给商品增加卖点等描述</desc>
</prop>
<prop>
<name>template_id</name>
<type>String</type>
<level>Basic</level>
<desc>页面模板id</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>商品标题,不能超过60字节</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>商品类型(fixed:一口价;auction:拍卖)注：取消团购</desc>
</prop>
<prop>
<name>valid_thru</name>
<type>Number</type>
<level>Basic</level>
<desc>有效期,7或者14（默认是7天）</desc>
</prop>
<prop>
<name>video_id</name>
<type>Number</type>
<level>Basic</level>
<desc>该字段废弃，请勿使用。</desc>
</prop>
<prop>
<name>videos</name>
<type>Video</type>
<level>Object Array</level>
<desc>商品视频列表(目前只支持单个视频关联)。fields中只设置video可以返回Video结构体中所有字段，如果设置为video.id、video.video_id、 
video.url等形式就只会返回相应的字段</desc>
</prop>
<prop>
<name>violation</name>
<type>Boolean</type>
<level>Basic</level>
<desc>商品是否违规，违规：true , 不违规：false</desc>
</prop>
<prop>
<name>wap_desc</name>
<type>String</type>
<level>Basic</level>
<desc>不带html标签的desc文本信息，该字段只在taobao.item.get接口中返回</desc>
</prop>
<prop>
<name>wap_detail_url</name>
<type>String</type>
<level>Basic</level>
<desc>适合wap应用的商品详情url ，该字段只在taobao.item.get接口中返回</desc>
</prop>
<prop>
<name>wireless_desc</name>
<type>String</type>
<level>Basic</level>
<desc>无线的宝贝描述</desc>
</prop>
<prop>
<name>with_hold_quantity</name>
<type>Number</type>
<level>Basic</level>
<desc>预扣库存，即付款减库存的商品现在有多少处于未付款状态的订单</desc>
</prop>
<prop>
<name>ww_status</name>
<type>Boolean</type>
<level>Basic</level>
<desc>商品所属的商家的旺旺在线状况， 
taobao.items.search和taobao.items.vip.search专用</desc>
</prop>
</props>
</struct>
<struct>
<name>ADGroupPlace</name>
<desc>推广组与定向推广位置关系</desc>
<props>
<prop>
<name>adgroup_id</name>
<type>Number</type>
<level>Basic</level>
<desc>推广组ID</desc>
</prop>
<prop>
<name>campaign_id</name>
<type>Number</type>
<level>Basic</level>
<desc>推广计划ID</desc>
</prop>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>is_default_price</name>
<type>Number</type>
<level>Basic</level>
<desc>是否使用默认出价，0-不用；1-使用；</desc>
</prop>
<prop>
<name>max_price</name>
<type>Number</type>
<level>Basic</level>
<desc>出价</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>主人昵称</desc>
</prop>
<prop>
<name>place_id</name>
<type>Number</type>
<level>Basic</level>
<desc>位置标识</desc>
</prop>
<prop>
<name>place_name</name>
<type>String</type>
<level>Basic</level>
<desc>位置名称</desc>
</prop>
</props>
</struct>
<struct>
<name>KeywordPage</name>
<desc>关键词分页对象</desc>
<props>
<prop>
<name>keyword_list</name>
<type>Keyword</type>
<level>Object Array</level>
<desc>关键词列表</desc>
</prop>
<prop>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<desc>返回第几页的数据从1开始</desc>
</prop>
<prop>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<desc>每页数据大小</desc>
</prop>
<prop>
<name>total_item</name>
<type>Number</type>
<level>Basic</level>
<desc>所查询的数据总数，只有当返回第一页数据时有值，当要求返回的数据非第一页时，此返回值无效</desc>
</prop>
</props>
</struct>
<struct>
<name>DemographicSetting</name>
<desc>投放人群设置</desc>
<props>
<prop>
<name>campaign_id</name>
<type>Number</type>
<level>Basic</level>
<desc>推广计划ID</desc>
</prop>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>demographic_id</name>
<type>Number</type>
<level>Basic</level>
<desc>投放人群ID</desc>
</prop>
<prop>
<name>incremental_price</name>
<type>Number</type>
<level>Basic</level>
<desc>加价</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>主人昵称</desc>
</prop>
</props>
</struct>
<struct>
<name>VideoItem</name>
<desc>视频</desc>
<props>
<prop>
<name>cover_url</name>
<type>String</type>
<level>Basic</level>
<desc>视频封面url</desc>
</prop>
<prop>
<name>description</name>
<type>String</type>
<level>Basic</level>
<desc>视频描述</desc>
</prop>
<prop>
<name>duration</name>
<type>Number</type>
<level>Basic</level>
<desc>视频时长</desc>
</prop>
<prop>
<name>is_open_to_other</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否允许他人观看</desc>
</prop>
<prop>
<name>state</name>
<type>Number</type>
<level>Basic</level>
<desc>视频状态：等待转码（1），转码中（2），转码失败（3），等待审核（4），未通过审核（5），通过审核（6）</desc>
</prop>
<prop>
<name>tags</name>
<type>String</type>
<level>Basic Array</level>
<desc>视频标签</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>视频标题</desc>
</prop>
<prop>
<name>upload_time</name>
<type>Date</type>
<level>Basic</level>
<desc>视频上传时间</desc>
</prop>
<prop>
<name>uploader_id</name>
<type>Number</type>
<level>Basic</level>
<desc>视频上传者数字id</desc>
</prop>
<prop>
<name>video_id</name>
<type>Number</type>
<level>Basic</level>
<desc>视频id</desc>
</prop>
<prop>
<name>video_play_info</name>
<type>VideoPlayInfo</type>
<level>Object</level>
<desc>视频播放地址</desc>
</prop>
</props>
</struct>
<struct>
<name>VideoPlayInfo</name>
<desc>视频播放信息</desc>
<props>
<prop>
<name>androidpad_url</name>
<type>String</type>
<level>Basic</level>
<desc>android  pad兼播放的m3u8列表文件（包含多码率）。适用大于等于3.0版本Android。</desc>
</prop>
<prop>
<name>androidpad_v23_url</name>
<type>AndroidVlowUrl</type>
<level>Object</level>
<desc>android pad播放的mp4文件列表。适用2.3版本的Android</desc>
</prop>
<prop>
<name>androidphone_url</name>
<type>String</type>
<level>Basic</level>
<desc>android  phone播放的m3u8列表文件（包含多码率，）。适用大于等于3.0版本Android。</desc>
</prop>
<prop>
<name>androidphone_v23_url</name>
<type>AndroidVlowUrl</type>
<level>Object</level>
<desc>android  phone播放的mp4文件列表。适用2.3版本的Android。</desc>
</prop>
<prop>
<name>flash_url</name>
<type>String</type>
<level>Basic</level>
<desc>Flash播放器地址，可直接通过PC浏览器播放</desc>
</prop>
<prop>
<name>ipad_url</name>
<type>String</type>
<level>Basic</level>
<desc>ipad播放的m3u8列表文件（包含多码率）</desc>
</prop>
<prop>
<name>iphone_url</name>
<type>String</type>
<level>Basic</level>
<desc>iphone播放的m3u8列表文件（包含多码率）</desc>
</prop>
<prop>
<name>web_url</name>
<type>String</type>
<level>Basic</level>
<desc>Web嵌入html代码，可直接嵌入页面中，支持html5的video标签，支持HLS播放协议最终返回m3u8资源，否则返回mp4资源</desc>
</prop>
</props>
</struct>
<struct>
<name>TOPSearchResult</name>
<desc>搜索返回的结果类</desc>
<props>
<prop>
<name>paginator</name>
<type>TOPPaginator</type>
<level>Object</level>
<desc>分页信息</desc>
</prop>
<prop>
<name>video_items</name>
<type>VideoItem</type>
<level>Object Array</level>
<desc>视频列表</desc>
</prop>
</props>
</struct>
<struct>
<name>TOPPaginator</name>
<desc>分页信息</desc>
<props>
<prop>
<name>current_page</name>
<type>Number</type>
<level>Basic</level>
<desc>当前页码。取值范围:大于零的整数。默认值为1,即默认返回第一页数据。</desc>
</prop>
<prop>
<name>is_last_page</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否最后一页</desc>
</prop>
<prop>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<desc>每页条数。默认值：12</desc>
</prop>
<prop>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到符合条件的结果总数</desc>
</prop>
</props>
</struct>
<struct>
<name>SellerAuthorize</name>
<desc>授权</desc>
<props>
<prop>
<name>brands</name>
<type>Brand</type>
<level>Object Array</level>
<desc>品牌列表</desc>
</prop>
<prop>
<name>item_cats</name>
<type>ItemCat</type>
<level>Object Array</level>
<desc>类目列表</desc>
</prop>
<prop>
<name>xinpin_item_cats</name>
<type>ItemCat</type>
<level>Object Array</level>
<desc>被授权的新品类目列表</desc>
</prop>
</props>
</struct>
<struct>
<name>INCategoryAnalysis</name>
<desc>类目数据分析对象</desc>
<props>
<prop>
<name>category_area_per</name>
<type>String</type>
<level>Basic</level>
<desc>地域占比 
格式： 
地域名称:占比;地域名称:占比;</desc>
</prop>
<prop>
<name>category_hp_price</name>
<type>String</type>
<level>Basic</level>
<desc>竞价分布 
格式： 
宝贝数:价格;宝贝数:价格;</desc>
</prop>
<prop>
<name>category_id</name>
<type>Number</type>
<level>Basic</level>
<desc>类目id</desc>
</prop>
<prop>
<name>category_name</name>
<type>String</type>
<level>Basic</level>
<desc>类目名称</desc>
</prop>
<prop>
<name>category_source_per</name>
<type>String</type>
<level>Basic</level>
<desc>来源占比 
格式： 
来源名称:比例;来源名称:比例;</desc>
</prop>
</props>
</struct>
<struct>
<name>ItemProp</name>
<desc>商品属性</desc>
<props>
<prop>
<name>child_template</name>
<type>String</type>
<level>Basic</level>
<desc>子属性的模板（卖家自行输入属性时需要用到）</desc>
</prop>
<prop>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<desc>类目ID</desc>
</prop>
<prop>
<name>features</name>
<type>Feature</type>
<level>Object Array</level>
<desc>属性的feature列表</desc>
</prop>
<prop>
<name>is_allow_alias</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否允许别名。可选值：true（是），false（否）</desc>
</prop>
<prop>
<name>is_color_prop</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否颜色属性。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>is_enum_prop</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否是可枚举属性。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>is_input_prop</name>
<type>Boolean</type>
<level>Basic</level>
<desc>在is_enum_prop是true的前提下，是否是卖家可以自行输入的属性（注：如果is_enum_prop返回false，该参数统一返回false）。可选值:true(是),false(否)。&lt;b&gt;对于品牌和型号属性（包括子属性）：如果用户是C卖家，则可自定义属性；如果是B卖家，则不可自定义属性，而必须要授权的属性。&lt;/b&gt;</desc>
</prop>
<prop>
<name>is_item_prop</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否商品属性。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>is_key_prop</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否关键属性。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>is_sale_prop</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否销售属性。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>属性修改时间（增量类目专用）</desc>
</prop>
<prop>
<name>modified_type</name>
<type>String</type>
<level>Basic</level>
<desc>三种枚举类型：modify，add，delete（增量类目专用）</desc>
</prop>
<prop>
<name>multi</name>
<type>Boolean</type>
<level>Basic</level>
<desc>发布产品或商品时是否可以多选。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>must</name>
<type>Boolean</type>
<level>Basic</level>
<desc>发布产品或商品时是否为必选属性。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>属性名</desc>
</prop>
<prop>
<name>parent_pid</name>
<type>Number</type>
<level>Basic</level>
<desc>上级属性ID</desc>
</prop>
<prop>
<name>parent_vid</name>
<type>Number</type>
<level>Basic</level>
<desc>上级属性值ID</desc>
</prop>
<prop>
<name>pid</name>
<type>Number</type>
<level>Basic</level>
<desc>属性 ID 例：品牌的PID=20000</desc>
</prop>
<prop>
<name>prop_values</name>
<type>PropValue</type>
<level>Object Array</level>
<desc/>
</prop>
<prop>
<name>required</name>
<type>Boolean</type>
<level>Basic</level>
<desc>发布产品或商品时是否为必选属性(与must相同)。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>sort_order</name>
<type>Number</type>
<level>Basic</level>
<desc>排列序号。取值范围:大于零的整排列序号。取值范围:大于零的整数</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>状态。可选值:normal(正常),deleted(删除)</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>属性值类型。可选值： 
multiCheck(枚举多选) 
optional(枚举单选) 
multiCheckText(枚举可输入多选) 
optionalText(枚举可输入单选) 
text(非枚举可输入)</desc>
</prop>
</props>
</struct>
<struct>
<name>INWordAnalysis</name>
<desc>词数据分析对象</desc>
<props>
<prop>
<name>word</name>
<type>String</type>
<level>Basic</level>
<desc>词名称</desc>
</prop>
<prop>
<name>word_area_per</name>
<type>String</type>
<level>Basic</level>
<desc>词地域占比 
格式： 
地域名称:比例;地域名称2:比例2;</desc>
</prop>
<prop>
<name>word_hp_price</name>
<type>String</type>
<level>Basic</level>
<desc>词竞价分布 
格式： 
宝贝数:价格;宝贝数:价格;</desc>
</prop>
<prop>
<name>word_source_per</name>
<type>String</type>
<level>Basic</level>
<desc>词来源占比 
格式： 
来源名称1:比例值;来源名称2:比例值;</desc>
</prop>
</props>
</struct>
<struct>
<name>INCategoryTop</name>
<desc>类目对象</desc>
<props>
<prop>
<name>category_child_top_list</name>
<type>INCategoryChildTop</type>
<level>Object Array</level>
<desc>子类目列表</desc>
</prop>
<prop>
<name>category_desc</name>
<type>String</type>
<level>Basic</level>
<desc>类目属性描述</desc>
</prop>
<prop>
<name>category_id</name>
<type>Number</type>
<level>Basic</level>
<desc>类目对象id</desc>
</prop>
<prop>
<name>category_name</name>
<type>String</type>
<level>Basic</level>
<desc>类目名称</desc>
</prop>
<prop>
<name>category_properties_list</name>
<type>INCategoryProperties</type>
<level>Object Array</level>
<desc>类目属性对象列表</desc>
</prop>
<prop>
<name>categroy_word</name>
<type>String</type>
<level>Basic</level>
<desc>用户输入的词</desc>
</prop>
</props>
</struct>
<struct>
<name>LocalityLife</name>
<desc>本地生活垂直市场数据结构，修改宝贝时在参数empty_fields里设置locality_life可删除所有电子凭证信息</desc>
<props>
<prop>
<name>choose_logis</name>
<type>String</type>
<level>Basic</level>
<desc>表示是否使用邮寄 0: 代表不使用邮寄； 1：代表使用邮寄；如果不设置这个值，代表不使用邮寄</desc>
</prop>
<prop>
<name>eticket</name>
<type>String</type>
<level>Basic</level>
<desc>电子凭证业务属性</desc>
</prop>
<prop>
<name>expirydate</name>
<type>String</type>
<level>Basic</level>
<desc>电子交易凭证有效期，有三种格式： 
如果有效期为起止日期类型，此值为2012-08-06,2012-08-16  
如果有效期为【购买成功日 至】类型则格式为2012-08-16 
如果有效期为天数类型则格式为15</desc>
</prop>
<prop>
<name>merchant</name>
<type>String</type>
<level>Basic</level>
<desc>格式为  
码商id:nick</desc>
</prop>
<prop>
<name>network_id</name>
<type>String</type>
<level>Basic</level>
<desc>网点ID,在参数empty_fields里设置locality_life.network_id可删除网点ID</desc>
</prop>
<prop>
<name>onsale_auto_refund_ratio</name>
<type>Number</type>
<level>Basic</level>
<desc>电子凭证售中自动退款比例</desc>
</prop>
<prop>
<name>refund_ratio</name>
<type>Number</type>
<level>Basic</level>
<desc>退款比例，百分比%前的数字，1-100的正整数值；在参数empty_fields里设置locality_life.refund_ratio可删除退款比例</desc>
</prop>
<prop>
<name>refundmafee</name>
<type>String</type>
<level>Basic</level>
<desc>退款码费承担方。发布电子凭证宝贝的时候会增加“退款码费承担方”配置项，可选填：(1)s（卖家承担） (2)b(买家承担)</desc>
</prop>
<prop>
<name>verification</name>
<type>String</type>
<level>Basic</level>
<desc>核销打款:1代表核销打款,0代表非核销打款; 
在参数empty_fields里设置locality_life.verification可删除核销打款</desc>
</prop>
</props>
</struct>
<struct>
<name>Picture</name>
<desc>图片</desc>
<props>
<prop>
<name>client_type</name>
<type>String</type>
<level>Basic</level>
<desc>图片上传的来源，有电脑版本宝贝发布，手机版本宝贝发布</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>图片的创建时间</desc>
</prop>
<prop>
<name>deleted</name>
<type>String</type>
<level>Basic</level>
<desc>图片是否删除的标记</desc>
</prop>
<prop>
<name>md5</name>
<type>String</type>
<level>Basic</level>
<desc>图片在后台处理之后的md5值 
当md5值为32位长度的字符串时为图片搬家后的文件md5验证码 
md5值为长整数时为图片替换后的时间戳</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>图片的修改时间</desc>
</prop>
<prop>
<name>picture_category_id</name>
<type>Number</type>
<level>Basic</level>
<desc>图片分类ID</desc>
</prop>
<prop>
<name>picture_id</name>
<type>Number</type>
<level>Basic</level>
<desc>图片ID</desc>
</prop>
<prop>
<name>picture_path</name>
<type>String</type>
<level>Basic</level>
<desc>返回的是绝对路径如：http://img07.taobaocdn.com/imgextra/i7/22670458/T2dD0kXb4cXXXXXXXX_!!22670458.jpg</desc>
</prop>
<prop>
<name>pixel</name>
<type>String</type>
<level>Basic</level>
<desc>图片相素,格式:长x宽，如450x150</desc>
</prop>
<prop>
<name>referenced</name>
<type>Boolean</type>
<level>Basic</level>
<desc>图片是否被引用</desc>
</prop>
<prop>
<name>sizes</name>
<type>Number</type>
<level>Basic</level>
<desc>图片大小,bite单位</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>图片状态,unfroze代表没有被冻结，froze代表被冻结,pass代表排查通过</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>图片标题</desc>
</prop>
<prop>
<name>uid</name>
<type>Number</type>
<level>Basic</level>
<desc>卖家ID</desc>
</prop>
</props>
</struct>
<struct>
<name>INWordCategory</name>
<desc>词和类目数据对象</desc>
<props>
<prop>
<name>avg_price</name>
<type>Number</type>
<level>Basic</level>
<desc>词在类目下平均点击价格</desc>
</prop>
<prop>
<name>category_id</name>
<type>Number</type>
<level>Basic</level>
<desc>类目id</desc>
</prop>
<prop>
<name>click</name>
<type>Number</type>
<level>Basic</level>
<desc>词在类目下点击量</desc>
</prop>
<prop>
<name>competition</name>
<type>Number</type>
<level>Basic</level>
<desc>词在类目下竞争宝贝数(包括未展现客户)</desc>
</prop>
<prop>
<name>ctr</name>
<type>Price</type>
<level>Basic</level>
<desc>点击率</desc>
</prop>
<prop>
<name>date</name>
<type>Date</type>
<level>Basic</level>
<desc>时间点</desc>
</prop>
<prop>
<name>pv</name>
<type>Number</type>
<level>Basic</level>
<desc>词在类目下展现量</desc>
</prop>
<prop>
<name>word</name>
<type>String</type>
<level>Basic</level>
<desc>词名称</desc>
</prop>
</props>
</struct>
<struct>
<name>DescModuleInfo</name>
<desc>该数据结构保存宝贝描述对应的规范化信息</desc>
<props>
<prop>
<name>anchor_module_ids</name>
<type>String</type>
<level>Basic</level>
<desc>代表宝贝描述中规范化打标使用到的模块id列表，以逗号分隔。</desc>
</prop>
<prop>
<name>type</name>
<type>Number</type>
<level>Basic</level>
<desc>类型代表规范化打标的类型：人工或自动化</desc>
</prop>
</props>
</struct>
<struct>
<name>INWordBase</name>
<desc>词基础数据对象</desc>
<props>
<prop>
<name>in_record_base_list</name>
<type>INRecordBase</type>
<level>Object Array</level>
<desc>词数据信息列表</desc>
</prop>
<prop>
<name>word</name>
<type>String</type>
<level>Basic</level>
<desc>词名称</desc>
</prop>
</props>
</struct>
<struct>
<name>Area</name>
<desc>地址区域结构</desc>
<props>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>标准行政区域代码.参考:http://www.stats.gov.cn/tjbz/xzqhdm/t20120105_402777427.htm</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>地域名称.如北京市,杭州市,西湖区,每一个area_id 都代表了一个具体的地区.</desc>
</prop>
<prop>
<name>parent_id</name>
<type>Number</type>
<level>Basic</level>
<desc>父节点区域标识.如北京市的area_id是110100,朝阳区是北京市的一个区,所以朝阳区的parent_id就是北京市的area_id.</desc>
</prop>
<prop>
<name>type</name>
<type>Number</type>
<level>Basic</level>
<desc>区域类型.area区域 1:country/国家;2:province/省/自治区/直辖市;3:city/地区(省下面的地级市);4:district/县/市(县级市)/区;abroad:海外. 比如北京市的area_type = 2,朝阳区是北京市的一个区,所以朝阳区的area_type = 4.</desc>
</prop>
<prop>
<name>zip</name>
<type>String</type>
<level>Basic</level>
<desc>具体一个地区的邮编</desc>
</prop>
</props>
</struct>
<struct>
<name>LogisticsCompany</name>
<desc>物流公司基础数据结构</desc>
<props>
<prop>
<name>code</name>
<type>String</type>
<level>Basic</level>
<desc>物流公司代码</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>物流公司标识</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>物流公司简称</desc>
</prop>
<prop>
<name>reg_mail_no</name>
<type>String</type>
<level>Basic</level>
<desc>运单号验证正则表达式</desc>
</prop>
</props>
</struct>
<struct>
<name>AndroidVlowUrl</name>
<desc>android  phone和pad播放的mp4文件类。适用2.3版本的Android。</desc>
<props>
<prop>
<name>hd</name>
<type>String</type>
<level>Basic</level>
<desc>android phone和pad播放的高清mp4文件。适用2.3版本的Android</desc>
</prop>
<prop>
<name>ld</name>
<type>String</type>
<level>Basic</level>
<desc>android phone和pad播放的流畅mp4文件。适用2.3版本的Android</desc>
</prop>
<prop>
<name>sd</name>
<type>String</type>
<level>Basic</level>
<desc>android phone和pad播放的标清mp4文件。适用2.3版本的Android</desc>
</prop>
<prop>
<name>ud</name>
<type>String</type>
<level>Basic</level>
<desc>android phone和pad播放的超清mp4文件。适用2.3版本的Android</desc>
</prop>
</props>
</struct>
<struct>
<name>INRecordBase</name>
<desc>词基础数据对象</desc>
<props>
<prop>
<name>avg_price</name>
<type>Number</type>
<level>Basic</level>
<desc>词在类目下平均点击价格</desc>
</prop>
<prop>
<name>click</name>
<type>Number</type>
<level>Basic</level>
<desc>词在类目下点击量</desc>
</prop>
<prop>
<name>competition</name>
<type>Number</type>
<level>Basic</level>
<desc>词在类目下竞争宝贝数(包括未展现客户)</desc>
</prop>
<prop>
<name>ctr</name>
<type>Price</type>
<level>Basic</level>
<desc>点击率</desc>
</prop>
<prop>
<name>date</name>
<type>Date</type>
<level>Basic</level>
<desc>时间点</desc>
</prop>
<prop>
<name>pv</name>
<type>Number</type>
<level>Basic</level>
<desc>词在类目下展现量</desc>
</prop>
</props>
</struct>
<struct>
<name>Shipping</name>
<desc>获取的物流订单详情列表 返回的Shipping包含的具体信息为入参fields请求的字段信息</desc>
<props>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<desc>买家昵称</desc>
</prop>
<prop>
<name>company_name</name>
<type>String</type>
<level>Basic</level>
<desc>物流公司名称</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>运单创建时间</desc>
</prop>
<prop>
<name>delivery_end</name>
<type>Date</type>
<level>Basic</level>
<desc>预约取货结束时间</desc>
</prop>
<prop>
<name>delivery_start</name>
<type>Date</type>
<level>Basic</level>
<desc>预约取货开始时间</desc>
</prop>
<prop>
<name>freight_payer</name>
<type>String</type>
<level>Basic</level>
<desc>谁承担运费.可选值:buyer(买家承担),seller(卖家承担运费).</desc>
</prop>
<prop>
<name>is_quick_cod_order</name>
<type>Boolean</type>
<level>Basic</level>
<desc>标示为是否快捷COD订单</desc>
</prop>
<prop>
<name>is_spilt</name>
<type>Number</type>
<level>Basic</level>
<desc>表明是否是拆单，默认值0，1表示拆单</desc>
</prop>
<prop>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>返回发货是否成功。</desc>
</prop>
<prop>
<name>item_title</name>
<type>String</type>
<level>Basic</level>
<desc>货物名称</desc>
</prop>
<prop>
<name>location</name>
<type>Location</type>
<level>Object</level>
<desc>收件人地址信息(在传输请求参数Fields字段时，必须使用“receiver_location”才能返回此字段)</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>运单修改时间</desc>
</prop>
<prop>
<name>order_code</name>
<type>String</type>
<level>Basic</level>
<desc>物流订单编号</desc>
</prop>
<prop>
<name>out_sid</name>
<type>String</type>
<level>Basic</level>
<desc>运单号.具体一个物流公司的运单号码.</desc>
</prop>
<prop>
<name>receiver_mobile</name>
<type>String</type>
<level>Basic</level>
<desc>收件人手机号码</desc>
</prop>
<prop>
<name>receiver_name</name>
<type>String</type>
<level>Basic</level>
<desc>收件人姓名</desc>
</prop>
<prop>
<name>receiver_phone</name>
<type>String</type>
<level>Basic</level>
<desc>收件人电话</desc>
</prop>
<prop>
<name>seller_confirm</name>
<type>String</type>
<level>Basic</level>
<desc>卖家是否确认发货.可选值:yes(是),no(否).</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>物流订单状态,可选值: 
CREATED(订单已创建)  
RECREATED(订单重新创建)  
CANCELLED(订单已取消)  
CLOSED(订单关闭)  
SENDING(等候发送给物流公司)  
ACCEPTING(已发送给物流公司,等待接单)  
ACCEPTED(物流公司已接单)  
REJECTED(物流公司不接单)  
PICK_UP(物流公司揽收成功)  
PICK_UP_FAILED(物流公司揽收失败)  
LOST(物流公司丢单)  
REJECTED_BY_RECEIVER(对方拒签)  
ACCEPTED_BY_RECEIVER(发货方式在线下单：对方已签收；自己联系：卖家已发货)</desc>
</prop>
<prop>
<name>sub_tids</name>
<type>Number</type>
<level>Basic Array</level>
<desc>拆单子订单列表，对应的数据是：该物流订单下的全部子订单</desc>
</prop>
<prop>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<desc>交易ID</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>物流方式.可选值:free(卖家包邮),post(平邮),express(快递),ems(EMS).</desc>
</prop>
</props>
</struct>
<struct>
<name>INCategoryBase</name>
<desc>类目基础数据对象</desc>
<props>
<prop>
<name>category_id</name>
<type>Number</type>
<level>Basic</level>
<desc>类目ID</desc>
</prop>
<prop>
<name>category_name</name>
<type>String</type>
<level>Basic</level>
<desc>类目名称</desc>
</prop>
<prop>
<name>category_pv</name>
<type>Number</type>
<level>Basic</level>
<desc>类目展现量</desc>
</prop>
<prop>
<name>in_record_base_list</name>
<type>INRecordBase</type>
<level>Object Array</level>
<desc>类目数据信息列表</desc>
</prop>
</props>
</struct>
<struct>
<name>TradeRate</name>
<desc>评价列表</desc>
<props>
<prop>
<name>content</name>
<type>String</type>
<level>Basic</level>
<desc>评价内容,最大长度:500个汉字</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>评价创建时间,格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>item_price</name>
<type>Price</type>
<level>Basic</level>
<desc>商品价格,精确到2位小数;单位:元.如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>item_title</name>
<type>String</type>
<level>Basic</level>
<desc>商品标题</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>评价者昵称</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<desc>商品的数字ID</desc>
</prop>
<prop>
<name>oid</name>
<type>Number</type>
<level>Basic</level>
<desc>子订单ID</desc>
</prop>
<prop>
<name>rated_nick</name>
<type>String</type>
<level>Basic</level>
<desc>被评价者昵称</desc>
</prop>
<prop>
<name>reply</name>
<type>String</type>
<level>Basic</level>
<desc>评价解释,最大长度:500个汉字</desc>
</prop>
<prop>
<name>result</name>
<type>String</type>
<level>Basic</level>
<desc>评价结果,可选值:good(好评),neutral(中评),bad(差评)</desc>
</prop>
<prop>
<name>role</name>
<type>String</type>
<level>Basic</level>
<desc>评价者角色.可选值:seller(卖家),buyer(买家)</desc>
</prop>
<prop>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<desc>交易ID</desc>
</prop>
<prop>
<name>valid_score</name>
<type>Boolean</type>
<level>Basic</level>
<desc>评价信息是否用于记分， 
可取值：true(参与记分)和false(不参与记分)</desc>
</prop>
</props>
</struct>
<struct>
<name>PromotionMjs</name>
<desc>营销工具满就送</desc>
<props>
<prop>
<name>area_ids</name>
<type>String</type>
<level>Basic</level>
<desc>不免邮省份的area_id列表。用';'间隔。最多10个。[110000:"北京"; 
120000:"天津"; 
130000:"河北"; 
140000:"山西"; 
150000:"内蒙古"; 
210000:"辽宁"; 
220000:"吉林"; 
230000:"黑龙江"; 
310000:"上海"; 
320000:"江苏"; 
330000:"浙江"; 
340000:"安徽"; 
350000:"福建"; 
360000:"江西"; 
370000:"山东"; 
410000:"河南"; 
420000:"湖北"; 
430000:"湖南"; 
440000:"广东"; 
450000:"广西"; 
460000:"海南"; 
500000:"重庆"; 
510000:"四川"; 
520000:"贵州"; 
530000:"云南"; 
540000:"西藏"; 
610000:"陕西"; 
620000:"甘肃"; 
630000:"青海"; 
640000:"宁夏"; 
650000:"新疆"; 
710000:"台湾"; 
810000:"香港"; 
820000:"澳门"; 
990000:"海外"]</desc>
</prop>
<prop>
<name>coupon_time</name>
<type>Date</type>
<level>Basic</level>
<desc>送优惠卷。优惠卷的有效期时间。</desc>
</prop>
<prop>
<name>coupon_value</name>
<type>Number</type>
<level>Basic</level>
<desc>送优惠卷面额。分为[3,5,10,20,50,100]面值。</desc>
</prop>
<prop>
<name>free_post</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否免邮！</desc>
</prop>
<prop>
<name>full_money</name>
<type>Number</type>
<level>Basic</level>
<desc>满就送的满多少钱。正整数。</desc>
</prop>
<prop>
<name>gift_name</name>
<type>String</type>
<level>Basic</level>
<desc>最长15个汉字。</desc>
</prop>
<prop>
<name>gift_url</name>
<type>String</type>
<level>Basic</level>
<desc>礼品的url地址。礼品链接必须是以http://或https://开头的淘宝站内链接。正则表达式:"^http[s]{0,1}://([a-z0-9\\-_]+\\.)*(mall\\.)?(taobao|taobaocdn)\\.(com|net|cn|com\\.cn)(/.*)*$"</desc>
</prop>
<prop>
<name>points</name>
<type>Number</type>
<level>Basic</level>
<desc>满就送积分。</desc>
</prop>
<prop>
<name>reduce_after</name>
<type>Boolean</type>
<level>Basic</level>
<desc>true时，减后满full_money才免邮费。false时，减前满full_money就免邮。</desc>
</prop>
<prop>
<name>reduce_money</name>
<type>Number</type>
<level>Basic</level>
<desc>满就送减掉的钱数。当满足full_money时，就减掉的钱数。这个钱数是小于full_money的正整数。</desc>
</prop>
</props>
</struct>
<struct>
<name>INCategoryProperties</name>
<desc>类目属性对象</desc>
<props>
<prop>
<name>properties_desc</name>
<type>String</type>
<level>Basic</level>
<desc>类目属性对象描述</desc>
</prop>
<prop>
<name>properties_id</name>
<type>Number</type>
<level>Basic</level>
<desc>类目属性对象ID</desc>
</prop>
<prop>
<name>properties_name</name>
<type>String</type>
<level>Basic</level>
<desc>类目属性名称</desc>
</prop>
</props>
</struct>
<struct>
<name>Permission</name>
<desc>权限信息</desc>
<props>
<prop>
<name>is_authorize</name>
<type>Number</type>
<level>Basic</level>
<desc>1 :允许授权  2：不允许授权 6：不允许授权但默认已有权限</desc>
</prop>
<prop>
<name>parent_code</name>
<type>String</type>
<level>Basic</level>
<desc>父权限code</desc>
</prop>
<prop>
<name>permission_code</name>
<type>String</type>
<level>Basic</level>
<desc>注册到权限中心的code值</desc>
</prop>
<prop>
<name>permission_name</name>
<type>String</type>
<level>Basic</level>
<desc>权限名称</desc>
</prop>
</props>
</struct>
<struct>
<name>INCategoryChildTop</name>
<desc>类目对象</desc>
<props>
<prop>
<name>category_desc</name>
<type>String</type>
<level>Basic</level>
<desc>类目属性描述</desc>
</prop>
<prop>
<name>category_id</name>
<type>Number</type>
<level>Basic</level>
<desc>类目对象id</desc>
</prop>
<prop>
<name>category_name</name>
<type>String</type>
<level>Basic</level>
<desc>类目名称</desc>
</prop>
<prop>
<name>category_properties_list</name>
<type>INCategoryProperties</type>
<level>Object Array</level>
<desc>类目属性对象列表</desc>
</prop>
</props>
</struct>
<struct>
<name>ItemDescModule</name>
<desc>商品详情模块</desc>
<props>
<prop>
<name>content</name>
<type>String</type>
<level>Basic</level>
<desc>描述具体内容</desc>
</prop>
<prop>
<name>intros</name>
<type>String</type>
<level>Basic</level>
<desc>一个List&lt;String&gt;的Json串，里面是模块引导提示，不超过3条（isv提交时可忽略不传）</desc>
</prop>
<prop>
<name>module_id</name>
<type>Number</type>
<level>Basic</level>
<desc>模块id ,(注意:用户自定义模块不用填此项。)</desc>
</prop>
<prop>
<name>module_name</name>
<type>String</type>
<level>Basic</level>
<desc>模块名称</desc>
</prop>
<prop>
<name>required</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否必填 （isv提交时可忽略不传）</desc>
</prop>
<prop>
<name>tpl_urls</name>
<type>String</type>
<level>Basic</level>
<desc>淘宝图片空间的地址链接，示例模板，最多不超过三个（isv提交时可忽略不传）</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>cat_mod:表示是运营设置的类目维度模块，usr_mod表示的是商家自定义模块。</desc>
</prop>
</props>
</struct>
<struct>
<name>ModularDescInfo</name>
<desc>商品描述模块化信息，包含类目级别的模块信息以及用户自定义模块约束等其他信息</desc>
<props>
<prop>
<name>dead_line</name>
<type>String</type>
<level>Basic</level>
<desc>旧描述与新描述共存时间（切换时间）。</desc>
</prop>
<prop>
<name>itm_dsc_modules</name>
<type>ItemDescModule</type>
<level>Object Array</level>
<desc>运营定义的该商品所属类目的类目级别模块信息列表，列表顺序即为模块顺序。</desc>
</prop>
<prop>
<name>user_order</name>
<type>Boolean</type>
<level>Basic</level>
<desc>默认值为false，如果此字段为true，则卖家上传的模块化的描述信息可以自定义排序。</desc>
</prop>
<prop>
<name>usr_def_max_num</name>
<type>Number</type>
<level>Basic</level>
<desc>用户自定义模块数量最大值限制。类目级别模块+用户级别模块必须小于&lt;20</desc>
</prop>
</props>
</struct>
<struct>
<name>ProductSpec</name>
<desc>ProductSpec(产品规格)结构。</desc>
<props>
<prop>
<name>barcode</name>
<type>String</type>
<level>Basic</level>
<desc>产品规格条形码，支持EAN-13格式。</desc>
</prop>
<prop>
<name>brand_id</name>
<type>Number</type>
<level>Basic</level>
<desc>产品品牌id</desc>
</prop>
<prop>
<name>certified_pics</name>
<type>CertPicInfo</type>
<level>Object Array</level>
<desc>认证图片列表</desc>
</prop>
<prop>
<name>certified_txts</name>
<type>CertTxtInfo</type>
<level>Object Array</level>
<desc>认证文本列表</desc>
</prop>
<prop>
<name>change_prop</name>
<type>String</type>
<level>Basic</level>
<desc>基础色数据</desc>
</prop>
<prop>
<name>custome_props_name</name>
<type>String</type>
<level>Basic</level>
<desc>用户输入的属性值存放位置，例如可输入的销售属性，当用户获取pid vid后，应该先从spec_props_alias中获取，然后通过类目属性获取，获取不到，可以通过这个字段获取。</desc>
</prop>
<prop>
<name>label_price</name>
<type>Number</type>
<level>Basic</level>
<desc>产品规格吊牌价，以分为单位的整数，非负,无默认值，上限999999999</desc>
</prop>
<prop>
<name>market_time</name>
<type>Date</type>
<level>Basic</level>
<desc>上市时间</desc>
</prop>
<prop>
<name>number</name>
<type>Number</type>
<level>Basic</level>
<desc>规格的数量，仅当通过组合产品获取时有值</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>产品的主图片地址。绝对地址，格式：http://host/image_path。</desc>
</prop>
<prop>
<name>product_code</name>
<type>String</type>
<level>Basic</level>
<desc>产品货号</desc>
</prop>
<prop>
<name>product_id</name>
<type>Number</type>
<level>Basic</level>
<desc>产品ID。</desc>
</prop>
<prop>
<name>spec_id</name>
<type>Number</type>
<level>Basic</level>
<desc>产品规格ID。</desc>
</prop>
<prop>
<name>spec_props</name>
<type>String</type>
<level>Basic</level>
<desc>产品规格的销售属性组合。格式为：pid:vid;pid:vid。其中：pid是销售属性id，vid是销售属性值id。如果该类目品牌下面没有销售属性，可以不用填写。销售属性通过tmall.brandcat.salespro.get接口获取。</desc>
</prop>
<prop>
<name>spec_props_alias</name>
<type>String</type>
<level>Basic</level>
<desc>销售属性值别名。格式为：pid1:vid1:别名1;pid2:vid2:别名2。其中：pid是销售属性id，vid是销售属性值id。别名长度不可以超过30个字符。目前只有颜色销售属性支持别名。</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<desc>1:表示可以使用的数据，也就是审核通过的。 
3：表示等待小二审核的产品规格，这个数据暂时还不能使用，要等待审核通过后，才能使用。</desc>
</prop>
</props>
</struct>
<struct>
<name>CertPicInfo</name>
<desc>产品资质认证图片信息，包括认证类型以及图片url</desc>
<props>
<prop>
<name>cert_type</name>
<type>Number</type>
<level>Basic</level>
<desc>认证类型的数值id</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>认证图片的url地址</desc>
</prop>
</props>
</struct>
<struct>
<name>IdsModule</name>
<desc>用于保存宝贝描述规范化模块信息</desc>
<props>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>宝贝描述规范化模块id</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>宝贝描述规范化模块名</desc>
</prop>
<prop>
<name>type</name>
<type>Number</type>
<level>Basic</level>
<desc>0为自动打标； 
1为人工打标；</desc>
</prop>
</props>
</struct>
<struct>
<name>ProductExtraInfo</name>
<desc>产品扩展信息</desc>
<props>
<prop>
<name>field_key</name>
<type>String</type>
<level>Basic</level>
<desc>产品扩展信息键</desc>
</prop>
<prop>
<name>field_name</name>
<type>String</type>
<level>Basic</level>
<desc>产品扩展信息名称</desc>
</prop>
<prop>
<name>field_value</name>
<type>String</type>
<level>Basic</level>
<desc>产品扩展信息简介</desc>
</prop>
<prop>
<name>product_id</name>
<type>Number</type>
<level>Basic</level>
<desc>产品ID</desc>
</prop>
</props>
</struct>
<struct>
<name>SubUserInfo</name>
<desc>子账号基本信息</desc>
<props>
<prop>
<name>full_name</name>
<type>String</type>
<level>Basic</level>
<desc>子账号姓名</desc>
</prop>
<prop>
<name>is_online</name>
<type>Number</type>
<level>Basic</level>
<desc>是否参与分流 1不参与 2参与</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>子账号用户名</desc>
</prop>
<prop>
<name>seller_id</name>
<type>Number</type>
<level>Basic</level>
<desc>子账号所属的主账号的唯一标识</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<desc>主账号昵称</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<desc>子账号当前状态 1正常 -1删除  2冻结</desc>
</prop>
<prop>
<name>sub_id</name>
<type>Number</type>
<level>Basic</level>
<desc>子账号Id</desc>
</prop>
</props>
</struct>
<struct>
<name>CatBrandSaleProp</name>
<desc>被管控的品牌和类目的所对应的销售属性</desc>
<props>
<prop>
<name>brand_id</name>
<type>Number</type>
<level>Basic</level>
<desc>被管控的品牌的Id</desc>
</prop>
<prop>
<name>cat_id</name>
<type>Number</type>
<level>Basic</level>
<desc>被管控的类目ID</desc>
</prop>
<prop>
<name>def_market_prop_value</name>
<type>Number</type>
<level>Basic</level>
<desc>如果该属性为营销属性，则获取默认值</desc>
</prop>
<prop>
<name>is_not_spec</name>
<type>Boolean</type>
<level>Basic</level>
<desc>true表示：不是产品的规格属性 
false表示：是产品的规格属性。</desc>
</prop>
<prop>
<name>property_id</name>
<type>Number</type>
<level>Basic</level>
<desc>被管控的销售属性ID</desc>
</prop>
</props>
</struct>
<struct>
<name>JdpUser</name>
<desc>使用数据推送的用户信息</desc>
<props>
<prop>
<name>rds_name</name>
<type>String</type>
<level>Basic</level>
<desc>rds数据库的实例名</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<desc>0:暂停 
1：正常 
2：sessoin失效，停止 
3：已删除</desc>
</prop>
<prop>
<name>user_nick</name>
<type>String</type>
<level>Basic</level>
<desc>用户昵称</desc>
</prop>
</props>
</struct>
<struct>
<name>BrandCatControlInfo</name>
<desc>管控的类目以及品牌信息</desc>
<props>
<prop>
<name>brand_cat_controls</name>
<type>BrandCatControl</type>
<level>Object Array</level>
<desc>管控的品牌类目信息，一组列表</desc>
</prop>
</props>
</struct>
<struct>
<name>RdsConfig</name>
<desc>rds的配置信息</desc>
<props>
<prop>
<name>appkey</name>
<type>String</type>
<level>Basic</level>
<desc>appkey</desc>
</prop>
<prop>
<name>db_type</name>
<type>String</type>
<level>Basic</level>
<desc>数据库类型，mysql/sqlserver</desc>
</prop>
<prop>
<name>db_user</name>
<type>String</type>
<level>Basic</level>
<desc>数据库用户名</desc>
</prop>
<prop>
<name>host</name>
<type>String</type>
<level>Basic</level>
<desc>主机地址</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>数据推送rds表里的id</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>rds数据库实例名</desc>
</prop>
<prop>
<name>port</name>
<type>String</type>
<level>Basic</level>
<desc>rds数据库端口</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>数据库状态</desc>
</prop>
</props>
</struct>
<struct>
<name>BrandCatControl</name>
<desc>管控的品牌类目信息</desc>
<props>
<prop>
<name>brand_id</name>
<type>Number</type>
<level>Basic</level>
<desc>被管控的品牌的ID号码</desc>
</prop>
<prop>
<name>brand_name</name>
<type>String</type>
<level>Basic</level>
<desc>被管控的品牌名称</desc>
</prop>
<prop>
<name>cat_id</name>
<type>Number</type>
<level>Basic</level>
<desc>被管控的类目的ID号</desc>
</prop>
<prop>
<name>cat_name</name>
<type>String</type>
<level>Basic</level>
<desc>被管控的类目的ID号</desc>
</prop>
<prop>
<name>certified_data</name>
<type>String</type>
<level>Basic</level>
<desc>以;隔开多个认证资料。:隔开资料ID与内容。如？1:产品包装图片;2:完整产品资质</desc>
</prop>
</props>
</struct>
<struct>
<name>Feature</name>
<desc>类目属性</desc>
<props>
<prop>
<name>attr_key</name>
<type>String</type>
<level>Basic</level>
<desc>属性键</desc>
</prop>
<prop>
<name>attr_value</name>
<type>String</type>
<level>Basic</level>
<desc>属性值</desc>
</prop>
</props>
</struct>
<struct>
<name>TmcUser</name>
<desc>消息通道的用户结构</desc>
<props>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>用户首次开通时间</desc>
</prop>
<prop>
<name>group_name</name>
<type>String</type>
<level>Basic</level>
<desc>接收用户消息的组名</desc>
</prop>
<prop>
<name>is_valid</name>
<type>Boolean</type>
<level>Basic</level>
<desc>用户授权是否有效，true表示授权有效，false表示授权过期</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>用户最后开通时间</desc>
</prop>
<prop>
<name>topics</name>
<type>String</type>
<level>Basic Array</level>
<desc>用户开通的消息类型列表。如果为空表示应用开通的所有类型</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>用户ID</desc>
</prop>
<prop>
<name>user_nick</name>
<type>String</type>
<level>Basic</level>
<desc>用户昵称</desc>
</prop>
</props>
</struct>
<struct>
<name>TmcMessage</name>
<desc>消息通道的通用消息结构</desc>
<props>
<prop>
<name>content</name>
<type>String</type>
<level>Basic</level>
<desc>消息详细内容，格式为JSON/XML</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>消息ID</desc>
</prop>
<prop>
<name>pub_app_key</name>
<type>String</type>
<level>Basic</level>
<desc>消息发布者的AppKey</desc>
</prop>
<prop>
<name>pub_time</name>
<type>Date</type>
<level>Basic</level>
<desc>消息发布时间</desc>
</prop>
<prop>
<name>topic</name>
<type>String</type>
<level>Basic</level>
<desc>消息所属主题</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>消息所属的用户编号</desc>
</prop>
<prop>
<name>user_nick</name>
<type>String</type>
<level>Basic</level>
<desc>用户的昵称</desc>
</prop>
</props>
</struct>
<struct>
<name>TmcGroup</name>
<desc>消息通道的分组结构</desc>
<props>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>分组名称</desc>
</prop>
<prop>
<name>users</name>
<type>String</type>
<level>Basic Array</level>
<desc>用户列表</desc>
</prop>
</props>
</struct>
<struct>
<name>CertTxtInfo</name>
<desc>产品资质认证文本信息，包括认证类型以及文本信息</desc>
<props>
<prop>
<name>cert_type</name>
<type>Number</type>
<level>Basic</level>
<desc>认证类型的数值id</desc>
</prop>
<prop>
<name>text</name>
<type>String</type>
<level>Basic</level>
<desc>认证文本信息</desc>
</prop>
</props>
</struct>
<struct>
<name>PictureCategory</name>
<desc>图片分类</desc>
<props>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>图片类目的创建时间</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<desc>图片分类的修改时间</desc>
</prop>
<prop>
<name>parent_id</name>
<type>Number</type>
<level>Basic</level>
<desc>一级分类的parent_id为0 
二级分类的则为其父分类的picture_category_id</desc>
</prop>
<prop>
<name>picture_category_id</name>
<type>Number</type>
<level>Basic</level>
<desc>图片分类ID</desc>
</prop>
<prop>
<name>picture_category_name</name>
<type>String</type>
<level>Basic</level>
<desc>图片分类名</desc>
</prop>
<prop>
<name>position</name>
<type>Number</type>
<level>Basic</level>
<desc>图片分类排序</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<desc>图片分类型别，sys-fixture代表店铺装修分类(系统分类)，sys-auction代表宝贝图片分类(系统分类)，user-define代表用户自定义分类</desc>
</prop>
</props>
</struct>
<struct>
<name>Rankingforecast</name>
<desc>关键词预估</desc>
<props>
<prop>
<name>keyword_id</name>
<type>Number</type>
<level>Basic</level>
<desc>词ID</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>主人昵称</desc>
</prop>
<prop>
<name>prices</name>
<type>Number</type>
<level>Basic Array</level>
<desc>返回prices对应的排名</desc>
</prop>
<prop>
<name>word</name>
<type>String</type>
<level>Basic</level>
<desc>词名称</desc>
</prop>
</props>
</struct>
<struct>
<name>WaitingTimesOnDay</name>
<desc>客户等待（客服）平均时长列表</desc>
<props>
<prop>
<name>waiting_date</name>
<type>Date</type>
<level>Basic</level>
<desc>等待时长（统计）日期</desc>
</prop>
<prop>
<name>waiting_time_by_ids</name>
<type>WaitingTimeById</type>
<level>Object Array</level>
<desc>等待时长列表</desc>
</prop>
</props>
</struct>
<struct>
<name>NonReplyStatOnDay</name>
<desc>未回复统计列表(按天)</desc>
<props>
<prop>
<name>nonreply_date</name>
<type>Date</type>
<level>Basic</level>
<desc>（某天的）未回复统计</desc>
</prop>
<prop>
<name>nonreply_stat_by_ids</name>
<type>NonreplyStatById</type>
<level>Object Array</level>
<desc>未回复统计列表</desc>
</prop>
</props>
</struct>
<struct>
<name>StaffEvalStatOnDay</name>
<desc>客服评价统计列表(按天)</desc>
<props>
<prop>
<name>eval_date</name>
<type>Date</type>
<level>Basic</level>
<desc>评价产生的日期</desc>
</prop>
<prop>
<name>staff_eval_stat_by_ids</name>
<type>StaffEvalStatById</type>
<level>Object Array</level>
<desc>客服评价统计列表</desc>
</prop>
</props>
</struct>
<struct>
<name>OnlineTimesOnDay</name>
<desc>某天的客服在线时长列表</desc>
<props>
<prop>
<name>online_date</name>
<type>Date</type>
<level>Basic</level>
<desc>在线日期</desc>
</prop>
<prop>
<name>online_time_by_ids</name>
<type>OnlineTimeById</type>
<level>Object Array</level>
<desc>在线时长列表</desc>
</prop>
</props>
</struct>
<struct>
<name>Task</name>
<desc>批量异步任务结果</desc>
<props>
<prop>
<name>check_code</name>
<type>String</type>
<level>Basic</level>
<desc>下载文件的MD5校验码，通过此校验码可以检查下载的文件是否是完整的。</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>任务创建时间</desc>
</prop>
<prop>
<name>download_url</name>
<type>String</type>
<level>Basic</level>
<desc>大任务结果下载地址。当创建的认任务是大数据量的任务时，获取结果会返回此字段，同时subtasks列表会为空。
通过这个地址可以下载到结果的结构体，格式同普通任务下载的一样。
每次获取到的地址只能下载一次。下载的文件加上后缀名.zip打开。</desc>
</prop>
<prop>
<name>method</name>
<type>String</type>
<level>Basic</level>
<desc>此任务是由哪个api产生的</desc>
</prop>
<prop>
<name>schedule</name>
<type>Date</type>
<level>Basic</level>
<desc>定时类型任务的执行时间点</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>异步任务处理状态。new（还未开始处理），doing（处理中），done（处理结束）。</desc>
</prop>
<prop>
<name>subtasks</name>
<type>Subtask</type>
<level>Object Array</level>
<desc>子任务处理结果，如果任务还没有处理完，返回的结果列表为空。如果任务处理完毕，返回子任务结果列表</desc>
</prop>
<prop>
<name>task_id</name>
<type>Number</type>
<level>Basic</level>
<desc>异步任务id。创建异步任务时返回的任务id号</desc>
</prop>
</props>
</struct>
<struct>
<name>PicUrl</name>
<desc>图片链接</desc>
<props>
<prop>
<name>url</name>
<type>String</type>
<level>Basic</level>
<desc>图片链接地址</desc>
</prop>
</props>
</struct>
<struct>
<name>Subtask</name>
<desc>批量异步任务的子任务结果</desc>
<props>
<prop>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>标记子任务是否成功。为true表示子任务成功，用户可以按照正确执行的结果格式解析sub_task_result。为false表示子任务失败了，用户需要按照失败的结果格式解析sub_task_result（里面只有sub_code和sub_msg）</desc>
</prop>
<prop>
<name>sub_task_request</name>
<type>String</type>
<level>Basic</level>
<desc>子任务的有效请求参数，以json格式进行key:value的组合</desc>
</prop>
<prop>
<name>sub_task_result</name>
<type>String</type>
<level>Basic</level>
<desc>子任务返回的结果，以json格式进行key:value组合，可以和单个api请求结果解析复用。以获取交易订单详情为例：子任务执行成功返回的结果格式为：{“trade”:{"tid":123456,"seller_nick":"淘宝卖家"}}；子任务执行失败结果格式为{"sub_code":"isv.trade-not-exist","sub_msg":"交易订单不存在"}</desc>
</prop>
</props>
</struct>
<struct>
<name>ReplyStatOnDay</name>
<desc>(某天)回复统计列表</desc>
<props>
<prop>
<name>reply_date</name>
<type>Date</type>
<level>Basic</level>
<desc>某天（的回复统计）</desc>
</prop>
<prop>
<name>reply_stat_by_ids</name>
<type>ReplyStatById</type>
<level>Object Array</level>
<desc>客服回复统计</desc>
</prop>
</props>
</struct>
<struct>
<name>ArticleUserSubscribe</name>
<desc>用户订购信息</desc>
<props>
<prop>
<name>deadline</name>
<type>Date</type>
<level>Basic</level>
<desc>订购关系到期时间</desc>
</prop>
<prop>
<name>item_code</name>
<type>String</type>
<level>Basic</level>
<desc>收费项目代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得收费项目代码</desc>
</prop>
</props>
</struct>
<struct>
<name>ArticleBizOrder</name>
<desc>应用订单信息</desc>
<props>
<prop>
<name>article_code</name>
<type>String</type>
<level>Basic</level>
<desc>应用收费代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得该应用的收费代码</desc>
</prop>
<prop>
<name>article_item_name</name>
<type>String</type>
<level>Basic</level>
<desc>商品模型名称</desc>
</prop>
<prop>
<name>article_name</name>
<type>String</type>
<level>Basic</level>
<desc>应用名称</desc>
</prop>
<prop>
<name>biz_order_id</name>
<type>Number</type>
<level>Basic</level>
<desc>订单号</desc>
</prop>
<prop>
<name>biz_type</name>
<type>Number</type>
<level>Basic</level>
<desc>订单类型，1=新订 2=续订 3=升级 4=后台赠送 5=后台自动续订 6=订单审核后生成订购关系（暂时用不到）</desc>
</prop>
<prop>
<name>create</name>
<type>Date</type>
<level>Basic</level>
<desc>订单创建时间（订购时间）</desc>
</prop>
<prop>
<name>fee</name>
<type>String</type>
<level>Basic</level>
<desc>原价（单位为分）</desc>
</prop>
<prop>
<name>item_code</name>
<type>String</type>
<level>Basic</level>
<desc>收费项目代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得收费项目代码</desc>
</prop>
<prop>
<name>item_name</name>
<type>String</type>
<level>Basic</level>
<desc>收费项目名称</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>淘宝会员名</desc>
</prop>
<prop>
<name>order_cycle</name>
<type>String</type>
<level>Basic</level>
<desc>订购周期  1表示年 ，2表示月，3表示天。</desc>
</prop>
<prop>
<name>order_cycle_end</name>
<type>Date</type>
<level>Basic</level>
<desc>订购周期结束时间</desc>
</prop>
<prop>
<name>order_cycle_start</name>
<type>Date</type>
<level>Basic</level>
<desc>订购周期开始时间</desc>
</prop>
<prop>
<name>order_id</name>
<type>Number</type>
<level>Basic</level>
<desc>子订单号</desc>
</prop>
<prop>
<name>prom_fee</name>
<type>String</type>
<level>Basic</level>
<desc>优惠（单位为分）</desc>
</prop>
<prop>
<name>refund_fee</name>
<type>String</type>
<level>Basic</level>
<desc>退款（单位为分；升级时，系统会将升级前老版本按照剩余订购天数退还剩余金额）</desc>
</prop>
<prop>
<name>total_pay_fee</name>
<type>String</type>
<level>Basic</level>
<desc>实付（单位为分）</desc>
</prop>
</props>
</struct>
<struct>
<name>SpuTemplateDO</name>
<desc>SPU发布模板，定义了产品发布需要那些关键属性，绑定属性。</desc>
<props>
<prop>
<name>affect_properties</name>
<type>Number</type>
<level>Basic Array</level>
<desc>产品绑定属性，内容为属性ID(PID)的列表,绑定属性肯定在类目上有，对应属性的类目特征，子属性请根据PID到类目上去取</desc>
</prop>
<prop>
<name>category_id</name>
<type>Number</type>
<level>Basic</level>
<desc>类目ID</desc>
</prop>
<prop>
<name>commodity_id</name>
<type>Number</type>
<level>Basic</level>
<desc>品类ID，和类目ID类似</desc>
</prop>
<prop>
<name>filter_properties</name>
<type>Number</type>
<level>Basic Array</level>
<desc>过滤属性，内容有属性ID(PID)列表，很重要的属性，filter_properties包含的属性，必须填写</desc>
</prop>
<prop>
<name>key_properties</name>
<type>Number</type>
<level>Basic Array</level>
<desc>产品关键属性，内容为属性ID(PID)的列表，注意关键属性可以在类目上不存在。不存在的PID，默认为输入，没有子属性。属性名称在prop_name_str中取</desc>
</prop>
<prop>
<name>prop_features</name>
<type>String</type>
<level>Basic</level>
<desc>预留</desc>
</prop>
<prop>
<name>prop_name_str</name>
<type>String</type>
<level>Basic</level>
<desc>属性名称扁平化结构，只保证不在类目上的CP有值</desc>
</prop>
<prop>
<name>template_id</name>
<type>Number</type>
<level>Basic</level>
<desc>模板ID，发布产品，必须放到Product中</desc>
</prop>
</props>
</struct>
<struct>
<name>SuiteConfDO</name>
<desc>套装配置</desc>
<props>
<prop>
<name>inputs</name>
<type>Number</type>
<level>Basic Array</level>
<desc>如果有值，套装子规格形如：A*n,B*n,C*n....，n只能是inputs中的</desc>
</prop>
<prop>
<name>max_size</name>
<type>Number</type>
<level>Basic</level>
<desc>套装，子规格限制数，当前一级类目，最多允许选择多少个产品规格，为空表示无限制。套装子规格形如:A*n,B*n,C*n....,max_size就是C的最大个数</desc>
</prop>
<prop>
<name>max_total_number</name>
<type>Number</type>
<level>Basic</level>
<desc>套装，子规格数量总和限制，当前一级类目，所以子产品规格的数量不能超过这个值，为空表示无限制,套装子规格形如：A*n,B*n,C*n....,max_total_number就是所有n和的最大限制</desc>
</prop>
<prop>
<name>root_cat_id</name>
<type>Number</type>
<level>Basic</level>
<desc>一级类目ID，标识在该一级在类目下能布套装</desc>
</prop>
<prop>
<name>suite_cat_id</name>
<type>Number</type>
<level>Basic</level>
<desc>套装类目ID，当前一级类目，如果发布跨叶子类目的的套装，默认放到那个类目。如果没有值表示root_cat_id类目下发布的套装产品，不支持跨类目</desc>
</prop>
</props>
</struct>
<struct>
<name>PromotionDetail</name>
<desc>交易的优惠信息详情</desc>
<props>
<prop>
<name>discount_fee</name>
<type>Price</type>
<level>Basic</level>
<desc>优惠金额（免运费、限时打折时为空）,单位：元</desc>
</prop>
<prop>
<name>gift_item_id</name>
<type>String</type>
<level>Basic</level>
<desc>赠品的宝贝id</desc>
</prop>
<prop>
<name>gift_item_name</name>
<type>String</type>
<level>Basic</level>
<desc>满就送商品时，所送商品的名称</desc>
</prop>
<prop>
<name>gift_item_num</name>
<type>String</type>
<level>Basic</level>
<desc>满就送礼物的礼物数量</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>交易的主订单或子订单号</desc>
</prop>
<prop>
<name>promotion_desc</name>
<type>String</type>
<level>Basic</level>
<desc>优惠活动的描述</desc>
</prop>
<prop>
<name>promotion_id</name>
<type>String</type>
<level>Basic</level>
<desc>优惠id，(由营销工具id、优惠活动id和优惠详情id组成，结构为：营销工具id-优惠活动id_优惠详情id，如mjs-123024_211143）</desc>
</prop>
<prop>
<name>promotion_name</name>
<type>String</type>
<level>Basic</level>
<desc>优惠信息的名称</desc>
</prop>
</props>
</struct>
<struct>
<name>KfcSearchResult</name>
<desc>KFC 关键词过滤匹配结果</desc>
<props>
<prop>
<name>content</name>
<type>String</type>
<level>Basic</level>
<desc>过滤后的文本： 
当匹配到B等级的词时，文本中的关键词被替换为*号，content即为关键词替换后的文本； 
其他情况，content始终为null</desc>
</prop>
<prop>
<name>level</name>
<type>String</type>
<level>Basic</level>
<desc>匹配到的关键词的等级，值为null，或为A、B、C、D。 
当匹配不到关键词时，值为null，否则值为A、B、C、D中的一个。 
A、B、C、D等级按严重程度从高至低排列。</desc>
</prop>
<prop>
<name>matched</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否匹配到关键词,匹配到则为true.</desc>
</prop>
</props>
</struct>
<struct>
<name>Meal</name>
<desc>搭配套餐类。</desc>
<props>
<prop>
<name>item_list</name>
<type>String</type>
<level>Basic</level>
<desc>搭配套餐商品列表。item_id为商品的id;item_show_name为商品显示名。因最多允许5个商品进行搭配，所以查询最多有5个，以json格式传出。</desc>
</prop>
<prop>
<name>meal_id</name>
<type>Number</type>
<level>Basic</level>
<desc>套餐id。</desc>
</prop>
<prop>
<name>meal_memo</name>
<type>String</type>
<level>Basic</level>
<desc>搭配套餐描述！</desc>
</prop>
<prop>
<name>meal_name</name>
<type>String</type>
<level>Basic</level>
<desc>搭配套餐名称。</desc>
</prop>
<prop>
<name>meal_price</name>
<type>Price</type>
<level>Basic</level>
<desc>套餐一口价(单位是：分)</desc>
</prop>
<prop>
<name>postage_id</name>
<type>Number</type>
<level>Basic</level>
<desc>普通运费模板id。若这个字段为空或0时，运费是卖家负责;若这个字段不为空，说明运费模板存在，运费是买家负责。</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>套餐状态。有效：VALID;失效：INVALID(有效套餐为可使用的套餐,无效套餐为套餐中有商品下架或库存为0时)。</desc>
</prop>
</props>
</struct>
<struct>
<name>ArticleSub</name>
<desc>应用订购信息</desc>
<props>
<prop>
<name>article_code</name>
<type>String</type>
<level>Basic</level>
<desc>应用收费代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得该应用的收费代码</desc>
</prop>
<prop>
<name>article_name</name>
<type>String</type>
<level>Basic</level>
<desc>应用名称</desc>
</prop>
<prop>
<name>autosub</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否自动续费</desc>
</prop>
<prop>
<name>deadline</name>
<type>Date</type>
<level>Basic</level>
<desc>订购关系到期时间</desc>
</prop>
<prop>
<name>expire_notice</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否到期提醒</desc>
</prop>
<prop>
<name>item_code</name>
<type>String</type>
<level>Basic</level>
<desc>收费项目代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得收费项目代码</desc>
</prop>
<prop>
<name>item_name</name>
<type>String</type>
<level>Basic</level>
<desc>收费项目名称</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>淘宝会员名</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<desc>状态，1=有效 2=过期</desc>
</prop>
</props>
</struct>
<struct>
<name>GroupMember</name>
<desc>组及其成员列表</desc>
<props>
<prop>
<name>group_id</name>
<type>Number</type>
<level>Basic</level>
<desc>组编号</desc>
</prop>
<prop>
<name>group_name</name>
<type>String</type>
<level>Basic</level>
<desc>组名称</desc>
</prop>
<prop>
<name>member_list</name>
<type>String</type>
<level>Basic</level>
<desc>组成员列表，逗号分隔</desc>
</prop>
</props>
</struct>
<struct>
<name>PromotionRange</name>
<desc>满就送参与范围</desc>
<props>
<prop>
<name>activity_id</name>
<type>Number</type>
<level>Basic</level>
<desc>活动id。</desc>
</prop>
<prop>
<name>activity_name</name>
<type>String</type>
<level>Basic</level>
<desc>活动名称。</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>参与活动的商品id。</desc>
</prop>
</props>
</struct>
<struct>
<name>ItemPromotion</name>
<desc>无条件单品优惠数据对象</desc>
<props>
<prop>
<name>activity_id</name>
<type>Number</type>
<level>Basic</level>
<desc>活动id</desc>
</prop>
<prop>
<name>decrease_amount</name>
<type>Number</type>
<level>Basic</level>
<desc>减多少钱。当is_decrease_money为true时，该值才有意义。注意：该值单位为分，即100表示1元。</desc>
</prop>
<prop>
<name>description</name>
<type>String</type>
<level>Basic</level>
<desc>活动的有效条件、人群和行为描述。</desc>
</prop>
<prop>
<name>discount_rate</name>
<type>Number</type>
<level>Basic</level>
<desc>折扣值。当is_discount为true时，该值才有意义。注意：800表示8折。</desc>
</prop>
<prop>
<name>end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>活动结束时间。</desc>
</prop>
<prop>
<name>is_decrease_money</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否有减钱行为。</desc>
</prop>
<prop>
<name>is_discount</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否有打折行为。</desc>
</prop>
<prop>
<name>is_user_tag</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否指定用户标签。</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>活动名称。</desc>
</prop>
<prop>
<name>participate_range</name>
<type>Number</type>
<level>Basic</level>
<desc>活动范围：0表示全部参与； 1表示部分商品参与。</desc>
</prop>
<prop>
<name>start_time</name>
<type>Date</type>
<level>Basic</level>
<desc>活动开始时间。</desc>
</prop>
<prop>
<name>user_tag</name>
<type>String</type>
<level>Basic</level>
<desc>用户标签。当is_user_tag为true时，该值才有意义。</desc>
</prop>
</props>
</struct>
<struct>
<name>PropertyInputDO</name>
<desc>属性输入特征DO</desc>
<props>
<prop>
<name>is_allow_input</name>
<type>Boolean</type>
<level>Basic</level>
<desc>property_id对应的属性是否可输入</desc>
</prop>
<prop>
<name>is_root_allow_input</name>
<type>Boolean</type>
<level>Basic</level>
<desc>如果property_id对应的属性是子属性，is_root_allow_input标识该子属性的顶级父属性是否可输入。否则is_root_allow_input和is_allow_input 
值是一样的。目前只有品牌会出现父属性不可输入，子属性可输入的情况</desc>
</prop>
<prop>
<name>is_sub_property</name>
<type>Boolean</type>
<level>Basic</level>
<desc>property_id对应的属性是不是子属性</desc>
</prop>
<prop>
<name>property_id</name>
<type>Number</type>
<level>Basic</level>
<desc>属性ID</desc>
</prop>
</props>
</struct>
<struct>
<name>RefundBaseResponse</name>
<desc>退款平台基础返回对象</desc>
<props>
<prop>
<name>message</name>
<type>String</type>
<level>Basic</level>
<desc>返回的信息，包括成功和失败的具体信息</desc>
</prop>
<prop>
<name>msg_code</name>
<type>Number</type>
<level>Basic</level>
<desc>返回的信息编号</desc>
</prop>
<prop>
<name>success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>指示操作是否成功</desc>
</prop>
</props>
</struct>
<struct>
<name>MjsPromotion</name>
<desc>满就送对象数据结构</desc>
<props>
<prop>
<name>activity_id</name>
<type>Number</type>
<level>Basic</level>
<desc>活动id</desc>
</prop>
<prop>
<name>decrease_amount</name>
<type>Number</type>
<level>Basic</level>
<desc>减多少钱。当is_decrease_money为true时，该值才有意义。注意：该值单位为分，即100表示1元。</desc>
</prop>
<prop>
<name>description</name>
<type>String</type>
<level>Basic</level>
<desc>活动的有效条件、人群和行为描述。</desc>
</prop>
<prop>
<name>discount_rate</name>
<type>Number</type>
<level>Basic</level>
<desc>折扣值。当is_discount为true时，该值才有意义。注意：800表示8折。</desc>
</prop>
<prop>
<name>end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>活动结束时间。</desc>
</prop>
<prop>
<name>exclude_area</name>
<type>String</type>
<level>Basic</level>
<desc>免邮的排除地区，即，除指定地区外，其他地区包邮。当is_free_post为true时，该值才有意义。代码使用*链接，代码为行政区划代码。</desc>
</prop>
<prop>
<name>gift_id</name>
<type>Number</type>
<level>Basic</level>
<desc>礼品id，当is_send_gift为true时，该值才有意义。 
1）只有填写真实的淘宝商品id时，才能生成物流单，并且在确定订单的页面上可以点击该商品名称跳转到商品详情页面。2）当礼物为实物商品时(有宝贝id),礼物必须为上架商品,不能为虚拟商品,不能为拍卖商品,不能有sku,不符合条件的,不做为礼物。</desc>
</prop>
<prop>
<name>gift_name</name>
<type>String</type>
<level>Basic</level>
<desc>礼品名称。当is_send_gift为true时，该值才有意义。</desc>
</prop>
<prop>
<name>gift_url</name>
<type>String</type>
<level>Basic</level>
<desc>商品详情的url，当is_send_gift为true时，该值才有效。</desc>
</prop>
<prop>
<name>is_amount_multiple</name>
<type>Boolean</type>
<level>Basic</level>
<desc>满元是否上不封顶。当is_amount_over为true时，该值才有意义。当该值为true时，表示满元上不封顶，例如满100元减10元，当满200时，则减20元。。。</desc>
</prop>
<prop>
<name>is_amount_over</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否有满元条件。</desc>
</prop>
<prop>
<name>is_decrease_money</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否有减钱行为。</desc>
</prop>
<prop>
<name>is_discount</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否有打折行为。</desc>
</prop>
<prop>
<name>is_free_post</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否有免邮行为。</desc>
</prop>
<prop>
<name>is_item_count_over</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否有满件条件。</desc>
</prop>
<prop>
<name>is_item_multiple</name>
<type>Boolean</type>
<level>Basic</level>
<desc>满件是否上不封顶。当is_amount_multiple为true时，该值才有意义。当该值为true时，表示满件上不封顶，例如满10件减2元，当满20件时，则减4元。。。</desc>
</prop>
<prop>
<name>is_send_gift</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否有送礼品行为。</desc>
</prop>
<prop>
<name>is_shop_member</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否有店铺会员等级条件。</desc>
</prop>
<prop>
<name>is_user_tag</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否指定用户标签。</desc>
</prop>
<prop>
<name>item_count</name>
<type>Number</type>
<level>Basic</level>
<desc>满多少件。当is_item_count_over为true时，该值才有意义。</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>活动名称。</desc>
</prop>
<prop>
<name>participate_range</name>
<type>Number</type>
<level>Basic</level>
<desc>活动范围：0表示全部参与； 1表示部分商品参与。</desc>
</prop>
<prop>
<name>shop_member_level</name>
<type>Number</type>
<level>Basic</level>
<desc>店铺会员等级，当is_shop_member为true时，该值才有意义。0：店铺客户；1：普通客户；2：高级会员；3：VIP会员； 4：至尊VIP会员。</desc>
</prop>
<prop>
<name>start_time</name>
<type>Date</type>
<level>Basic</level>
<desc>活动开始时间。</desc>
</prop>
<prop>
<name>total_price</name>
<type>Number</type>
<level>Basic</level>
<desc>满多少元。当is_amount_over为true时，该才字段有意义。注意：单位是分，即10000表示100元。</desc>
</prop>
<prop>
<name>type</name>
<type>Number</type>
<level>Basic</level>
<desc>活动类型： 1表示商品级别的活动；2表示店铺级别的活动。</desc>
</prop>
<prop>
<name>user_tag</name>
<type>String</type>
<level>Basic</level>
<desc>用户标签。当is_user_tag为true时，该值才有意义。</desc>
</prop>
</props>
</struct>
<struct>
<name>Campaign</name>
<desc>推广计划</desc>
<props>
<prop>
<name>campaign_id</name>
<type>Number</type>
<level>Basic</level>
<desc>推广计划ID</desc>
</prop>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>最后修改时间</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>主人昵称</desc>
</prop>
<prop>
<name>online_status</name>
<type>String</type>
<level>Basic</level>
<desc>用户设置的上下限状态；offline-下线；online-上线；</desc>
</prop>
<prop>
<name>settle_reason</name>
<type>String</type>
<level>Basic</level>
<desc>推广计划结算下线原因，1-余额不足；2-超过日限额，以分号分隔多个下线原因</desc>
</prop>
<prop>
<name>settle_status</name>
<type>String</type>
<level>Basic</level>
<desc>推广计划结算状态，offline-下线；online-上线，</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>推广计划名称，不能多余20个汉字</desc>
</prop>
</props>
</struct>
<struct>
<name>ItemTemplate</name>
<desc>宝贝详情页面信息</desc>
<props>
<prop>
<name>shop_type</name>
<type>Number</type>
<level>Basic</level>
<desc>用于区分宝贝模板属于内店和外店</desc>
</prop>
<prop>
<name>template_id</name>
<type>Number</type>
<level>Basic</level>
<desc>宝贝模板的id</desc>
</prop>
<prop>
<name>template_name</name>
<type>String</type>
<level>Basic</level>
<desc>宝贝详情模板的名称</desc>
</prop>
</props>
</struct>
<struct>
<name>LimitDiscount</name>
<desc>限时打折</desc>
<props>
<prop>
<name>end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>限时打折结束时间。</desc>
</prop>
<prop>
<name>item_num</name>
<type>Number</type>
<level>Basic</level>
<desc>该限时打折宝贝数量。</desc>
</prop>
<prop>
<name>limit_discount_id</name>
<type>Number</type>
<level>Basic</level>
<desc>限时打折ID。</desc>
</prop>
<prop>
<name>limit_discount_name</name>
<type>String</type>
<level>Basic</level>
<desc>限时打折名称。</desc>
</prop>
<prop>
<name>start_time</name>
<type>Date</type>
<level>Basic</level>
<desc>限时打折开始时间。</desc>
</prop>
</props>
</struct>
<struct>
<name>ScoreResult</name>
<desc>服务平台评价流水对象</desc>
<props>
<prop>
<name>attitude_score</name>
<type>String</type>
<level>Basic</level>
<desc>服务态度评分</desc>
</prop>
<prop>
<name>avg_score</name>
<type>String</type>
<level>Basic</level>
<desc>平均分</desc>
</prop>
<prop>
<name>easyuse_score</name>
<type>String</type>
<level>Basic</level>
<desc>易用性评分</desc>
</prop>
<prop>
<name>gmt_create</name>
<type>Date</type>
<level>Basic</level>
<desc>评价时间</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>评价id</desc>
</prop>
<prop>
<name>is_pay</name>
<type>Number</type>
<level>Basic</level>
<desc>是否实际付费 1-实际付费 2-实际未付费</desc>
</prop>
<prop>
<name>is_valid</name>
<type>Number</type>
<level>Basic</level>
<desc>是否为有效评分 1-有效评分 2-无效评分</desc>
</prop>
<prop>
<name>item_code</name>
<type>String</type>
<level>Basic</level>
<desc>服务规格code</desc>
</prop>
<prop>
<name>item_name</name>
<type>String</type>
<level>Basic</level>
<desc>服务规格名称</desc>
</prop>
<prop>
<name>matched_score</name>
<type>String</type>
<level>Basic</level>
<desc>描述相符</desc>
</prop>
<prop>
<name>prof_score</name>
<type>String</type>
<level>Basic</level>
<desc>专业性评分</desc>
</prop>
<prop>
<name>rapid_score</name>
<type>String</type>
<level>Basic</level>
<desc>交片速度</desc>
</prop>
<prop>
<name>service_code</name>
<type>String</type>
<level>Basic</level>
<desc>服务code</desc>
</prop>
<prop>
<name>stability_score</name>
<type>String</type>
<level>Basic</level>
<desc>稳定性评分</desc>
</prop>
<prop>
<name>suggestion</name>
<type>String</type>
<level>Basic</level>
<desc>评论内容</desc>
</prop>
<prop>
<name>user_nick</name>
<type>String</type>
<level>Basic</level>
<desc>评价人用户昵称</desc>
</prop>
</props>
</struct>
<struct>
<name>AddressResult</name>
<desc>地址库返回数据信息</desc>
<props>
<prop>
<name>addr</name>
<type>String</type>
<level>Basic</level>
<desc>详细街道地址，不需要重复填写省/市/区</desc>
</prop>
<prop>
<name>area_id</name>
<type>Number</type>
<level>Basic</level>
<desc>区域ID</desc>
</prop>
<prop>
<name>cancel_def</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否默认退货地址</desc>
</prop>
<prop>
<name>city</name>
<type>String</type>
<level>Basic</level>
<desc>市</desc>
</prop>
<prop>
<name>contact_id</name>
<type>Number</type>
<level>Basic</level>
<desc>地址库ID</desc>
</prop>
<prop>
<name>contact_name</name>
<type>String</type>
<level>Basic</level>
<desc>联系人姓名</desc>
</prop>
<prop>
<name>country</name>
<type>String</type>
<level>Basic</level>
<desc>区、县</desc>
</prop>
<prop>
<name>get_def</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否默认取货地址</desc>
</prop>
<prop>
<name>memo</name>
<type>String</type>
<level>Basic</level>
<desc>备注</desc>
</prop>
<prop>
<name>mobile_phone</name>
<type>String</type>
<level>Basic</level>
<desc>手机号码，手机与电话必需有一个  
手机号码不能超过20位</desc>
</prop>
<prop>
<name>modify_date</name>
<type>Date</type>
<level>Basic</level>
<desc>修改日期时间</desc>
</prop>
<prop>
<name>phone</name>
<type>String</type>
<level>Basic</level>
<desc>电话号码,手机与电话必需有一个</desc>
</prop>
<prop>
<name>province</name>
<type>String</type>
<level>Basic</level>
<desc>省</desc>
</prop>
<prop>
<name>seller_company</name>
<type>String</type>
<level>Basic</level>
<desc>公司名称,</desc>
</prop>
<prop>
<name>send_def</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否默认发货地址</desc>
</prop>
<prop>
<name>zip_code</name>
<type>String</type>
<level>Basic</level>
<desc>地区邮政编码</desc>
</prop>
</props>
</struct>
<struct>
<name>LimitDiscountDetail</name>
<desc>限时打折详情</desc>
<props>
<prop>
<name>end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>限时打折结束时间。</desc>
</prop>
<prop>
<name>item_discount</name>
<type>Price</type>
<level>Basic</level>
<desc>该商品限时折扣</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品的id(数字类型)</desc>
</prop>
<prop>
<name>limit_discount_name</name>
<type>String</type>
<level>Basic</level>
<desc>限时打折名称</desc>
</prop>
<prop>
<name>limit_num</name>
<type>Number</type>
<level>Basic</level>
<desc>每人限购数量，1、2、5、10000(不限)。</desc>
</prop>
<prop>
<name>start_time</name>
<type>Date</type>
<level>Basic</level>
<desc>限时打折开始时间。</desc>
</prop>
</props>
</struct>
<struct>
<name>Role</name>
<desc>子账号角色</desc>
<props>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>description</name>
<type>String</type>
<level>Basic</level>
<desc>角色描述</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</prop>
<prop>
<name>permissions</name>
<type>Permission</type>
<level>Object Array</level>
<desc>所拥有权限</desc>
</prop>
<prop>
<name>role_id</name>
<type>Number</type>
<level>Basic</level>
<desc>角色id</desc>
</prop>
<prop>
<name>role_name</name>
<type>String</type>
<level>Basic</level>
<desc>角色名</desc>
</prop>
<prop>
<name>seller_id</name>
<type>Number</type>
<level>Basic</level>
<desc>卖家Id</desc>
</prop>
</props>
</struct>
<struct>
<name>TransitStepInfo</name>
<desc>物流跟踪信息的一条</desc>
<props>
<prop>
<name>action</name>
<type>String</type>
<level>Basic</level>
<desc>节点说明 ，指明当前节点揽收、派送，签收。</desc>
</prop>
<prop>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<desc>描述</desc>
</prop>
<prop>
<name>node_description</name>
<type>String</type>
<level>Basic</level>
<desc>地址地一</desc>
</prop>
<prop>
<name>status_desc</name>
<type>String</type>
<level>Basic</level>
<desc>状态描述</desc>
</prop>
<prop>
<name>status_time</name>
<type>String</type>
<level>Basic</level>
<desc>状态发生的时间</desc>
</prop>
<prop>
<name>time</name>
<type>String</type>
<level>Basic</level>
<desc>时间。。</desc>
</prop>
</props>
</struct>
<struct>
<name>SubUserPermission</name>
<desc>子账号所拥有的权限对象(直接赋予的权限和通过角色赋予的权限的总和对象)</desc>
<props>
<prop>
<name>permissions</name>
<type>Permission</type>
<level>Object Array</level>
<desc>子账号被直接赋予的权限点列表</desc>
</prop>
<prop>
<name>roles</name>
<type>Role</type>
<level>Object Array</level>
<desc>子账号被赋予的角色信息(Role)列表。列表中的角色对象只有role_id，role_name，permissions信息</desc>
</prop>
</props>
</struct>
<struct>
<name>PromotionInShop</name>
<desc>店铺级优惠信息</desc>
<props>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>优惠活动名称</desc>
</prop>
<prop>
<name>promotion_detail_desc</name>
<type>String</type>
<level>Basic</level>
<desc>优惠详情描述。</desc>
</prop>
<prop>
<name>promotion_id</name>
<type>String</type>
<level>Basic</level>
<desc>idValue值</desc>
</prop>
</props>
</struct>
<struct>
<name>PromotionDisplayTop</name>
<desc>优惠信息对象</desc>
<props>
<prop>
<name>promotion_in_item</name>
<type>PromotionInItem</type>
<level>Object Array</level>
<desc>单品级优惠信息</desc>
</prop>
<prop>
<name>promotion_in_shop</name>
<type>PromotionInShop</type>
<level>Object Array</level>
<desc>店铺级优惠信息</desc>
</prop>
</props>
</struct>
<struct>
<name>OrderAmount</name>
<desc>子订单的帐务数据结构</desc>
<props>
<prop>
<name>adjust_fee</name>
<type>String</type>
<level>Basic</level>
<desc>卖家手工调整的子订单的优惠金额.格式为:1.01;单位:元;精确到小数点后两位.</desc>
</prop>
<prop>
<name>discount_fee</name>
<type>String</type>
<level>Basic</level>
<desc>子订单的系统优惠金额。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>divide_order_fee</name>
<type>String</type>
<level>Basic</level>
<desc>分摊之后的实付金额</desc>
</prop>
<prop>
<name>num</name>
<type>Number</type>
<level>Basic</level>
<desc>子交易订单中购买商品的数量</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<desc>子订单对应的商品数字id</desc>
</prop>
<prop>
<name>oid</name>
<type>Number</type>
<level>Basic</level>
<desc>子交易订单编号</desc>
</prop>
<prop>
<name>part_mjz_discount</name>
<type>String</type>
<level>Basic</level>
<desc>优惠分摊</desc>
</prop>
<prop>
<name>payment</name>
<type>String</type>
<level>Basic</level>
<desc>子订单实付金额。精确到2位小数，单位:元。如:200.07，表示:200元7分。计算公式如下：payment = price * num + adjust_fee - discount_fee + post_fee(邮费，单笔子订单时子订单实付金额包含邮费，多笔子订单时不包含邮费)；对于退款成功的子订单，由于主订单的优惠分摊金额，会造成该字段可能不为0.00元。建议使用退款前的实付金额减去退款单中的实际退款金额计算。</desc>
</prop>
<prop>
<name>price</name>
<type>String</type>
<level>Basic</level>
<desc>商品价格。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>promotion_name</name>
<type>String</type>
<level>Basic</level>
<desc>子订单的系统优惠的名称，对应于discount_fee的名称</desc>
</prop>
<prop>
<name>sku_id</name>
<type>Number</type>
<level>Basic</level>
<desc>子订单对应的商品的sku_id</desc>
</prop>
<prop>
<name>sku_properties_name</name>
<type>String</type>
<level>Basic</level>
<desc>SKU的值。如：机身颜色:黑色;手机套餐:官方标配</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>商品标题</desc>
</prop>
</props>
</struct>
<struct>
<name>PromotionInItem</name>
<desc>单品级优惠信息</desc>
<props>
<prop>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<desc>优惠描述</desc>
</prop>
<prop>
<name>end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>优惠结束时间</desc>
</prop>
<prop>
<name>item_promo_price</name>
<type>Price</type>
<level>Basic</level>
<desc>优惠折后价格</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>优惠展示名称</desc>
</prop>
<prop>
<name>other_need</name>
<type>String</type>
<level>Basic</level>
<desc>需要支付附加物，显示为+xxx。如：+20淘金币</desc>
</prop>
<prop>
<name>other_send</name>
<type>String</type>
<level>Basic</level>
<desc>赠送东西。如：送10商城积分</desc>
</prop>
<prop>
<name>promotion_id</name>
<type>String</type>
<level>Basic</level>
<desc>idValue的值</desc>
</prop>
<prop>
<name>sku_id_list</name>
<type>String</type>
<level>Basic Array</level>
<desc>sku价格对应的id（保证二者顺序相同）</desc>
</prop>
<prop>
<name>sku_price_list</name>
<type>Price</type>
<level>Basic Array</level>
<desc>sku价格列表</desc>
</prop>
<prop>
<name>start_time</name>
<type>Date</type>
<level>Basic</level>
<desc>优惠开始时间</desc>
</prop>
</props>
</struct>
<struct>
<name>FavoriteItem</name>
<desc>推荐的关联商品</desc>
<props>
<prop>
<name>item_name</name>
<type>String</type>
<level>Basic</level>
<desc>商品名称</desc>
</prop>
<prop>
<name>item_pictrue</name>
<type>String</type>
<level>Basic</level>
<desc>商品图片地址</desc>
</prop>
<prop>
<name>item_price</name>
<type>Price</type>
<level>Basic</level>
<desc>商品价格</desc>
</prop>
<prop>
<name>item_url</name>
<type>String</type>
<level>Basic</level>
<desc>商品的详情页面地址</desc>
</prop>
<prop>
<name>promotion_price</name>
<type>Price</type>
<level>Basic</level>
<desc>促销价格</desc>
</prop>
<prop>
<name>sell_count</name>
<type>Number</type>
<level>Basic</level>
<desc>商品销售次数</desc>
</prop>
<prop>
<name>track_iid</name>
<type>String</type>
<level>Basic</level>
<desc>商品id（具有跟踪效果）代替原来的item_id  &lt;a href="http://dev.open.taobao.com/bbs/read.php?tid=24323"&gt;详细说明&lt;/a&gt;</desc>
</prop>
</props>
</struct>
<struct>
<name>FavoriteShop</name>
<desc>推荐关联店铺信息</desc>
<props>
<prop>
<name>rate</name>
<type>Number</type>
<level>Basic</level>
<desc>店铺卖家信用</desc>
</prop>
<prop>
<name>seller_id</name>
<type>Number</type>
<level>Basic</level>
<desc>卖家ID</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>shop_id</name>
<type>Number</type>
<level>Basic</level>
<desc>店铺ID</desc>
</prop>
<prop>
<name>shop_name</name>
<type>String</type>
<level>Basic</level>
<desc>店铺ID</desc>
</prop>
<prop>
<name>shop_pic</name>
<type>String</type>
<level>Basic</level>
<desc>店铺LOGO图片</desc>
</prop>
<prop>
<name>shop_url</name>
<type>String</type>
<level>Basic</level>
<desc>店铺首页链接</desc>
</prop>
</props>
</struct>
<struct>
<name>TradeAmount</name>
<desc>交易订单的帐务信息详情</desc>
<props>
<prop>
<name>alipay_no</name>
<type>String</type>
<level>Basic</level>
<desc>支付宝交易号，如：2009112081173831</desc>
</prop>
<prop>
<name>buyer_cod_fee</name>
<type>String</type>
<level>Basic</level>
<desc>买家货到付款服务费。精确到2位小数;单位:元。如:12.07，表示:12元7分</desc>
</prop>
<prop>
<name>buyer_obtain_point_fee</name>
<type>Number</type>
<level>Basic</level>
<desc>买家获得积分,返点的积分。格式:100;单位:个</desc>
</prop>
<prop>
<name>cod_fee</name>
<type>String</type>
<level>Basic</level>
<desc>货到付款服务费。精确到2位小数;单位:元。如:12.07，表示:12元7分</desc>
</prop>
<prop>
<name>commission_fee</name>
<type>String</type>
<level>Basic</level>
<desc>交易佣金。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>交易创建时间</desc>
</prop>
<prop>
<name>end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>交易成功时间(更新交易状态为成功的同时更新)/确认收货时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>express_agency_fee</name>
<type>String</type>
<level>Basic</level>
<desc>快递代收款。精确到2位小数;单位:元。如:212.07，表示:212元7分</desc>
</prop>
<prop>
<name>order_amounts</name>
<type>OrderAmount</type>
<level>Object Array</level>
<desc>子订单的帐务金额详情列表</desc>
</prop>
<prop>
<name>pay_time</name>
<type>Date</type>
<level>Basic</level>
<desc>付款时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>payment</name>
<type>String</type>
<level>Basic</level>
<desc>主订单实付金额。精确到2位小数;单位:元。如:200.07，表示:200元7分，计算公式如下： 
如果主订单只有一笔子订单 payment = 子订单的实付金额 + 货到付款服务费(如果是货到付款订单) - 主订单的系统级优惠；如果主订单有多笔子订单 payment = 各子订单的实付金额之和 + 货到付款服务费(如果是货到付款订单) + 邮费 - 主订单的系统级优惠</desc>
</prop>
<prop>
<name>post_fee</name>
<type>String</type>
<level>Basic</level>
<desc>邮费。精确到2位小数;单位:元。如:200.07，表示:200元7分。目前只提供整笔交易的邮费，暂不提供各子订单的邮费</desc>
</prop>
<prop>
<name>promotion_details</name>
<type>PromotionDetail</type>
<level>Object Array</level>
<desc>主交易订单的系统级优惠详情</desc>
</prop>
<prop>
<name>seller_cod_fee</name>
<type>String</type>
<level>Basic</level>
<desc>卖家货到付款服务费。精确到2位小数;单位:元。如:12.07，表示:12元7分</desc>
</prop>
<prop>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<desc>交易主订单编号</desc>
</prop>
<prop>
<name>total_fee</name>
<type>String</type>
<level>Basic</level>
<desc>主订单的商品金额（各子订单中商品price * num的和，不包括任何优惠信息）。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
</props>
</struct>
<struct>
<name>CampaignBudget</name>
<desc>推广计划的日限额</desc>
<props>
<prop>
<name>budget</name>
<type>Number</type>
<level>Basic</level>
<desc>日限额，单位是元，不得小于30</desc>
</prop>
<prop>
<name>campaign_id</name>
<type>Number</type>
<level>Basic</level>
<desc>推广计划ID</desc>
</prop>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>is_smooth</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否平滑消耗，true-是；false-否；在设置了推广计划日限额后，此属性才生效</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>最后修改时间</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>主人昵称</desc>
</prop>
</props>
</struct>
<struct>
<name>NonreplyStatById</name>
<desc>客服未回复统计</desc>
<props>
<prop>
<name>non_reply_customId</name>
<type>String</type>
<level>Basic</level>
<desc>客服人员未回复的客户ID</desc>
</prop>
<prop>
<name>non_reply_num</name>
<type>Number</type>
<level>Basic</level>
<desc>客服未回复数</desc>
</prop>
<prop>
<name>service_staff_id</name>
<type>String</type>
<level>Basic</level>
<desc>客服人员ID</desc>
</prop>
</props>
</struct>
<struct>
<name>PromotionTag</name>
<desc>优惠标签对象</desc>
<props>
<prop>
<name>end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>标签结束时间</desc>
</prop>
<prop>
<name>start_time</name>
<type>Date</type>
<level>Basic</level>
<desc>标签开始时间</desc>
</prop>
<prop>
<name>tag_desc</name>
<type>String</type>
<level>Basic</level>
<desc>标签描述</desc>
</prop>
<prop>
<name>tag_id</name>
<type>Number</type>
<level>Basic</level>
<desc>标签ID</desc>
</prop>
<prop>
<name>tag_name</name>
<type>String</type>
<level>Basic</level>
<desc>标签名称</desc>
</prop>
</props>
</struct>
<struct>
<name>CampaignArea</name>
<desc>推广计划的投放地域</desc>
<props>
<prop>
<name>area</name>
<type>String</type>
<level>Basic</level>
<desc>值为：“all”；或者用“,”分割的数字，数字必须是直通车全国省市列表的AreaID，如果已经包含省、自治区id，请不要再包括省内市的id；</desc>
</prop>
<prop>
<name>campaign_id</name>
<type>Number</type>
<level>Basic</level>
<desc>推广计划ID</desc>
</prop>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>最后修改时间</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>主人昵称</desc>
</prop>
</props>
</struct>
<struct>
<name>StaffEvalStatById</name>
<desc>客服评价统计</desc>
<props>
<prop>
<name>evaluations</name>
<type>Evaluation</type>
<level>Object Array</level>
<desc>客服评价</desc>
</prop>
<prop>
<name>service_staff_id</name>
<type>String</type>
<level>Basic</level>
<desc>客服人员ID</desc>
</prop>
</props>
</struct>
<struct>
<name>PromotionTagQuery</name>
<desc>优惠标签查询结果</desc>
<props>
<prop>
<name>tag_list</name>
<type>PromotionTag</type>
<level>Object Array</level>
<desc>标签结果列表</desc>
</prop>
<prop>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>总记录数</desc>
</prop>
</props>
</struct>
<struct>
<name>RecommendWord</name>
<desc>推荐词</desc>
<props>
<prop>
<name>average_price</name>
<type>String</type>
<level>Basic</level>
<desc>平均价格</desc>
</prop>
<prop>
<name>pertinence</name>
<type>String</type>
<level>Basic</level>
<desc>相关度</desc>
</prop>
<prop>
<name>pv</name>
<type>String</type>
<level>Basic</level>
<desc>搜索量</desc>
</prop>
<prop>
<name>word</name>
<type>String</type>
<level>Basic</level>
<desc>推荐的关键词</desc>
</prop>
</props>
</struct>
<struct>
<name>QueryRow</name>
<desc>MBP查询结果行记录</desc>
<props>
<prop>
<name>values</name>
<type>String</type>
<level>Basic Array</level>
<desc>结果集中一行记录的各列结果</desc>
</prop>
</props>
</struct>
<struct>
<name>CampaignSchedule</name>
<desc>推广计划的分时折扣设置</desc>
<props>
<prop>
<name>campaign_id</name>
<type>Number</type>
<level>Basic</level>
<desc>推广计划ID</desc>
</prop>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>最后修改时间</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>主人昵称</desc>
</prop>
<prop>
<name>schedule</name>
<type>String</type>
<level>Basic</level>
<desc>值为：“all”；或者用“;”分割的每天的设置字符串，该字符串为用“,”分割的时段折扣字符串，格式为：起始时间-结束时间:折扣，其中时间是24小时格式记录18:30，，折扣是1-150整数，表示折扣百分比；</desc>
</prop>
</props>
</struct>
<struct>
<name>CreativeRecord</name>
<desc>创意修改记录，只记录最后一次修改</desc>
<props>
<prop>
<name>audit_desc</name>
<type>String</type>
<level>Basic</level>
<desc>审核拒绝原因描述</desc>
</prop>
<prop>
<name>audit_status</name>
<type>String</type>
<level>Basic</level>
<desc>审核状态： audit_wait-待审核；audit_pass-审核通过(上线)；audit_reject-审核拒绝；默认为audit_pass。</desc>
</prop>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>creative_id</name>
<type>Number</type>
<level>Basic</level>
<desc>关键词id</desc>
</prop>
<prop>
<name>img_url</name>
<type>String</type>
<level>Basic</level>
<desc>创意图片地址，必须是推广组对应商品的图片之一</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>系统记录最后修改时间</desc>
</prop>
<prop>
<name>modify_time</name>
<type>Date</type>
<level>Basic</level>
<desc>创意被修改的时间</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>主人昵称</desc>
</prop>
<prop>
<name>old_img_url</name>
<type>String</type>
<level>Basic</level>
<desc>修改前创意图片地址</desc>
</prop>
<prop>
<name>old_title</name>
<type>String</type>
<level>Basic</level>
<desc>修改前创意标题</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>创意标题，最多20个汉字</desc>
</prop>
</props>
</struct>
<struct>
<name>Keyword</name>
<desc>关键词</desc>
<props>
<prop>
<name>adgroup_id</name>
<type>Number</type>
<level>Basic</level>
<desc>推广组id</desc>
</prop>
<prop>
<name>audit_desc</name>
<type>String</type>
<level>Basic</level>
<desc>审核拒绝原因描述</desc>
</prop>
<prop>
<name>audit_status</name>
<type>String</type>
<level>Basic</level>
<desc>审核状态：  
audit_wait-待审核； 
audit_pass-审核通过(上线)； 
audit_reject-审核拒绝； 
audit_offline-审核直接下线； 
默认为 audit_pass。</desc>
</prop>
<prop>
<name>campaign_id</name>
<type>Number</type>
<level>Basic</level>
<desc>推广计划id</desc>
</prop>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>is_default_price</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否使用推广组默认出价，true-是；false-否；</desc>
</prop>
<prop>
<name>is_garbage</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否是垃圾词，false-不是；true-是；垃圾词是近期无点击的词</desc>
</prop>
<prop>
<name>keyword_id</name>
<type>Number</type>
<level>Basic</level>
<desc>关键词id</desc>
</prop>
<prop>
<name>match_scope</name>
<type>String</type>
<level>Basic</level>
<desc>匹配模式</desc>
</prop>
<prop>
<name>max_price</name>
<type>Number</type>
<level>Basic</level>
<desc>关键词出价，单位为分，不能小于5</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>最后修改时间</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>主人昵称</desc>
</prop>
<prop>
<name>qscore</name>
<type>String</type>
<level>Basic</level>
<desc>词质量得分</desc>
</prop>
<prop>
<name>word</name>
<type>String</type>
<level>Basic</level>
<desc>关键词</desc>
</prop>
</props>
</struct>
<struct>
<name>ADGroupCatmatch</name>
<desc>推广组类目出价</desc>
<props>
<prop>
<name>adgroup_id</name>
<type>Number</type>
<level>Basic</level>
<desc>推广组id</desc>
</prop>
<prop>
<name>campaign_id</name>
<type>Number</type>
<level>Basic</level>
<desc>推广计划Id</desc>
</prop>
<prop>
<name>catmatch_id</name>
<type>Number</type>
<level>Basic</level>
<desc>类目出价Id</desc>
</prop>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>is_default_price</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否使用推广组默认出价，false-不使用默认出价  true-使用默认出价；默认true</desc>
</prop>
<prop>
<name>max_price</name>
<type>Number</type>
<level>Basic</level>
<desc>类目出价，单位为分，不能小于5</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>最后修改时间</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>推广组主人昵称</desc>
</prop>
<prop>
<name>online_status</name>
<type>String</type>
<level>Basic</level>
<desc>是否启用类目出价；offline-不启用；online-启用；默认启用</desc>
</prop>
<prop>
<name>qscore</name>
<type>String</type>
<level>Basic</level>
<desc>类目出价质量得分</desc>
</prop>
</props>
</struct>
<struct>
<name>Creative</name>
<desc>创意</desc>
<props>
<prop>
<name>adgroup_id</name>
<type>Number</type>
<level>Basic</level>
<desc>推广组id</desc>
</prop>
<prop>
<name>audit_desc</name>
<type>String</type>
<level>Basic</level>
<desc>审核拒绝原因描述</desc>
</prop>
<prop>
<name>audit_status</name>
<type>String</type>
<level>Basic</level>
<desc>审核状态： audit_wait-待审核；audit_pass-审核通过(上线)；audit_reject-审核拒绝；默认为audit_pass。</desc>
</prop>
<prop>
<name>campaign_id</name>
<type>Number</type>
<level>Basic</level>
<desc>推广计划Id</desc>
</prop>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>creative_id</name>
<type>Number</type>
<level>Basic</level>
<desc>创意id</desc>
</prop>
<prop>
<name>img_url</name>
<type>String</type>
<level>Basic</level>
<desc>创意图片地址，必须是推广组对应商品的图片之一</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>最后修改时间</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>主人昵称</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>创意标题，最多20个汉字</desc>
</prop>
</props>
</struct>
<struct>
<name>ChannelOption</name>
<desc>Campaign投放频道</desc>
<props>
<prop>
<name>channel_id</name>
<type>Number</type>
<level>Basic</level>
<desc>频道id</desc>
</prop>
<prop>
<name>is_nonsearch</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否有非搜索流量，true：是；false：否；</desc>
</prop>
<prop>
<name>is_search</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否有搜索流量，true：是；false：否；</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>频道名称</desc>
</prop>
<prop>
<name>traffic_name</name>
<type>String</type>
<level>Basic</level>
<desc>流量名称</desc>
</prop>
<prop>
<name>traffic_type</name>
<type>String</type>
<level>Basic</level>
<desc>流量类型，taobao：淘宝站内；other：淘宝站外</desc>
</prop>
</props>
</struct>
<struct>
<name>AreaOption</name>
<desc>直通车可推广的地域</desc>
<props>
<prop>
<name>area_id</name>
<type>Number</type>
<level>Basic</level>
<desc>地域id</desc>
</prop>
<prop>
<name>level</name>
<type>Number</type>
<level>Basic</level>
<desc>地域级别，目前自治区、省、直辖市是1，其他城市、地区是2</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<desc>地域名称</desc>
</prop>
<prop>
<name>parent_id</name>
<type>Number</type>
<level>Basic</level>
<desc>父地域id，若该字段为0表示该行政区为顶层，例如像北京，国外等。</desc>
</prop>
</props>
</struct>
<struct>
<name>FoodSecurity</name>
<desc>食品安全信息，包括： 
生产许可证号、产品标准号、厂名、厂址等</desc>
<props>
<prop>
<name>contact</name>
<type>String</type>
<level>Basic</level>
<desc>厂家联系方式</desc>
</prop>
<prop>
<name>design_code</name>
<type>String</type>
<level>Basic</level>
<desc>产品标准号</desc>
</prop>
<prop>
<name>factory</name>
<type>String</type>
<level>Basic</level>
<desc>厂名</desc>
</prop>
<prop>
<name>factory_site</name>
<type>String</type>
<level>Basic</level>
<desc>厂址</desc>
</prop>
<prop>
<name>food_additive</name>
<type>String</type>
<level>Basic</level>
<desc>食品添加剂</desc>
</prop>
<prop>
<name>health_product_no</name>
<type>String</type>
<level>Basic</level>
<desc>健字号，保健品/膳食营养补充剂 这个类目下特有的信息，此类目下无需填写生产许可证编号（QS），如果填写了生产许可证编号（QS）将被忽略不保存；保存宝贝时，标题前会自动加上健字号产品名称一起作为宝贝标题；</desc>
</prop>
<prop>
<name>mix</name>
<type>String</type>
<level>Basic</level>
<desc>配料表</desc>
</prop>
<prop>
<name>period</name>
<type>String</type>
<level>Basic</level>
<desc>保质期</desc>
</prop>
<prop>
<name>plan_storage</name>
<type>String</type>
<level>Basic</level>
<desc>储藏方法</desc>
</prop>
<prop>
<name>prd_license_no</name>
<type>String</type>
<level>Basic</level>
<desc>生产许可证号</desc>
</prop>
<prop>
<name>product_date_end</name>
<type>String</type>
<level>Basic</level>
<desc>生产结束日期</desc>
</prop>
<prop>
<name>product_date_start</name>
<type>String</type>
<level>Basic</level>
<desc>生产开始日期</desc>
</prop>
<prop>
<name>stock_date_end</name>
<type>String</type>
<level>Basic</level>
<desc>进货结束日期，要在生产日期之后</desc>
</prop>
<prop>
<name>stock_date_start</name>
<type>String</type>
<level>Basic</level>
<desc>进货开始日期，要在生产日期之后</desc>
</prop>
<prop>
<name>supplier</name>
<type>String</type>
<level>Basic</level>
<desc>供货商</desc>
</prop>
</props>
</struct>
<struct>
<name>RankedItem</name>
<desc>关键词排名推广商品信息</desc>
<props>
<prop>
<name>link_url</name>
<type>String</type>
<level>Basic</level>
<desc>商品链接</desc>
</prop>
<prop>
<name>max_price</name>
<type>Price</type>
<level>Basic</level>
<desc>最高出价</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>客户昵称</desc>
</prop>
<prop>
<name>order</name>
<type>Number</type>
<level>Basic</level>
<desc>排名</desc>
</prop>
<prop>
<name>rank_score</name>
<type>Number</type>
<level>Basic</level>
<desc>原始质量评分</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>创意标题</desc>
</prop>
</props>
</struct>
<struct>
<name>PaimaiInfo</name>
<desc>拍卖商品相关信息</desc>
<props>
<prop>
<name>deposit</name>
<type>Number</type>
<level>Basic</level>
<desc>用户自定义的固定保证金。如果用户未传则说明用户选择使用淘宝默认的保证金模式10%，此时deposit等于0.</desc>
</prop>
<prop>
<name>interval</name>
<type>Number</type>
<level>Basic</level>
<desc>降价拍中的降价间隔</desc>
</prop>
<prop>
<name>mode</name>
<type>Number</type>
<level>Basic</level>
<desc>拍卖类型，目前包括增加拍，荷兰拍和降价拍。</desc>
</prop>
<prop>
<name>reserve</name>
<type>Price</type>
<level>Basic</level>
<desc>降价拍的保留价</desc>
</prop>
<prop>
<name>valid_hour</name>
<type>Number</type>
<level>Basic</level>
<desc>对于拍卖来说可以设定有效期，这里是有效期的小时数。</desc>
</prop>
<prop>
<name>valid_minute</name>
<type>Number</type>
<level>Basic</level>
<desc>对于拍卖来说可以设定有效期，这里是有效期的分钟数。</desc>
</prop>
</props>
</struct>
<struct>
<name>ADGroup</name>
<desc>推广组</desc>
<props>
<prop>
<name>adgroup_id</name>
<type>Number</type>
<level>Basic</level>
<desc>推广组id</desc>
</prop>
<prop>
<name>campaign_id</name>
<type>Number</type>
<level>Basic</level>
<desc>推广计划Id</desc>
</prop>
<prop>
<name>category_ids</name>
<type>String</type>
<level>Basic</level>
<desc>商品类目id，从根类目到子类目，用空格分割</desc>
</prop>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>default_price</name>
<type>Number</type>
<level>Basic</level>
<desc>默认出价，单位为分，不能小于5</desc>
</prop>
<prop>
<name>is_nonsearch_default_price</name>
<type>Boolean</type>
<level>Basic</level>
<desc>非搜索是否使用默认出价，false-不用；true-使用；默认为true;</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>最后修改时间</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>推广组主人昵称</desc>
</prop>
<prop>
<name>nonsearch_max_price</name>
<type>Number</type>
<level>Basic</level>
<desc>非搜索出价，单位为分，不能小于5</desc>
</prop>
<prop>
<name>nonsearch_status</name>
<type>Number</type>
<level>Basic</level>
<desc>通投状态,1：开启；0：暂停；默认为1</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<desc>商品数字id</desc>
</prop>
<prop>
<name>offline_type</name>
<type>String</type>
<level>Basic</level>
<desc>online-上线；audit_offline-审核下线；crm_offline-CRM下线；默认为online</desc>
</prop>
<prop>
<name>online_status</name>
<type>String</type>
<level>Basic</level>
<desc>用户设置的上下线状态，offline-下线(暂停竞价)；online-上线；默认为online</desc>
</prop>
<prop>
<name>reason</name>
<type>String</type>
<level>Basic</level>
<desc>审核下线原因</desc>
</prop>
</props>
</struct>
<struct>
<name>KeywordForecast</name>
<desc>词预估信息</desc>
<props>
<prop>
<name>keyword_id</name>
<type>Number</type>
<level>Basic</level>
<desc>词ID</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>主人昵称</desc>
</prop>
<prop>
<name>price_click</name>
<type>String</type>
<level>Basic</level>
<desc>点击预估；根据出价预估点击量 
40:784,50:1007表示出价40分点击量为783；出价50分点击量为1007</desc>
</prop>
<prop>
<name>price_cust</name>
<type>String</type>
<level>Basic</level>
<desc>消耗预估；根据出价预估消耗。40:20,50:21表示出价40元分，消耗20分；出价50分消耗21分</desc>
</prop>
<prop>
<name>price_rank</name>
<type>String</type>
<level>Basic</level>
<desc>排名预估;根据出价预估排名。 
40:101,41:101表示出价40分排名101位；出价41分排名101位</desc>
</prop>
<prop>
<name>word</name>
<type>String</type>
<level>Basic</level>
<desc>词名称</desc>
</prop>
</props>
</struct>
<struct>
<name>DeliveryTime</name>
<desc>发货时间数据结构</desc>
<props>
<prop>
<name>delivery_time</name>
<type>String</type>
<level>Basic</level>
<desc>商品级别设置的发货时间。设置了商品级别的发货时间，相对发货时间，则填写相对发货时间的天数（大于3）；绝对发货时间，则填写yyyy-mm-dd格式，如2013-11-11</desc>
</prop>
<prop>
<name>delivery_time_type</name>
<type>String</type>
<level>Basic</level>
<desc>发货时间类型：绝对发货时间或者相对发货时间</desc>
</prop>
<prop>
<name>need_delivery_time</name>
<type>String</type>
<level>Basic</level>
<desc>设置是否使用发货时间，商品级别，sku级别</desc>
</prop>
</props>
</struct>
<struct>
<name>ADGroupCatMatchForecast</name>
<desc>类目出价预估信息</desc>
<props>
<prop>
<name>adgroup_id</name>
<type>Number</type>
<level>Basic</level>
<desc>推广组ID</desc>
</prop>
<prop>
<name>catmatch_id</name>
<type>Number</type>
<level>Basic</level>
<desc>类目出价ID</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>昵称</desc>
</prop>
<prop>
<name>price_click</name>
<type>String</type>
<level>Basic</level>
<desc>点击预估；根据出价预估点击量 40:784,50:1007表示出价40分点击量为783；出价50分点击量为1007</desc>
</prop>
<prop>
<name>price_cust</name>
<type>String</type>
<level>Basic</level>
<desc>消耗预估；根据出价预估消耗。40:20,50:21表示出价40元分，消耗20分；出价50分消耗21分</desc>
</prop>
<prop>
<name>price_rank</name>
<type>String</type>
<level>Basic</level>
<desc>排名预估;根据出价预估排名。 40:101,41:101表示出价40分排名101位；出价41分排名101位</desc>
</prop>
</props>
</struct>
<struct>
<name>KeywordQscore</name>
<desc>关键词质量得分</desc>
<props>
<prop>
<name>adgroup_id</name>
<type>Number</type>
<level>Basic</level>
<desc>推广组id</desc>
</prop>
<prop>
<name>campaign_id</name>
<type>Number</type>
<level>Basic</level>
<desc>推广计划id</desc>
</prop>
<prop>
<name>creative_score</name>
<type>String</type>
<level>Basic</level>
<desc>创意得分</desc>
</prop>
<prop>
<name>cust_score</name>
<type>String</type>
<level>Basic</level>
<desc>基础分</desc>
</prop>
<prop>
<name>cvr_score</name>
<type>String</type>
<level>Basic</level>
<desc>买家体验分</desc>
</prop>
<prop>
<name>keyword_id</name>
<type>Number</type>
<level>Basic</level>
<desc>关键词id</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>主人昵称</desc>
</prop>
<prop>
<name>qscore</name>
<type>String</type>
<level>Basic</level>
<desc>质量总分</desc>
</prop>
<prop>
<name>rele_score</name>
<type>String</type>
<level>Basic</level>
<desc>相关性</desc>
</prop>
<prop>
<name>word</name>
<type>String</type>
<level>Basic</level>
<desc>关键词</desc>
</prop>
</props>
</struct>
<struct>
<name>ADGroupCatMatchPage</name>
<desc>一页ADGroupCatMatch列表</desc>
<props>
<prop>
<name>adgroup_catmatch_list</name>
<type>ADGroupCatmatch</type>
<level>Object Array</level>
<desc>类目出价列表</desc>
</prop>
<prop>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<desc>返回第几页的数据从1开始</desc>
</prop>
<prop>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<desc>每页数据大小</desc>
</prop>
<prop>
<name>total_item</name>
<type>Number</type>
<level>Basic</level>
<desc>所查询的数据总数，只有当返回第一页数据时有值，当要求返回的数据非第一页时，此返回值无效</desc>
</prop>
</props>
</struct>
<struct>
<name>Qscore</name>
<desc>质量得分类</desc>
<props>
<prop>
<name>catmatch_qscore</name>
<type>String</type>
<level>Basic</level>
<desc>类目出价质量得分</desc>
</prop>
<prop>
<name>keyword_qscore_list</name>
<type>KeywordQscore</type>
<level>Object Array</level>
<desc>词质量得分列表</desc>
</prop>
</props>
</struct>
<struct>
<name>ExtraAttributes</name>
<desc>直通车商品对象属性（Map）</desc>
<props>
<prop>
<name>publish_time</name>
<type>Date</type>
<level>Basic</level>
<desc>商品在淘宝的发布时间</desc>
</prop>
<prop>
<name>quantity</name>
<type>Price</type>
<level>Basic</level>
<desc>库存数量</desc>
</prop>
<prop>
<name>sales_count</name>
<type>Price</type>
<level>Basic</level>
<desc>商品的累积销量</desc>
</prop>
</props>
</struct>
<struct>
<name>Activity</name>
<desc>活动数据结构</desc>
<props>
<prop>
<name>activity_id</name>
<type>Number</type>
<level>Basic</level>
<desc>活动id</desc>
</prop>
<prop>
<name>activity_url</name>
<type>String</type>
<level>Basic</level>
<desc>领用优惠券的链接</desc>
</prop>
<prop>
<name>applied_count</name>
<type>Number</type>
<level>Basic</level>
<desc>已经领取的优惠券的数量</desc>
</prop>
<prop>
<name>coupon_id</name>
<type>Number</type>
<level>Basic</level>
<desc>活动对应的优惠券ID</desc>
</prop>
<prop>
<name>create_user</name>
<type>String</type>
<level>Basic</level>
<desc>self代表自己创建，other他人创建</desc>
</prop>
<prop>
<name>person_limit_count</name>
<type>Number</type>
<level>Basic</level>
<desc>每个买家限领取优惠券的数量，1～5张</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>enabled代表有效，invalid代表失效。other代表空值</desc>
</prop>
<prop>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>卖家设置优惠券领取的总领用量</desc>
</prop>
</props>
</struct>
<struct>
<name>DataPushTask</name>
<desc>数据推送任务</desc>
<props>
<prop>
<name>app_key</name>
<type>String</type>
<level>Basic</level>
<desc>任务所属的appkey</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<desc>任务编号</desc>
</prop>
<prop>
<name>next_execute_time</name>
<type>Date</type>
<level>Basic</level>
<desc>下次执行时间</desc>
</prop>
<prop>
<name>now_sync_time</name>
<type>Date</type>
<level>Basic</level>
<desc>上一次同步到的时间点</desc>
</prop>
<prop>
<name>params</name>
<type>String</type>
<level>Basic</level>
<desc>任务的业务参数，用json格式表示</desc>
</prop>
<prop>
<name>type</name>
<type>Number</type>
<level>Basic</level>
<desc>任务类型代码</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>任务所属的用户编号</desc>
</prop>
<prop>
<name>user_nick</name>
<type>String</type>
<level>Basic</level>
<desc>用户的nick</desc>
</prop>
<prop>
<name>version</name>
<type>Number</type>
<level>Basic</level>
<desc>任务的版本号，在更新任务时，需要用到此数据</desc>
</prop>
</props>
</struct>
<struct>
<name>Coupon</name>
<desc>优惠券数据结构</desc>
<props>
<prop>
<name>condition</name>
<type>Number</type>
<level>Basic</level>
<desc>订单满多少分才能用这个优惠券，501就是满501分能使用。注意：返回的是“分”，不是“元”</desc>
</prop>
<prop>
<name>coupon_id</name>
<type>Number</type>
<level>Basic</level>
<desc>优惠券ID</desc>
</prop>
<prop>
<name>creat_time</name>
<type>Date</type>
<level>Basic</level>
<desc>优惠券创建时间</desc>
</prop>
<prop>
<name>create_channel</name>
<type>String</type>
<level>Basic</level>
<desc>优惠券的创建渠道，自己创建/他人创建</desc>
</prop>
<prop>
<name>denominations</name>
<type>Number</type>
<level>Basic</level>
<desc>优惠券的面值，返回的是“分”，不是“元”，500代表500分相当于5元</desc>
</prop>
<prop>
<name>end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>优惠券的截止日期</desc>
</prop>
</props>
</struct>
<struct>
<name>MpicVideo</name>
<desc>宝贝主图视频数据结构</desc>
<props>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<desc>主图视频记录所关联的商品的数字id</desc>
</prop>
<prop>
<name>video_duaration</name>
<type>Number</type>
<level>Basic</level>
<desc>主图视频的时长，单位：秒</desc>
</prop>
<prop>
<name>video_id</name>
<type>Number</type>
<level>Basic</level>
<desc>主图视频的在淘视频中的ID</desc>
</prop>
<prop>
<name>video_pic</name>
<type>String</type>
<level>Basic</level>
<desc>主图视频的缩略图URL</desc>
</prop>
<prop>
<name>video_status</name>
<type>Number</type>
<level>Basic</level>
<desc>主图视频的状态</desc>
</prop>
</props>
</struct>
<struct>
<name>AfterSale</name>
<desc>卖家设置售后服务对象</desc>
<props>
<prop>
<name>after_sale_id</name>
<type>Number</type>
<level>Basic</level>
<desc>id</desc>
</prop>
<prop>
<name>after_sale_name</name>
<type>String</type>
<level>Basic</level>
<desc>名称</desc>
</prop>
<prop>
<name>after_sale_path</name>
<type>String</type>
<level>Basic</level>
<desc>tfs地址</desc>
</prop>
</props>
</struct>
<struct>
<name>SubwayItem</name>
<desc>主站商品对象</desc>
<props>
<prop>
<name>extra_attributes</name>
<type>ExtraAttributes</type>
<level>Object</level>
<desc>扩展属性对象</desc>
</prop>
<prop>
<name>num_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品信息在外部系统(淘宝主站)的数字id</desc>
</prop>
<prop>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<desc>商品信息在外部系统（淘宝主站）的价格</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>商品信息在外部系统（淘宝主站）的标题</desc>
</prop>
</props>
</struct>
<struct>
<name>SubwayItemPartition</name>
<desc>直通车商品分页对象</desc>
<props>
<prop>
<name>item_list</name>
<type>SubwayItem</type>
<level>Object Array</level>
<desc>商品列表</desc>
</prop>
<prop>
<name>order_by</name>
<type>Boolean</type>
<level>Basic</level>
<desc>排序， 
True:升级False:降序</desc>
</prop>
<prop>
<name>order_field</name>
<type>String</type>
<level>Basic</level>
<desc>排序字段</desc>
</prop>
<prop>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<desc>返回第几页的数据从1开始</desc>
</prop>
<prop>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<desc>每页数据大小</desc>
</prop>
<prop>
<name>total_item</name>
<type>Number</type>
<level>Basic</level>
<desc>所查询的数据总数，只有当返回第一页数据时有值，当要求返回的数据非第一页时，此返回值无效</desc>
</prop>
</props>
</struct>
<struct>
<name>PartnerDetail</name>
<desc>物流公司详细信息</desc>
<props>
<prop>
<name>account_no</name>
<type>String</type>
<level>Basic</level>
<desc>物流公司支付宝账号</desc>
</prop>
<prop>
<name>company_code</name>
<type>String</type>
<level>Basic</level>
<desc>物流公司代码</desc>
</prop>
<prop>
<name>company_id</name>
<type>Number</type>
<level>Basic</level>
<desc>物流公司id</desc>
</prop>
<prop>
<name>company_name</name>
<type>String</type>
<level>Basic</level>
<desc>物流公司简称</desc>
</prop>
<prop>
<name>full_name</name>
<type>String</type>
<level>Basic</level>
<desc>物流公司全名</desc>
</prop>
<prop>
<name>reg_mail_no</name>
<type>String</type>
<level>Basic</level>
<desc>运单号验证正则表达式</desc>
</prop>
<prop>
<name>wangwang_id</name>
<type>String</type>
<level>Basic</level>
<desc>旺旺id</desc>
</prop>
</props>
</struct>
<struct>
<name>SubAccountInfo</name>
<desc>子账号基本信息</desc>
<props>
<prop>
<name>sub_dispatch_status</name>
<type>Boolean</type>
<level>Basic</level>
<desc>子账号是否参与分流 true:参与分流 false:未参与分流</desc>
</prop>
<prop>
<name>sub_id</name>
<type>Number</type>
<level>Basic</level>
<desc>子账号Id</desc>
</prop>
<prop>
<name>sub_nick</name>
<type>String</type>
<level>Basic</level>
<desc>子账号用户名</desc>
</prop>
<prop>
<name>sub_owed_status</name>
<type>Boolean</type>
<level>Basic</level>
<desc>子账号是否已欠费 true:已欠费 false:未欠费</desc>
</prop>
<prop>
<name>sub_status</name>
<type>Number</type>
<level>Basic</level>
<desc>子账号当前状态：1正常，2卖家停用，3处罚冻结</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>主账号Id</desc>
</prop>
<prop>
<name>user_nick</name>
<type>String</type>
<level>Basic</level>
<desc>主账号用户名</desc>
</prop>
</props>
</struct>
<struct>
<name>Evaluation</name>
<desc>客服评价</desc>
<props>
<prop>
<name>evaluation_name</name>
<type>String</type>
<level>Basic</level>
<desc>客服评价内容</desc>
</prop>
<prop>
<name>evaluation_num</name>
<type>String</type>
<level>Basic</level>
<desc>评价数量</desc>
</prop>
</props>
</struct>
<struct>
<name>OnlineTimeById</name>
<desc>在线时长</desc>
<props>
<prop>
<name>online_times</name>
<type>Number</type>
<level>Basic</level>
<desc>客服在线时间长度（秒）</desc>
</prop>
<prop>
<name>service_staff_id</name>
<type>String</type>
<level>Basic</level>
<desc>客服人员ID</desc>
</prop>
</props>
</struct>
<struct>
<name>LogisticServiceTag</name>
<desc>物流服务标签</desc>
<props>
<prop>
<name>service_tag</name>
<type>String</type>
<level>Basic</level>
<desc>物流服务下的标签属性,多个标签之间有";"分隔</desc>
</prop>
<prop>
<name>service_type</name>
<type>String</type>
<level>Basic</level>
<desc>服务类型=编码 
平邮=POST 
快递=FAST 
EMS=EMS 
消费者选快递时为FAST</desc>
</prop>
</props>
</struct>
<struct>
<name>WaitingTimeById</name>
<desc>平均等待时长</desc>
<props>
<prop>
<name>avg_waiting_times</name>
<type>Number</type>
<level>Basic</level>
<desc>平均等待时间长度（秒）</desc>
</prop>
<prop>
<name>service_staff_id</name>
<type>String</type>
<level>Basic</level>
<desc>客服人员ID</desc>
</prop>
</props>
</struct>
<struct>
<name>Privilege</name>
<desc>用户功能点数据</desc>
<props>
<prop>
<name>app_key</name>
<type>String</type>
<level>Basic</level>
<desc>开放平台的app_key</desc>
</prop>
<prop>
<name>order_by</name>
<type>String</type>
<level>Basic</level>
<desc>排序数字</desc>
</prop>
<prop>
<name>owner_user_id</name>
<type>String</type>
<level>Basic</level>
<desc>创建者ID</desc>
</prop>
<prop>
<name>parent_privilege_code</name>
<type>String</type>
<level>Basic</level>
<desc>父功能编号</desc>
</prop>
<prop>
<name>privilege_code</name>
<type>String</type>
<level>Basic</level>
<desc>功能编码</desc>
</prop>
<prop>
<name>privilege_level</name>
<type>String</type>
<level>Basic</level>
<desc>权限级别 
1 基础功能 
2 solution功能 
3 私有报表</desc>
</prop>
<prop>
<name>privilege_name</name>
<type>String</type>
<level>Basic</level>
<desc>功能点名称</desc>
</prop>
<prop>
<name>privilege_type</name>
<type>String</type>
<level>Basic</level>
<desc>1-前台功能，2-后端功能</desc>
</prop>
<prop>
<name>privilege_url</name>
<type>String</type>
<level>Basic</level>
<desc>功能URL</desc>
</prop>
<prop>
<name>seller_id</name>
<type>String</type>
<level>Basic</level>
<desc>卖家ID</desc>
</prop>
</props>
</struct>
<struct>
<name>ReplyStatById</name>
<desc>客服回复统计</desc>
<props>
<prop>
<name>reply_num</name>
<type>Number</type>
<level>Basic</level>
<desc>客服回复数</desc>
</prop>
<prop>
<name>user_id</name>
<type>String</type>
<level>Basic</level>
<desc>客服ID</desc>
</prop>
</props>
</struct>
<struct>
<name>ADGroupPage</name>
<desc>一页ADGroup列表</desc>
<props>
<prop>
<name>adgroup_list</name>
<type>ADGroup</type>
<level>Object Array</level>
<desc>商品对象列表</desc>
</prop>
<prop>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<desc>返回第几页的数据从1开始</desc>
</prop>
<prop>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<desc>每页数据大小</desc>
</prop>
<prop>
<name>total_item</name>
<type>Number</type>
<level>Basic</level>
<desc>所查询的数据总数，只有当返回第一页数据时有值，当要求返回的数据非第一页时，此返回值无效</desc>
</prop>
</props>
</struct>
<struct>
<name>Department</name>
<desc>部门信息</desc>
<props>
<prop>
<name>department_id</name>
<type>Number</type>
<level>Basic</level>
<desc>部门ID</desc>
</prop>
<prop>
<name>department_name</name>
<type>String</type>
<level>Basic</level>
<desc>部门名称</desc>
</prop>
<prop>
<name>parent_id</name>
<type>Number</type>
<level>Basic</level>
<desc>当前部门的父部门ID</desc>
</prop>
</props>
</struct>
<struct>
<name>RecommendWordPage</name>
<desc>一页推荐词列表</desc>
<props>
<prop>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<desc>返回第几页的数据从1开始。 
如果输入的值大于可取得的最大页码值时，将返回 
最大的页码值并且recommend_word_list值将 
为空</desc>
</prop>
<prop>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<desc>每页数据大小</desc>
</prop>
<prop>
<name>recommend_word_list</name>
<type>RecommendWord</type>
<level>Object Array</level>
<desc>推荐词分页对象列表</desc>
</prop>
<prop>
<name>total_item</name>
<type>Number</type>
<level>Basic</level>
<desc>所查询的数据总数</desc>
</prop>
</props>
</struct>
<struct>
<name>Duty</name>
<desc>子账号职务信息</desc>
<props>
<prop>
<name>duty_id</name>
<type>Number</type>
<level>Basic</level>
<desc>职务ID</desc>
</prop>
<prop>
<name>duty_level</name>
<type>Number</type>
<level>Basic</level>
<desc>职务级别</desc>
</prop>
<prop>
<name>duty_name</name>
<type>String</type>
<level>Basic</level>
<desc>职务名称</desc>
</prop>
</props>
</struct>
<struct>
<name>SubUserFullInfo</name>
<desc>子账号详细信息，其中包括账号基本信息、员工信息和部门职务信息</desc>
<props>
<prop>
<name>department_id</name>
<type>Number</type>
<level>Basic</level>
<desc>部门Id</desc>
</prop>
<prop>
<name>department_name</name>
<type>String</type>
<level>Basic</level>
<desc>部门名称</desc>
</prop>
<prop>
<name>duty_id</name>
<type>Number</type>
<level>Basic</level>
<desc>职务Id</desc>
</prop>
<prop>
<name>duty_level</name>
<type>Number</type>
<level>Basic</level>
<desc>职务等级</desc>
</prop>
<prop>
<name>duty_name</name>
<type>String</type>
<level>Basic</level>
<desc>职务名称</desc>
</prop>
<prop>
<name>employee_id</name>
<type>Number</type>
<level>Basic</level>
<desc>员工ID</desc>
</prop>
<prop>
<name>employee_name</name>
<type>String</type>
<level>Basic</level>
<desc>员工姓名</desc>
</prop>
<prop>
<name>employee_nickname</name>
<type>String</type>
<level>Basic</level>
<desc>员工花名</desc>
</prop>
<prop>
<name>employee_num</name>
<type>String</type>
<level>Basic</level>
<desc>入职员工工号</desc>
</prop>
<prop>
<name>entry_date</name>
<type>Date</type>
<level>Basic</level>
<desc>员工入职时间</desc>
</prop>
<prop>
<name>leader_id</name>
<type>Number</type>
<level>Basic</level>
<desc>直接上级的员工ID</desc>
</prop>
<prop>
<name>office_phone</name>
<type>String</type>
<level>Basic</level>
<desc>办公电话</desc>
</prop>
<prop>
<name>parent_department</name>
<type>Number</type>
<level>Basic</level>
<desc>父部门Id</desc>
</prop>
<prop>
<name>sex</name>
<type>Number</type>
<level>Basic</level>
<desc>员工性别  1:男;  2:女</desc>
</prop>
<prop>
<name>sub_dispatch_status</name>
<type>Boolean</type>
<level>Basic</level>
<desc>子账号是否参与分流 true:参与分流 false:未参与分流</desc>
</prop>
<prop>
<name>sub_id</name>
<type>Number</type>
<level>Basic</level>
<desc>子账号Id</desc>
</prop>
<prop>
<name>sub_nick</name>
<type>String</type>
<level>Basic</level>
<desc>子账号用户名</desc>
</prop>
<prop>
<name>sub_owed_status</name>
<type>Boolean</type>
<level>Basic</level>
<desc>子账号是否已欠费 true:已欠费 false:未欠费</desc>
</prop>
<prop>
<name>sub_status</name>
<type>Number</type>
<level>Basic</level>
<desc>子账号当前状态：1正常，2卖家停用，3处罚冻结</desc>
</prop>
<prop>
<name>subuser_email</name>
<type>String</type>
<level>Basic</level>
<desc>子账号企业邮箱</desc>
</prop>
<prop>
<name>user_email</name>
<type>String</type>
<level>Basic</level>
<desc>主账号企业邮箱</desc>
</prop>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<desc>主账号Id</desc>
</prop>
<prop>
<name>user_nick</name>
<type>String</type>
<level>Basic</level>
<desc>主账号用户名</desc>
</prop>
<prop>
<name>work_location</name>
<type>String</type>
<level>Basic</level>
<desc>工作地点</desc>
</prop>
</props>
</struct>
<struct>
<name>LogisticsPartner</name>
<desc>查询揽送范围之内的物流公司信息</desc>
<props>
<prop>
<name>carriage</name>
<type>CarriageDetail</type>
<level>Object</level>
<desc>物流公司揽收和资费详细信息</desc>
</prop>
<prop>
<name>cover_remark</name>
<type>String</type>
<level>Basic</level>
<desc>揽收说明信息</desc>
</prop>
<prop>
<name>partner</name>
<type>PartnerDetail</type>
<level>Object</level>
<desc>物流公司详细信息</desc>
</prop>
<prop>
<name>uncover_remark</name>
<type>String</type>
<level>Basic</level>
<desc>不可送达的说明信息</desc>
</prop>
</props>
</struct>
<struct>
<name>CampaignPlatform</name>
<desc>推广计划的投放平台</desc>
<props>
<prop>
<name>campaign_id</name>
<type>Number</type>
<level>Basic</level>
<desc>推广计划ID</desc>
</prop>
<prop>
<name>create_time</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</prop>
<prop>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<desc>最后修改时间</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<desc>主人昵称</desc>
</prop>
<prop>
<name>nonsearch_channels</name>
<type>Number</type>
<level>Basic Array</level>
<desc>非搜索投放频道代码数组，频道代码必须是直通车非搜索类频道列表中的值。？</desc>
</prop>
<prop>
<name>outside_discount</name>
<type>Number</type>
<level>Basic</level>
<desc>溢价的百分比，必须是大于等于 1小于等于200的整数</desc>
</prop>
<prop>
<name>search_channels</name>
<type>Number</type>
<level>Basic Array</level>
<desc>搜索投放频道代码数组，频道代码必须是直通车搜索类频道列表中的值。</desc>
</prop>
</props>
</struct>
<struct>
<name>TicketItemProcessResult</name>
<desc>门票商品操作结果</desc>
<props>
<prop>
<name>broken</name>
<type>Boolean</type>
<level>Basic</level>
<desc>商品操作流程是否被迫终止。 
如果broken==false则表示成功发布商品，则通过item_id字段获取新生成商品id； 
如果broken==true则表示发布商品遇到问题，则通过broken_reasons字段获取到失败原因。</desc>
</prop>
<prop>
<name>broken_reasons</name>
<type>String</type>
<level>Basic Array</level>
<desc>操作商品遇到的错误原因</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>成功操作的商品标识</desc>
</prop>
</props>
</struct>
<struct>
<name>Promotion</name>
<desc>商品优惠策略详情</desc>
<props>
<prop>
<name>decrease_num</name>
<type>Number</type>
<level>Basic</level>
<desc>减价件数，1只减一件，0表示多件</desc>
</prop>
<prop>
<name>discount_type</name>
<type>String</type>
<level>Basic</level>
<desc>优惠类型，PRICE表示按价格优惠，DISCOUNT表示按折扣优惠</desc>
</prop>
<prop>
<name>discount_value</name>
<type>String</type>
<level>Basic</level>
<desc>优惠额度</desc>
</prop>
<prop>
<name>end_date</name>
<type>Date</type>
<level>Basic</level>
<desc>优惠结束日期</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<desc>商品数字ID</desc>
</prop>
<prop>
<name>promotion_desc</name>
<type>String</type>
<level>Basic</level>
<desc>优惠描述</desc>
</prop>
<prop>
<name>promotion_id</name>
<type>Number</type>
<level>Basic</level>
<desc>优惠ID</desc>
</prop>
<prop>
<name>promotion_title</name>
<type>String</type>
<level>Basic</level>
<desc>优惠标题，显示在宝贝详情页面的优惠图标的tip。</desc>
</prop>
<prop>
<name>start_date</name>
<type>Date</type>
<level>Basic</level>
<desc>优惠开始日期</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>优惠策略状态，ACTIVE表示有效，UNACTIVE表示无效</desc>
</prop>
<prop>
<name>tag_id</name>
<type>Number</type>
<level>Basic</level>
<desc>对应的人群标签ID</desc>
</prop>
</props>
</struct>
<struct>
<name>TicketEtc</name>
<desc>门票商品电子凭证信息</desc>
<props>
<prop>
<name>association_status</name>
<type>Boolean</type>
<level>Basic</level>
<desc>商品电子凭证是否关联本地商户-在门票商品为电子凭证时必选</desc>
</prop>
<prop>
<name>auto_refund</name>
<type>Number</type>
<level>Basic</level>
<desc>商品电子凭证的自动退款比例-在门票商品为电子凭证时必选</desc>
</prop>
<prop>
<name>merchant_id</name>
<type>String</type>
<level>Basic</level>
<desc>商品电子凭证的码商-在门票商品为电子凭证时必选</desc>
</prop>
<prop>
<name>merchant_nick</name>
<type>String</type>
<level>Basic</level>
<desc>商品电子凭证的码商名-在门票商品为电子凭证时必选</desc>
</prop>
<prop>
<name>network_id</name>
<type>String</type>
<level>Basic</level>
<desc>商品电子凭证的码商-在门票商品为电子凭证时必选</desc>
</prop>
<prop>
<name>overdue_pay</name>
<type>Number</type>
<level>Basic</level>
<desc>商品电子凭证的过期退款比例-在门票商品为电子凭证时必选</desc>
</prop>
<prop>
<name>verification_pay</name>
<type>Boolean</type>
<level>Basic</level>
<desc>商品电子凭证是否核销打款-在门票商品为电子凭证时必选</desc>
</prop>
</props>
</struct>
<struct>
<name>TicketItem</name>
<desc>新门票类目商品信息</desc>
<props>
<prop>
<name>auction_point</name>
<type>Price</type>
<level>Basic</level>
<desc>商品返点比例（只对B卖家开放，单位为%）</desc>
</prop>
<prop>
<name>auction_status</name>
<type>String</type>
<level>Basic</level>
<desc>商品状态（onsale：上架，instock：仓库）</desc>
</prop>
<prop>
<name>cat_id</name>
<type>Number</type>
<level>Basic</level>
<desc>类目标识</desc>
</prop>
<prop>
<name>city</name>
<type>String</type>
<level>Basic</level>
<desc>商品所在地-城市</desc>
</prop>
<prop>
<name>description</name>
<type>String</type>
<level>Basic</level>
<desc>商品描述</desc>
</prop>
<prop>
<name>err_msg</name>
<type>String</type>
<level>Basic</level>
<desc>商品对应的错误信息。针对get接口使用。</desc>
</prop>
<prop>
<name>etc</name>
<type>TicketEtc</type>
<level>Object</level>
<desc>商品电子凭证信息-在门票商品为电子凭证时必选</desc>
</prop>
<prop>
<name>have_invoice</name>
<type>Boolean</type>
<level>Basic</level>
<desc>商品是否有发票（有发票为true，没有发票为false）</desc>
</prop>
<prop>
<name>image_1</name>
<type>String</type>
<level>Basic</level>
<desc>商品主图</desc>
</prop>
<prop>
<name>image_2</name>
<type>String</type>
<level>Basic</level>
<desc>商品第一张多图</desc>
</prop>
<prop>
<name>image_3</name>
<type>String</type>
<level>Basic</level>
<desc>商品第二张多图</desc>
</prop>
<prop>
<name>image_4</name>
<type>String</type>
<level>Basic</level>
<desc>商品第三张多图</desc>
</prop>
<prop>
<name>image_5</name>
<type>String</type>
<level>Basic</level>
<desc>商品第四张多图</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品的标识</desc>
</prop>
<prop>
<name>list_time</name>
<type>String</type>
<level>Basic</level>
<desc>商品的上架时间（精确到分，格式为：yyyy-MM-dd HH:mm）</desc>
</prop>
<prop>
<name>postage_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品的物流运费模板-在产品规格使用到物流时必选</desc>
</prop>
<prop>
<name>product_id</name>
<type>Number</type>
<level>Basic</level>
<desc>产品（具有产品规格的）标识</desc>
</prop>
<prop>
<name>promoted_status</name>
<type>Boolean</type>
<level>Basic</level>
<desc>商品是否橱窗推荐（橱窗推荐；true，不推荐：false）</desc>
</prop>
<prop>
<name>prov</name>
<type>String</type>
<level>Basic</level>
<desc>商品所在地-省份</desc>
</prop>
<prop>
<name>shop_cats</name>
<type>String</type>
<level>Basic</level>
<desc>宝贝所属的店铺分类列表-店铺分类标识请使用店铺相关接口获取获取，多个店铺分类标识之间通过逗号进行分隔，最多包含10个分类标识</desc>
</prop>
<prop>
<name>skus</name>
<type>String</type>
<level>Basic</level>
<desc>参见taobao.ticket.item.add文档描述</desc>
</prop>
<prop>
<name>sub_stock_at_buy</name>
<type>Boolean</type>
<level>Basic</level>
<desc>商品是否为拍下减库存（拍下减库存为true，付款减库存为false）</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<desc>商品标题</desc>
</prop>
<prop>
<name>video_id</name>
<type>Number</type>
<level>Basic</level>
<desc>商品视频-视频标识由多媒体中相关接口获取</desc>
</prop>
<prop>
<name>vip_promoted</name>
<type>Boolean</type>
<level>Basic</level>
<desc>商品是否参与店铺会员打折</desc>
</prop>
</props>
</struct>
<struct>
<name>LogisticsTag</name>
<desc>物流的服务标签</desc>
<props>
<prop>
<name>logistic_service_tag_list</name>
<type>LogisticServiceTag</type>
<level>Object Array</level>
<desc>服务标签</desc>
</prop>
<prop>
<name>order_id</name>
<type>String</type>
<level>Basic</level>
<desc>主订单或子订单的订单号</desc>
</prop>
</props>
</struct>
</structs>
<apis>
<api>
<name>taobao.appstore.subscribe.get</name>
<desc>查询appstore应用订购关系(对于新上架的多版本应用，建议使用taobao.vas.subscribe.get)</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<desc>用户昵称</desc>
</param>
</request>
<response>
<param>
<name>user_subscribe</name>
<type>UserSubscribe</type>
<level>Object</level>
<desc>用户订购信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.user.seller.get</name>
<desc>查询卖家用户信息（只能查询有店铺的用户） 只能卖家类应用调用。</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>只返回user_id,nick,sex,seller_credit,type,has_more_pic,item_img_num,item_img_size,prop_img_num,prop_img_size,auto_repost,promoted_type,status,alipay_bind,consumer_protection,avatar,liangpin,sign_food_seller_promise,has_shop,is_lightning_consignment,has_sub_stock,is_golden_seller,vip_info,magazine_subscribe,vertical_market,online_gaming参数</desc>
</param>
</request>
<response>
<param>
<name>user</name>
<type>User</type>
<level>Object</level>
<desc>只返回user_id,nick,sex,seller_credit,type,has_more_pic,item_img_num,item_img_size,prop_img_num,prop_img_size,auto_repost,promoted_type,status,alipay_bind,consumer_protection,avatar,liangpin,sign_food_seller_promise,has_shop,is_lightning_consignment,has_sub_stock,is_golden_seller,vip_info,magazine_subscribe,vertical_market,online_gaming</desc>
</param>
</response>
</api>
<api>
<name>taobao.itemcats.authorize.get</name>
<desc>查询B商家被授权品牌列表、类目列表和 c 商家新品类目列表</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需要返回的字段。目前支持有： 
brand.vid, brand.name,  
item_cat.cid, item_cat.name, item_cat.status,item_cat.sort_order,item_cat.parent_cid,item_cat.is_parent, 
xinpin_item_cat.cid,  
xinpin_item_cat.name,  
xinpin_item_cat.status, 
xinpin_item_cat.sort_order, 
xinpin_item_cat.parent_cid, 
xinpin_item_cat.is_parent</desc>
</param>
</request>
<response>
<param>
<name>seller_authorize</name>
<type>SellerAuthorize</type>
<level>Object</level>
<desc>里面有3个数组： 
Brand[]品牌列表, 
ItemCat[] 类目列表 
XinpinItemCat[] 针对于C卖家新品类目列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.itemcats.get</name>
<desc>获取后台供卖家发布商品的标准商品类目。</desc>
<request>
<param>
<name>cids</name>
<type>Number</type>
<required>special</required>
<max_list_size>1000</max_list_size>
<max_value>9223372036854775807</max_value>
<min_value>0</min_value>
<desc>商品所属类目ID列表，用半角逗号(,)分隔 例如:(18957,19562,) (cids、parent_cid至少传一个)&lt;br /&gt; 支持最大值为：9223372036854775807&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>optional</required>
<desc>需要返回的字段列表，见ItemCat，默认返回：cid,parent_cid,name,is_parent；增量类目信息,根据fields传入的参数返回相应的结果。 features字段： 1、如果存在attr_key=freeze表示该类目被冻结了，attr_value=0,5，value可能存在2个值（也可能只有1个），用逗号分割，0表示禁编辑，5表示禁止发布</desc>
</param>
<param>
<name>parent_cid</name>
<type>Number</type>
<required>special</required>
<max_value>9223372036854775807</max_value>
<min_value>0</min_value>
<desc>父商品类目 id，0表示根节点, 传输该参数返回所有子类目。 (cids、parent_cid至少传一个)&lt;br /&gt; 支持最大值为：9223372036854775807&lt;br /&gt; 支持最小值为：0</desc>
</param>
</request>
<response>
<param>
<name>item_cats</name>
<type>ItemCat</type>
<level>Object Array</level>
<desc>增量类目信息,根据fields传入的参数返回相应的结果；增量类目信息,根据fields传入的参数返回相应的结果。 features字段： 1、如果存在attr_key=freeze表示该类目被冻结了，attr_value=0,5，value可能存在2个值（也可能只有1个），用逗号分割，0表示禁编辑，5表示禁止发布</desc>
</param>
<param>
<name>last_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>最近修改时间(如果取增量，会返回该字段)。格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
</response>
</api>
<api>
<name>taobao.itemprops.get</name>
<desc>通过设置必要的参数，来获取商品后台标准类目属性，以及这些属性里面详细的属性值prop_values。</desc>
<request>
<param>
<name>attr_keys</name>
<type>String</type>
<required>optional</required>
<desc>属性的Key，支持多条，以“,”分隔</desc>
</param>
<param>
<name>child_path</name>
<type>String</type>
<required>optional</required>
<desc>类目子属性路径,由该子属性上层的类目属性和类目属性值组成,格式pid:vid;pid:vid.取类目子属性需要传child_path,cid</desc>
</param>
<param>
<name>cid</name>
<type>Number</type>
<required>required</required>
<desc>叶子类目ID，如果只传cid，则只返回一级属性,通过taobao.itemcats.get获得叶子类目ID</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>optional</required>
<desc>需要返回的字段列表，见：ItemProp，默认返回：pid, name, must, multi, prop_values</desc>
</param>
<param>
<name>is_color_prop</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否颜色属性。可选值:true(是),false(否) (删除的属性不会匹配和返回这个条件)</desc>
</param>
<param>
<name>is_enum_prop</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否枚举属性。可选值:true(是),false(否) (删除的属性不会匹配和返回这个条件)。如果返回true，属性值是下拉框选择输入，如果返回false，属性值是用户自行手工输入。</desc>
</param>
<param>
<name>is_input_prop</name>
<type>Boolean</type>
<required>optional</required>
<desc>在is_enum_prop是true的前提下，是否是卖家可以自行输入的属性（注：如果is_enum_prop返回false，该参数统一返回false）。可选值:true(是),false(否) (删除的属性不会匹配和返回这个条件)</desc>
</param>
<param>
<name>is_item_prop</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否商品属性，这个属性只能放于发布商品时使用。可选值:true(是),false(否)</desc>
</param>
<param>
<name>is_key_prop</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否关键属性。可选值:true(是),false(否)</desc>
</param>
<param>
<name>is_sale_prop</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否销售属性。可选值:true(是),false(否)</desc>
</param>
<param>
<name>parent_pid</name>
<type>Number</type>
<required>optional</required>
<desc>父属性ID</desc>
</param>
<param>
<name>pid</name>
<type>Number</type>
<required>optional</required>
<desc>属性id (取类目属性时，传pid，不用同时传PID和parent_pid)</desc>
</param>
<param>
<name>type</name>
<type>Number</type>
<required>optional</required>
<max_value>2</max_value>
<min_value>1</min_value>
<desc>获取类目的类型：1代表集市、2代表天猫&lt;br /&gt; 支持最大值为：2&lt;br /&gt; 支持最小值为：1</desc>
</param>
</request>
<response>
<param>
<name>item_props</name>
<type>ItemProp</type>
<level>Object Array</level>
<desc>类目属性信息(如果是取全量或者增量，不包括属性值),根据fields传入的参数返回相应的结果</desc>
</param>
<param>
<name>last_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>最近修改时间(只有取全量或增量的时候会返回该字段)。格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
</response>
</api>
<api>
<name>taobao.itempropvalues.get</name>
<desc>传入类目ID,必需是叶子类目，通过taobao.itemcats.get获取类目ID 
返回字段目前支持有：cid,pid,prop_name,vid,name,name_alias,status,sort_order 
作用:获取标准类目属性值</desc>
<request>
<param>
<name>attr_keys</name>
<type>String</type>
<required>optional</required>
<desc>属性的Key，支持多条，以“,”分隔</desc>
</param>
<param>
<name>cid</name>
<type>Number</type>
<required>required</required>
<desc>叶子类目ID ,通过taobao.itemcats.get获得叶子类目ID</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需要返回的字段。目前支持有：cid,pid,prop_name,vid,name,name_alias,status,sort_order</desc>
</param>
<param>
<name>pvs</name>
<type>String</type>
<required>special</required>
<desc>属性和属性值 id串，格式例如(pid1;pid2)或(pid1:vid1;pid2:vid2)或(pid1;pid2:vid2)</desc>
</param>
<param>
<name>type</name>
<type>Number</type>
<required>optional</required>
<max_value>2</max_value>
<min_value>1</min_value>
<desc>获取类目的类型：1代表集市、2代表天猫&lt;br /&gt; 支持最大值为：2&lt;br /&gt; 支持最小值为：1</desc>
</param>
</request>
<response>
<param>
<name>last_modified</name>
<type>Date</type>
<level>Basic</level>
<desc>最近修改时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>prop_values</name>
<type>PropValue</type>
<level>Object Array</level>
<desc>属性值,根据fields传入的参数返回相应的结果</desc>
</param>
</response>
</api>
<api>
<name>taobao.aftersale.get</name>
<desc>查询用户设置的售后服务模板，仅返回标题和id</desc>
<response>
<param>
<name>after_sales</name>
<type>AfterSale</type>
<level>Object Array</level>
<desc>售后服务返回对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.add</name>
<desc>此接口用于新增一个商品  
商品所属的卖家是当前会话的用户  
商品的属性和sku的属性有包含的关系，商品的价格要位于sku的价格区间之中（例如，sku价格有5元、10元两种，那么商品的价格就需要大于等于5元，小于等于10元，否则新增商品会失败）  
商品的类目和商品的价格、sku的价格都有一定的相关性（具体的关系要通过类目属性查询接口获得）  
商品的运费承担方式和邮费设置有相关性，卖家承担运费不用设置邮费，买家承担运费需要设置邮费  
当关键属性值选择了“其他”的时候，需要输入input_pids和input_str商品才能添加成功。</desc>
<request>
<param>
<name>after_sale_id</name>
<type>Number</type>
<required>optional</required>
<desc>售后说明模板id</desc>
</param>
<param>
<name>approve_status</name>
<type>String</type>
<required>optional</required>
<desc>商品上传后的状态。可选值:onsale(出售中),instock(仓库中);默认值:onsale</desc>
</param>
<param>
<name>auction_point</name>
<type>Number</type>
<required>optional</required>
<desc>商品的积分返点比例。如:5,表示:返点比例0.5%. 注意：返点比例必须是&gt;0的整数，而且最大是90,即为9%.B商家在发布非虚拟商品时，返点必须是 5的倍数，即0.5%的倍数。其它是1的倍数，即0.1%的倍数。无名良品商家发布商品时，复用该字段记录积分宝返点比例，返点必须是对应类目的返点步长的整数倍，默认是5，即0.5%。注意此时该字段值依旧必须是&gt;0的整数，最高值不超过500，即50%</desc>
</param>
<param>
<name>auto_fill</name>
<type>String</type>
<required>optional</required>
<desc>代充商品类型。在代充商品的类目下，不传表示不标记商品类型（交易搜索中就不能通过标记搜到相关的交易了）。可选类型： 
no_mark(不做类型标记) 
time_card(点卡软件代充) 
fee_card(话费软件代充)</desc>
</param>
<param>
<name>barcode</name>
<type>String</type>
<required>optional</required>
<desc>商品条形码</desc>
</param>
<param>
<name>change_prop</name>
<type>String</type>
<required>optional</required>
<desc>商品基础色，数据格式为：pid:vid:rvid1,rvid2,rvid3;pid:vid:rvid1;
基础色只支持以下14种颜色：28335//绿色
28338//蓝色
90554//桔色
28324//黄色
28341//黑色
28320//白色
28326//红色
28329//紫色
3232480//粉红色
107121//透明
132069//褐色
28332//浅灰色
3232478//深灰色
130164//花色</desc>
</param>
<param>
<name>cid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>叶子类目id&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>cod_postage_id</name>
<type>Number</type>
<required>optional</required>
<desc>此为货到付款运费模板的ID，对应的JAVA类型是long,如果COD卖家应用了货到付款运费模板，此值要进行设置。 
该字段已经废弃</desc>
</param>
<param>
<name>desc</name>
<type>String</type>
<required>required</required>
<max_length>200000</max_length>
<desc>宝贝描述。字数要大于5个字符，小于25000个字符，受违禁词控制&lt;br /&gt; 支持最大长度为：200000&lt;br /&gt; 支持的最大列表长度为：200000</desc>
</param>
<param>
<name>desc_modules</name>
<type>String</type>
<required>optional</required>
<desc>商品描述模块化，模块列表，具体数据结构参见Item_Desc_Module。详细的使用方法可参考下面FAQ中说明。</desc>
</param>
<param>
<name>ems_fee</name>
<type>Price</type>
<required>optional</required>
<desc>ems费用。取值范围:0.01-999.00;精确到2位小数;单位:元。如:25.07，表示:25元7分</desc>
</param>
<param>
<name>express_fee</name>
<type>Price</type>
<required>optional</required>
<desc>快递费用。取值范围:0.01-999.00;精确到2位小数;单位:元。如:15.07，表示:15元7分</desc>
</param>
<param>
<name>food_security.contact</name>
<type>String</type>
<required>optional</required>
<desc>厂家联系方式</desc>
</param>
<param>
<name>food_security.design_code</name>
<type>String</type>
<required>optional</required>
<desc>产品标准号</desc>
</param>
<param>
<name>food_security.factory</name>
<type>String</type>
<required>optional</required>
<desc>厂名</desc>
</param>
<param>
<name>food_security.factory_site</name>
<type>String</type>
<required>optional</required>
<desc>厂址</desc>
</param>
<param>
<name>food_security.food_additive</name>
<type>String</type>
<required>optional</required>
<desc>食品添加剂</desc>
</param>
<param>
<name>food_security.health_product_no</name>
<type>String</type>
<required>optional</required>
<desc>健字号，保健品/膳食营养补充剂 这个类目下特有的信息，此类目下无需填写生产许可证编号（QS），如果填写了生产许可证编号（QS）将被忽略不保存；保存宝贝时，标题前会自动加上健字号产品名称一起作为宝贝标题；</desc>
</param>
<param>
<name>food_security.mix</name>
<type>String</type>
<required>optional</required>
<desc>配料表</desc>
</param>
<param>
<name>food_security.period</name>
<type>String</type>
<required>optional</required>
<desc>保质期</desc>
</param>
<param>
<name>food_security.plan_storage</name>
<type>String</type>
<required>optional</required>
<desc>储藏方法</desc>
</param>
<param>
<name>food_security.prd_license_no</name>
<type>String</type>
<required>optional</required>
<desc>生产许可证号</desc>
</param>
<param>
<name>food_security.product_date_end</name>
<type>String</type>
<required>optional</required>
<desc>生产结束日期,格式必须为yyyy-MM-dd</desc>
</param>
<param>
<name>food_security.product_date_start</name>
<type>String</type>
<required>optional</required>
<desc>生产开始日期，格式必须为yyyy-MM-dd</desc>
</param>
<param>
<name>food_security.stock_date_end</name>
<type>String</type>
<required>optional</required>
<desc>进货结束日期，要在生产日期之后，格式必须为yyyy-MM-dd</desc>
</param>
<param>
<name>food_security.stock_date_start</name>
<type>String</type>
<required>optional</required>
<desc>进货开始日期，要在生产日期之后，格式必须为yyyy-MM-dd</desc>
</param>
<param>
<name>food_security.supplier</name>
<type>String</type>
<required>optional</required>
<desc>供货商</desc>
</param>
<param>
<name>freight_payer</name>
<type>String</type>
<required>optional</required>
<desc>运费承担方式。可选值:seller（卖家承担）,buyer(买家承担);默认值:seller。卖家承担不用设置邮费和postage_id.买家承担的时候，必填邮费和postage_id  
如果用户设置了运费模板会优先使用运费模板，否则要同步设置邮费（post_fee,express_fee,ems_fee）</desc>
</param>
<param>
<name>global_stock_country</name>
<type>String</type>
<required>optional</required>
<max_length>30</max_length>
<desc>全球购商品采购地（地区/国家）,默认值只在全球购商品采购地（库存类型选择情况生效），地区国家值为（美国, 香港, 日本, 英国, 新西兰, 德国, 韩国, 荷兰, 澳洲, 法国, 意大利, 台湾, 澳门, 加拿大, 瑞士, 西班牙, 泰国, 新加坡, 马来西亚, 菲律宾, 其他）&lt;br /&gt; 支持最大长度为：30&lt;br /&gt; 支持的最大列表长度为：30</desc>
</param>
<param>
<name>global_stock_type</name>
<type>String</type>
<required>optional</required>
<desc>全球购商品采购地（库存类型）， 
有两种库存类型：现货和代购 
参数值为1时代表现货，值为2时代表代购。注意：使用时请与 全球购商品采购地（地区/国家）配合使用</desc>
</param>
<param>
<name>has_discount</name>
<type>Boolean</type>
<required>optional</required>
<desc>支持会员打折。可选值:true,false;默认值:false(不打折)</desc>
</param>
<param>
<name>has_invoice</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有发票。可选值:true,false (商城卖家此字段必须为true);默认值:false(无发票)</desc>
</param>
<param>
<name>has_showcase</name>
<type>Boolean</type>
<required>optional</required>
<desc>橱窗推荐。可选值:true,false;默认值:false(不推荐)</desc>
</param>
<param>
<name>has_warranty</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有保修。可选值:true,false;默认值:false(不保修)</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>optional</required>
<max_length>524288</max_length>
<desc>商品主图片。类型:JPG,GIF;最大长度:500K&lt;br /&gt; 支持的文件类型为：gif,jpg,jpeg,png&lt;br /&gt; 支持的最大列表长度为：524288</desc>
</param>
<param>
<name>increment</name>
<type>Price</type>
<required>optional</required>
<desc>加价(降价)幅度。如果为0，代表系统代理幅度。对于增价拍和荷兰拍来说是加价幅度，对于降价拍来说是降价幅度。</desc>
</param>
<param>
<name>input_pids</name>
<type>String</type>
<required>optional</required>
<desc>用户自行输入的类目属性ID串。结构："pid1,pid2,pid3"，如："20000"（表示品牌） 注：通常一个类目下用户可输入的关键属性不超过1个。</desc>
</param>
<param>
<name>input_str</name>
<type>String</type>
<required>optional</required>
<desc>用户自行输入的子属性名和属性值，结构:"父属性值;一级子属性名;一级子属性值;二级子属性名;自定义输入值,....",如：“耐克;耐克系列;科比系列;科比系列;2K5,Nike乔丹鞋;乔丹系列;乔丹鞋系列;乔丹鞋系列;json5”，多个自定义属性用','分割，input_str需要与input_pids一一对应，注：通常一个类目下用户可输入的关键属性不超过1个。所有属性别名加起来不能超过3999字节</desc>
</param>
<param>
<name>is_3D</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否是3D</desc>
</param>
<param>
<name>is_ex</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否在外店显示</desc>
</param>
<param>
<name>is_lightning_consignment</name>
<type>Boolean</type>
<required>optional</required>
<desc>实物闪电发货</desc>
</param>
<param>
<name>is_offline</name>
<type>String</type>
<required>optional</required>
<desc>是否是线下商品。 1：线上商品（默认值）； 2：线上或线下商品； 3：线下商品。</desc>
</param>
<param>
<name>is_taobao</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否在淘宝上显示（如果传FALSE，则在淘宝主站无法显示该商品）</desc>
</param>
<param>
<name>is_xinpin</name>
<type>Boolean</type>
<required>optional</required>
<desc>商品是否为新品。只有在当前类目开通新品,并且当前用户拥有该类目下发布新品权限时才能设置is_xinpin为true，否则设置true后会返回错误码:isv.invalid-permission:add-xinpin。同时只有一口价全新的宝贝才能设置为新品，否则会返回错误码：isv.invalid-parameter:xinpin。不设置该参数值或设置为false效果一致。</desc>
</param>
<param>
<name>item_size</name>
<type>String</type>
<required>optional</required>
<desc>表示商品的体积，如果需要使用按体积计费的运费模板，一定要设置这个值。该值的单位为立方米（m3），如果是其他单位，请转换成成立方米。 
该值支持两种格式的设置：格式1：bulk:3,单位为立方米(m3),表示直接设置为商品的体积。格式2：length:10;breadth:10;height:10，单位为米（m）。体积和长宽高都支持小数类型。 
在传入体积或长宽高时候，不能带单位。体积的单位默认为立方米（m3），长宽高的单位默认为米(m) 
该值支持两种格式的设置：格式1：bulk:3,单位为立方米(m3),表示直接设置为商品的体积。格式2：length:10;breadth:10;height:10，单位为米（m）</desc>
</param>
<param>
<name>item_weight</name>
<type>String</type>
<required>optional</required>
<desc>商品的重量，用于按重量计费的运费模板。注意：单位为kg。 
只能传入数值类型（包含小数），不能带单位，单位默认为kg。</desc>
</param>
<param>
<name>lang</name>
<type>String</type>
<required>optional</required>
<desc>商品文字的字符集。繁体传入"zh_HK"，简体传入"zh_CN"，不传默认为简体</desc>
</param>
<param>
<name>list_time</name>
<type>Date</type>
<required>optional</required>
<desc>定时上架时间。(时间格式：yyyy-MM-dd HH:mm:ss)</desc>
</param>
<param>
<name>locality_life.choose_logis</name>
<type>String</type>
<required>optional</required>
<desc>发布电子凭证宝贝时候表示是否使用邮寄 0: 代表不使用邮寄； 1：代表使用邮寄；如果不设置这个值，代表不使用邮寄</desc>
</param>
<param>
<name>locality_life.expirydate</name>
<type>String</type>
<required>optional</required>
<desc>本地生活电子交易凭证业务，目前此字段只涉及到的信息为有效期; 
如果有效期为起止日期类型，此值为2012-08-06,2012-08-16 
如果有效期为【购买成功日 至】类型则格式为2012-08-16 
如果有效期为天数类型则格式为15</desc>
</param>
<param>
<name>locality_life.merchant</name>
<type>String</type>
<required>optional</required>
<desc>码商信息，格式为 码商id:nick</desc>
</param>
<param>
<name>locality_life.network_id</name>
<type>String</type>
<required>optional</required>
<desc>网点ID</desc>
</param>
<param>
<name>locality_life.onsale_auto_refund_ratio</name>
<type>Number</type>
<required>optional</required>
<desc>电子凭证售中自动退款比例，百分比%前的数字，介于1-100之间的整数</desc>
</param>
<param>
<name>locality_life.refund_ratio</name>
<type>Number</type>
<required>optional</required>
<desc>退款比例， 
百分比%前的数字,1-100的正整数值</desc>
</param>
<param>
<name>locality_life.refundmafee</name>
<type>String</type>
<required>optional</required>
<desc>退款码费承担方。发布电子凭证宝贝的时候会增加“退款码费承担方”配置项，可选填：(1)s（卖家承担） (2)b(买家承担)</desc>
</param>
<param>
<name>locality_life.verification</name>
<type>String</type>
<required>optional</required>
<desc>核销打款  
1代表核销打款 0代表非核销打款</desc>
</param>
<param>
<name>location.city</name>
<type>String</type>
<required>required</required>
<desc>所在地城市。如杭州 。</desc>
</param>
<param>
<name>location.state</name>
<type>String</type>
<required>required</required>
<desc>所在地省份。如浙江</desc>
</param>
<param>
<name>newprepay</name>
<type>String</type>
<required>optional</required>
<desc>该宝贝是否支持【7天无理由退货】，卖家选择的值只是一个因素，最终以类目和选择的属性条件来确定是否支持7天。填入字符0，表示不支持；未填写或填人字符1，表示支持7天无理由退货；</desc>
</param>
<param>
<name>num</name>
<type>Number</type>
<required>required</required>
<max_value>900000000</max_value>
<min_value>0</min_value>
<desc>商品数量。取值范围:0-900000000的整数。且需要等于Sku所有数量的和。
拍卖商品中增加拍只能为1，荷兰拍要在[2,500)范围内。&lt;br /&gt; 支持最大值为：900000000&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>商品外部编码，该字段的最大长度是64个字节</desc>
</param>
<param>
<name>paimai_info.deposit</name>
<type>Number</type>
<required>optional</required>
<desc>拍卖宝贝的保证金。对于增价拍和荷兰拍来说保证金有两种模式：淘宝默认模式（首次出价金额的10%），自定义固定保证金（固定冻结金额只能输入不超过30万的正整数），并且保证金只冻结1次。对于降价拍来说保证金只有淘宝默认的（竞拍价格的10% * 竞拍数量），并且每次出价都需要冻结保证金。 
对于拍卖宝贝来说，保证金是必须的，但是默认使用淘宝默认保证金模式，只有用户需要使用自定义固定保证金的时候才需要使用到这个参数，如果该参数不传或传入0则代表使用默认。</desc>
</param>
<param>
<name>paimai_info.interval</name>
<type>Number</type>
<required>optional</required>
<max_value>60</max_value>
<min_value>1</min_value>
<desc>降价拍宝贝的降价周期(分钟)。降价拍宝贝的价格每隔paimai_info.interval时间会下降一次increment。&lt;br /&gt; 支持最大值为：60&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>paimai_info.mode</name>
<type>Number</type>
<required>optional</required>
<max_value>3</max_value>
<min_value>1</min_value>
<desc>拍卖商品选择的拍卖类型，拍卖类型包括三种：增价拍(1)，荷兰拍(2)和降价拍(3)。&lt;br /&gt; 支持最大值为：3&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>paimai_info.reserve</name>
<type>Price</type>
<required>optional</required>
<desc>降价拍宝贝的保留价。对于降价拍来说，paimai_info.reserve必须大于0，且小于price-increment，而且（price-paimai_info.reserve）/increment的计算结果必须为整数</desc>
</param>
<param>
<name>paimai_info.valid_hour</name>
<type>Number</type>
<required>optional</required>
<max_value>48</max_value>
<min_value>1</min_value>
<desc>自定义销售周期的小时数。拍卖宝贝可以自定义销售周期，这里指定销售周期的小时数。注意，该参数只作为输入参数，不能通过taobao.item.get接口获取。&lt;br /&gt; 支持最大值为：48&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>paimai_info.valid_minute</name>
<type>Number</type>
<required>optional</required>
<max_value>59</max_value>
<min_value>0</min_value>
<desc>自定义销售周期的分钟数。拍卖宝贝可以自定义销售周期，这里是指定销售周期的分钟数。自定义销售周期的小时数。拍卖宝贝可以自定义销售周期，这里指定销售周期的小时数。注意，该参数只作为输入参数，不能通过taobao.item.get接口获取。&lt;br /&gt; 支持最大值为：59&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>pic_path</name>
<type>String</type>
<required>optional</required>
<desc>商品主图需要关联的图片空间的相对url。这个url所对应的图片必须要属于当前用户。pic_path和image只需要传入一个,如果两个都传，默认选择pic_path</desc>
</param>
<param>
<name>post_fee</name>
<type>Price</type>
<required>optional</required>
<desc>平邮费用。取值范围:0.01-999.00;精确到2位小数;单位:元。如:5.07，表示:5元7分. 注:post_fee,express_fee,ems_fee需要一起填写</desc>
</param>
<param>
<name>postage_id</name>
<type>Number</type>
<required>optional</required>
<desc>宝贝所属的运费模板ID。取值范围：整数且必须是该卖家的运费模板的ID（可通过taobao.delivery.template.get获得当前会话用户的所有邮费模板）</desc>
</param>
<param>
<name>price</name>
<type>Price</type>
<required>required</required>
<desc>商品价格。取值范围:0-100000000;精确到2位小数;单位:元。如:200.07，表示:200元7分。需要在正确的价格区间内。 
拍卖商品对应的起拍价。</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>optional</required>
<desc>商品所属的产品ID(B商家发布商品需要用)</desc>
</param>
<param>
<name>property_alias</name>
<type>String</type>
<required>optional</required>
<max_length>800</max_length>
<desc>属性值别名。如pid:vid:别名;pid1:vid1:别名1 ，其中：pid是属性id vid是属性值id。总长度不超过800字节&lt;br /&gt; 支持最大长度为：800&lt;br /&gt; 支持的最大列表长度为：800</desc>
</param>
<param>
<name>props</name>
<type>String</type>
<required>optional</required>
<desc>商品属性列表。格式:pid:vid;pid:vid。属性的pid调用taobao.itemprops.get取得，属性值的vid用taobao.itempropvalues.get取得vid。 如果该类目下面没有属性，可以不用填写。如果有属性，必选属性必填，其他非必选属性可以选择不填写.属性不能超过35对。所有属性加起来包括分割符不能超过549字节，单个属性没有限制。 如果有属性是可输入的话，则用字段input_str填入属性的值</desc>
</param>
<param>
<name>scenic_ticket_book_cost</name>
<type>String</type>
<required>optional</required>
<max_value>20</max_value>
<min_value>1</min_value>
<desc>景区门票在选择订金支付时候，需要交的预订费。传入的值是1到20之间的数值，小数点后最多可以保留两位（多余的部分将做四舍五入的处理）。这个数值表示的是预订费的比例，最终的预订费为 scenic_ticket_book_cost乘一口价除以100</desc>
</param>
<param>
<name>scenic_ticket_pay_way</name>
<type>Number</type>
<required>optional</required>
<desc>景区门票类宝贝发布时候，当卖家签订了支付宝代扣协议时候，需要选择支付方式：全额支付和订金支付。当scenic_ticket_pay_way为1时表示全额支付，为2时表示订金支付</desc>
</param>
<param>
<name>sell_point</name>
<type>String</type>
<required>optional</required>
<max_length>150</max_length>
<desc>商品卖点信息，最长150个字符。天猫商家和集市卖家都可用。&lt;br /&gt; 支持最大长度为：150&lt;br /&gt; 支持的最大列表长度为：150</desc>
</param>
<param>
<name>sell_promise</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否承诺退换货服务!虚拟商品无须设置此项!</desc>
</param>
<param>
<name>seller_cids</name>
<type>String</type>
<required>optional</required>
<max_list_size>10</max_list_size>
<desc>商品所属的店铺类目列表。按逗号分隔。结构:",cid1,cid2,...,"，如果店铺类目存在二级类目，必须传入子类目cids。</desc>
</param>
<param>
<name>sku_barcode</name>
<type>String</type>
<required>optional</required>
<desc>sku层面的条形码，多个SKU情况，与SKU价格库存格式类似，用逗号分隔</desc>
</param>
<param>
<name>sku_outer_ids</name>
<type>String</type>
<required>optional</required>
<desc>Sku的外部id串，结构如：1234,1342,… 
sku_properties, sku_quantities, sku_prices, sku_outer_ids在输入数据时要一一对应，如果没有sku_outer_ids也要写上这个参数，入参是","(这个是两个sku的示列，逗号数应该是sku个数减1)；该参数最大长度是512个字节</desc>
</param>
<param>
<name>sku_prices</name>
<type>String</type>
<required>optional</required>
<desc>Sku的价格串，结构如：10.00,5.00,… 精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</param>
<param>
<name>sku_properties</name>
<type>String</type>
<required>optional</required>
<desc>更新的Sku的属性串，调用taobao.itemprops.get获取类目属性，如果属性是销售属性，再用taobao.itempropvalues.get取得vid。格式:一个SKU的pid1:vid;pid2:vid,多个sku之间属性用逗号分隔。该字段内的销售属性（自定义的除外）也需要在props字段填写。sku的销售属性需要一同选取，如:颜色，尺寸。如果新增商品包含了sku，则此字段一定要传入。这个字段的长度要控制在512个字节以内。
如果有自定义销售属性，则格式为pid:vid;pid2:vid2;$pText:vText , 其中$pText:vText为自定义属性。限制：其中$pText的’$’前缀不能少，且pText和vText文本中不可以存在冒号:和分号;以及逗号，</desc>
</param>
<param>
<name>sku_quantities</name>
<type>String</type>
<required>optional</required>
<desc>Sku的数量串，结构如：num1,num2,num3 如：2,3</desc>
</param>
<param>
<name>sku_spec_ids</name>
<type>String</type>
<required>optional</required>
<desc>此参数暂时不起作用</desc>
</param>
<param>
<name>stuff_status</name>
<type>String</type>
<required>required</required>
<desc>新旧程度。可选值：new(新)，second(二手)，unused(闲置)。B商家不能发布二手商品。 
如果是二手商品，特定类目下属性里面必填新旧成色属性</desc>
</param>
<param>
<name>sub_stock</name>
<type>Number</type>
<required>optional</required>
<desc>商品是否支持拍下减库存:1支持;2取消支持(付款减库存);0(默认)不更改
集市卖家默认拍下减库存;
商城卖家默认付款减库存</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>required</required>
<max_length>120</max_length>
<desc>宝贝标题。不能超过30字符，受违禁词控制。天猫图书管控类目最大允许120字符；&lt;br /&gt; 支持最大长度为：120&lt;br /&gt; 支持的最大列表长度为：120</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>required</required>
<desc>发布类型。可选值:fixed(一口价),auction(拍卖)。B商家不能发布拍卖商品，而且拍卖商品是没有SKU的。 
拍卖商品发布时需要附加拍卖商品信息：拍卖类型(paimai_info.mode，拍卖类型包括三种：增价拍[1]，荷兰拍[2]以及降价拍[3])，商品数量(num)，起拍价(price)，价格幅度(increament)，保证金(paimai_info.deposit)。另外拍卖商品支持自定义销售周期，通过paimai_info.valid_hour和paimai_info.valid_minute来指定。对于降价拍来说需要设置降价周期(paimai_info.interval)和拍卖保留价(paimai_info.reserve)。 
注意：通过taobao.item.get接口获取拍卖信息时，会返回除了valid_hour和valid_minute之外的所有拍卖信息。</desc>
</param>
<param>
<name>valid_thru</name>
<type>Number</type>
<required>optional</required>
<desc>有效期。可选值:7,14;单位:天;默认值:14</desc>
</param>
<param>
<name>weight</name>
<type>Number</type>
<required>optional</required>
<desc>商品的重量(商超卖家专用字段)</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>商品结构,仅有numIid和created返回</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.anchor.get</name>
<desc>根据类目id和宝贝描述规范化打标类型获取该类目可用的宝贝描述模块中的锚点</desc>
<request>
<param>
<name>cat_id</name>
<type>Number</type>
<required>required</required>
<desc>对应类目编号</desc>
</param>
<param>
<name>type</name>
<type>Number</type>
<required>required</required>
<max_value>1</max_value>
<min_value>-1</min_value>
<desc>宝贝模板类型是人工打标还是自动打标：人工打标为1，自动打标为0.人工和自动打标为-1.&lt;br /&gt; 支持最大值为：1&lt;br /&gt; 支持最小值为：-1</desc>
</param>
</request>
<response>
<param>
<name>anchor_modules</name>
<type>IdsModule</type>
<level>Object Array</level>
<desc>宝贝描述规范化可使用打标模块的锚点信息</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>返回的宝贝描述模板结果数目</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.barcode.update</name>
<desc>通过该接口，将商品以及SKU上得条形码信息补全</desc>
<request>
<param>
<name>item_barcode</name>
<type>String</type>
<required>optional</required>
<desc>商品条形码，如果不用更新，可选择不填</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>被更新商品的ID</desc>
</param>
<param>
<name>sku_barcodes</name>
<type>String</type>
<required>optional</required>
<desc>SKU维度的条形码，和sku_ids字段一一对应，中间以英文逗号分隔</desc>
</param>
<param>
<name>sku_ids</name>
<type>String</type>
<required>optional</required>
<desc>被更新SKU的ID列表，中间以英文逗号进行分隔。如果没有SKU或者不需要更新SKU的条形码，不需要设置</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>商品结构里的num_iid，modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.cspu.move</name>
<desc>ISV传入商品和sku与cspu的映射信息，套餐对应sku的映射信息，自动完成达尔文老数据的挂接，返回商品信息</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>商品id，必填</desc>
</param>
<param>
<name>sku_cspu_mapping</name>
<type>String</type>
<required>optional</required>
<desc>如果商品存在sku信息，必须输入sku和cspu的映射关系，可以支持多个skuID对应一个cspuID。“-1”代替删除sku。反之不能填写</desc>
</param>
<param>
<name>sku_mealproperty_mapping</name>
<type>String</type>
<required>optional</required>
<desc>商品有SKU信息并且类目配置了营销属性（如套餐），则必须填写sku和套餐的映射关系。并且sku套餐信息和sku_cspu_mapping传入的sku_id信息保持一致。反之，不需要填写，</desc>
</param>
<param>
<name>spu_id</name>
<type>Number</type>
<required>optional</required>
<desc>商品需要挂接的目产品ID，如果不填默认不修改产品ID,即商品本身对应的产品ID</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>商品结构里的num_iid，modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.delete</name>
<desc>删除单条商品</desc>
<request>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>商品数字ID，该参数必须&lt;br /&gt; 支持最小值为：0</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>被删除商品的相关信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.get</name>
<desc>获取单个商品的详细信息  
卖家未登录时只能获得这个商品的公开数据，卖家登录后可以获取商品的所有数据</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需要返回的商品对象字段，如title,price,desc_modules等。可选值：Item商品结构体中所有字段均可返回；多个字段用“,”分隔。&lt;br&gt;新增返回字段：item_weight(商品的重量，格式为数字，包含小数)、item_size(商品的体积，格式为数字，包含小数)、change_prop（商品基础色数据）</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>special</required>
<min_value>1</min_value>
<desc>商品数字ID&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>track_iid</name>
<type>String</type>
<required>special</required>
<desc>商品数字ID(带有跟踪效果)</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>获取的商品 具体字段根据权限和设定的fields决定</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.img.delete</name>
<desc>删除itemimg_id 所指定的商品图片  
传入的num_iid所对应的商品必须属于当前会话的用户  
itemimg_id对应的图片需要属于num_iid对应的商品</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>required</required>
<desc>商品图片ID</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>商品数字ID，必选&lt;br /&gt; 支持最小值为：0</desc>
</param>
</request>
<response>
<param>
<name>item_img</name>
<type>ItemImg</type>
<level>Object</level>
<desc>商品图片结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.img.upload</name>
<desc>添加一张商品图片到num_iid指定的商品中  
传入的num_iid所对应的商品必须属于当前会话的用户  
如果更新图片需要设置itemimg_id，且该itemimg_id的图片记录需要属于传入的num_iid对应的商品。如果新增图片则不用设置  
商品图片有数量和大小上的限制，根据卖家享有的服务（如：卖家订购了多图服务等），商品图片数量限制不同。</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>optional</required>
<desc>商品图片id(如果是更新图片，则需要传该参数)</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>optional</required>
<max_length>1048576</max_length>
<desc>商品图片内容类型:JPG,GIF;最大:500KB 。支持的文件类型：gif,jpg,jpeg,png&lt;br /&gt; 支持的文件类型为：gif,jpg,jpeg,png,bmp&lt;br /&gt; 支持的最大列表长度为：1048576</desc>
</param>
<param>
<name>is_major</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否将该图片设为主图,可选值:true,false;默认值:false(非主图)</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>商品数字ID，该参数必须&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>position</name>
<type>Number</type>
<required>optional</required>
<desc>图片序号</desc>
</param>
</request>
<response>
<param>
<name>item_img</name>
<type>ItemImg</type>
<level>Object</level>
<desc>商品图片结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.joint.img</name>
<desc>* 关联一张商品图片到num_iid指定的商品中 
    * 传入的num_iid所对应的商品必须属于当前会话的用户 
    * 商品图片关联在卖家身份和图片来源上的限制，卖家要是B卖家或订购了多图服务才能关联图片，并且图片要来自于卖家自己的图片空间才行 
    * 商品图片数量有限制。不管是上传的图片还是关联的图片，他们的总数不能超过一定限额</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>optional</required>
<desc>商品图片id(如果是更新图片，则需要传该参数)</desc>
</param>
<param>
<name>is_major</name>
<type>Boolean</type>
<required>optional</required>
<desc>上传的图片是否关联为商品主图（如果需更新主图，则需要传人true）</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>商品数字ID，必选&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>pic_path</name>
<type>String</type>
<required>required</required>
<desc>图片URL,图片空间图片的相对地址</desc>
</param>
<param>
<name>position</name>
<type>Number</type>
<required>optional</required>
<desc>图片序号</desc>
</param>
</request>
<response>
<param>
<name>item_img</name>
<type>ItemImg</type>
<level>Object</level>
<desc>商品图片信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.joint.propimg</name>
<desc>* 关联一张商品属性图片到num_iid指定的商品中 
    * 传入的num_iid所对应的商品必须属于当前会话的用户 
    * 图片的属性必须要是颜色的属性，这个在前台显示的时候需要和sku进行关联的 
    * 商品图片关联在卖家身份和图片来源上的限制，卖家要是B卖家或订购了多图服务才能关联图片，并且图片要来自于卖家自己的图片空间才行 
    * 商品图片数量有限制。不管是上传的图片还是关联的图片，他们的总数不能超过一定限额，最多不能超过24张（每个颜色属性都有一张）</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>optional</required>
<desc>属性图片ID。如果是新增不需要填写</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>商品数字ID，必选&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>pic_path</name>
<type>String</type>
<required>required</required>
<desc>图片地址(传入图片相对地址即可,即不需包含 http://img02.taobao.net/bao/uploaded )</desc>
</param>
<param>
<name>position</name>
<type>Number</type>
<required>optional</required>
<desc>图片序号</desc>
</param>
<param>
<name>properties</name>
<type>String</type>
<required>required</required>
<desc>属性列表。调用taobao.itemprops.get获取，属性必须是颜色属性，格式:pid:vid。</desc>
</param>
</request>
<response>
<param>
<name>prop_img</name>
<type>PropImg</type>
<level>Object</level>
<desc>属性图片对象信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.price.update</name>
<desc>更新商品价格</desc>
<request>
<param>
<name>after_sale_id</name>
<type>Number</type>
<required>optional</required>
<desc>售后服务说明模板id</desc>
</param>
<param>
<name>approve_status</name>
<type>String</type>
<required>optional</required>
<desc>商品上传后的状态。可选值:onsale（出售中）,instock（库中），如果同时更新商品状态为出售中及list_time为将来的时间，则商品还是处于定时上架的状态, 此时item.is_timing为true</desc>
</param>
<param>
<name>auction_point</name>
<type>Number</type>
<required>optional</required>
<desc>商品的积分返点比例。如：5 表示返点比例0.5%. 注意：返点比例必须是&gt;0的整数，而且最大是90,即为9%.B商家在发布非虚拟商品时，返点必须是 5的倍数，即0.5%的倍数。其它是1的倍数，即0.1%的倍数。无名良品商家发布商品时，复用该字段记录积分宝返点比例，返点必须是对应类目的返点步长的整数倍，默认是5，即0.5%。注意此时该字段值依旧必须是&gt;0的整数，注意此时该字段值依旧必须是&gt;0的整数，最高值不超过500，即50%</desc>
</param>
<param>
<name>auto_fill</name>
<type>String</type>
<required>optional</required>
<desc>代充商品类型。只有少数类目下的商品可以标记上此字段，具体哪些类目可以上传可以通过taobao.itemcat.features.get获得。在代充商品的类目下，不传表示不标记商品类型（交易搜索中就不能通过标记搜到相关的交易了）。可选类型：  
no_mark(不做类型标记)  
time_card(点卡软件代充)  
fee_card(话费软件代充)</desc>
</param>
<param>
<name>cid</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>叶子类目id&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>cod_postage_id</name>
<type>Number</type>
<required>optional</required>
<desc>货到付款运费模板ID</desc>
</param>
<param>
<name>desc</name>
<type>String</type>
<required>optional</required>
<max_length>200000</max_length>
<desc>商品描述. 字数要大于5个字符，小于25000个字符 ，受违禁词控制&lt;br /&gt; 支持最大长度为：200000&lt;br /&gt; 支持的最大列表长度为：200000</desc>
</param>
<param>
<name>ems_fee</name>
<type>Price</type>
<required>optional</required>
<desc>ems费用。取值范围:0.01-999.00;精确到2位小数;单位:元。如:25.07，表示:25元7分</desc>
</param>
<param>
<name>express_fee</name>
<type>Price</type>
<required>optional</required>
<desc>快递费用。取值范围:0.01-999.00;精确到2位小数;单位:元。如:15.07，表示:15元7分</desc>
</param>
<param>
<name>freight_payer</name>
<type>String</type>
<required>optional</required>
<desc>运费承担方式。运费承担方式。可选值:seller（卖家承担）,buyer(买家承担);</desc>
</param>
<param>
<name>has_discount</name>
<type>Boolean</type>
<required>optional</required>
<desc>支持会员打折。可选值:true,false;</desc>
</param>
<param>
<name>has_invoice</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有发票。可选值:true,false (商城卖家此字段必须为true)</desc>
</param>
<param>
<name>has_showcase</name>
<type>Boolean</type>
<required>optional</required>
<desc>橱窗推荐。可选值:true,false;</desc>
</param>
<param>
<name>has_warranty</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有保修。可选值:true,false;</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>optional</required>
<max_length>524288</max_length>
<desc>商品图片。类型:JPG,GIF;最大长度:500k&lt;br /&gt; 支持的文件类型为：gif,jpg,jpeg,png&lt;br /&gt; 支持的最大列表长度为：524288</desc>
</param>
<param>
<name>increment</name>
<type>Price</type>
<required>optional</required>
<desc>加价幅度 如果为0，代表系统代理幅度</desc>
</param>
<param>
<name>input_pids</name>
<type>String</type>
<required>optional</required>
<desc>用户自行输入的类目属性ID串，结构："pid1,pid2,pid3"，如："20000"（表示品牌） 注：通常一个类目下用户可输入的关键属性不超过1个。</desc>
</param>
<param>
<name>input_str</name>
<type>String</type>
<required>optional</required>
<desc>用户自行输入的子属性名和属性值，结构:"父属性值;一级子属性名;一级子属性值;二级子属性名;自定义输入值,....",如：“耐克;耐克系列;科比系列;科比系列;2K5,Nike乔丹鞋;乔丹系列;乔丹鞋系列;乔丹鞋系列;json5”，多个自定义属性用','分割，input_str需要与input_pids一一对应，注：通常一个类目下用户可输入的关键属性不超过1个。所有属性别名加起来不能超过3999字节。此处不可以使用“其他”、“其它”和“其她”这三个词。</desc>
</param>
<param>
<name>is_3D</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否是3D</desc>
</param>
<param>
<name>is_ex</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否在外店显示</desc>
</param>
<param>
<name>is_lightning_consignment</name>
<type>Boolean</type>
<required>optional</required>
<desc>实物闪电发货。注意：在售的闪电发货产品不允许取消闪电发货，需要先下架商品才能取消闪电发货标记</desc>
</param>
<param>
<name>is_replace_sku</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否替换sku</desc>
</param>
<param>
<name>is_taobao</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否在淘宝上显示</desc>
</param>
<param>
<name>is_xinpin</name>
<type>Boolean</type>
<required>optional</required>
<desc>商品是否为新品。只有在当前类目开通新品,并且当前用户拥有该类目下发布新品权限时才能设置is_xinpin为true，否则设置true后会返回错误码:isv.invalid-permission:xinpin。同时只有一口价全新的宝贝才能设置为新品，否则会返回错误码：isv.invalid-parameter:xinpin。不设置参数就保持原有值。</desc>
</param>
<param>
<name>lang</name>
<type>String</type>
<required>optional</required>
<desc>商品文字的版本，繁体传入”zh_HK”，简体传入”zh_CN”</desc>
</param>
<param>
<name>list_time</name>
<type>Date</type>
<required>optional</required>
<desc>上架时间。不论是更新架下的商品还是出售中的商品，如果这个字段小于当前时间则直接上架商品，并且上架的时间为更新商品的时间，此时item.is_timing为false，如果大于当前时间则宝贝会下架进入定时上架的宝贝中。</desc>
</param>
<param>
<name>location.city</name>
<type>String</type>
<required>optional</required>
<desc>所在地城市。如杭州 具体可以下载http://dl.open.taobao.com/sdk/商品城市列表.rar 取到</desc>
</param>
<param>
<name>location.state</name>
<type>String</type>
<required>optional</required>
<desc>所在地省份。如浙江 具体可以下载http://dl.open.taobao.com/sdk/商品城市列表.rar 取到</desc>
</param>
<param>
<name>num</name>
<type>Number</type>
<required>optional</required>
<max_value>999999</max_value>
<min_value>0</min_value>
<desc>商品数量，取值范围:0-999999的整数。且需要等于Sku所有数量的和&lt;br /&gt; 支持最大值为：999999&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>1</min_value>
<desc>商品数字ID，该参数必须&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>商家编码</desc>
</param>
<param>
<name>pic_path</name>
<type>String</type>
<required>optional</required>
<desc>商品主图需要关联的图片空间的相对url。这个url所对应的图片必须要属于当前用户。pic_path和image只需要传入一个,如果两个都传，默认选择pic_path</desc>
</param>
<param>
<name>post_fee</name>
<type>Price</type>
<required>optional</required>
<desc>平邮费用。取值范围:0.01-999.00;精确到2位小数;单位:元。如:5.07，表示:5元7分, 注:post_fee,express_fee,ems_fee需一起填写</desc>
</param>
<param>
<name>postage_id</name>
<type>Number</type>
<required>optional</required>
<desc>宝贝所属的运费模板ID。取值范围：整数且必须是该卖家的运费模板的ID（可通过taobao.postages.get获得当前会话用户的所有邮费模板）</desc>
</param>
<param>
<name>price</name>
<type>Price</type>
<required>optional</required>
<desc>商品价格。取值范围:0-100000000;精确到2位小数;单位:元。如:200.07，表示:200元7分。需要在正确的价格区间内。</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>optional</required>
<desc>商品所属的产品ID(B商家发布商品需要用)</desc>
</param>
<param>
<name>property_alias</name>
<type>String</type>
<required>optional</required>
<desc>属性值别名。如pid:vid:别名;pid1:vid1:别名1， pid:属性id vid:值id。总长度不超过512字节</desc>
</param>
<param>
<name>props</name>
<type>String</type>
<required>optional</required>
<desc>商品属性列表。格式:pid:vid;pid:vid。属性的pid调用taobao.itemprops.get取得，属性值的vid用taobao.itempropvalues.get取得vid。 如果该类目下面没有属性，可以不用填写。如果有属性，必选属性必填，其他非必选属性可以选择不填写.属性不能超过35对。所有属性加起来包括分割符不能超过549字节，单个属性没有限制。 如果有属性是可输入的话，则用字段input_str填入属性的值。</desc>
</param>
<param>
<name>sell_promise</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否承诺退换货服务!虚拟商品无须设置此项!</desc>
</param>
<param>
<name>seller_cids</name>
<type>String</type>
<required>optional</required>
<max_list_size>10</max_list_size>
<desc>重新关联商品与店铺类目，结构:",cid1,cid2,...,"，如果店铺类目存在二级类目，必须传入子类目cids。</desc>
</param>
<param>
<name>sku_outer_ids</name>
<type>String</type>
<required>optional</required>
<desc>Sku的外部id串，结构如：1234,1342,… sku_properties, sku_quantities, sku_prices, sku_outer_ids在输入数据时要一一对应，如果没有sku_outer_ids也要写上这个参数，入参是","(这个是两个sku的示列，逗号数应该是sku个数减1)；该参数最大长度是512个字节</desc>
</param>
<param>
<name>sku_prices</name>
<type>String</type>
<required>optional</required>
<desc>更新的Sku的价格串，结构如：10.00,5.00,… 精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</param>
<param>
<name>sku_properties</name>
<type>String</type>
<required>optional</required>
<desc>更新的Sku的属性串，调用taobao.itemprops.get获取类目属性，如果属性是销售属性，再用taobao.itempropvalues.get取得vid。格式:pid:vid;pid:vid。该字段内的销售属性也需要在props字段填写 。如果更新时有对Sku进行操作，则Sku的properties一定要传入。</desc>
</param>
<param>
<name>sku_quantities</name>
<type>String</type>
<required>optional</required>
<desc>更新的Sku的数量串，结构如：num1,num2,num3 如:2,3,4</desc>
</param>
<param>
<name>stuff_status</name>
<type>String</type>
<required>optional</required>
<desc>商品新旧程度。可选值:new（全新）,unused（闲置）,second（二手）。</desc>
</param>
<param>
<name>sub_stock</name>
<type>Number</type>
<required>optional</required>
<desc>商品是否支持拍下减库存:1支持;2取消支持(付款减库存);0(默认)不更改 集市卖家默认拍下减库存; 商城卖家默认付款减库存</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>optional</required>
<max_length>60</max_length>
<desc>宝贝标题. 不能超过60字符,受违禁词控制&lt;br /&gt; 支持最大长度为：60&lt;br /&gt; 支持的最大列表长度为：60</desc>
</param>
<param>
<name>valid_thru</name>
<type>Number</type>
<required>optional</required>
<desc>有效期。可选值:7,14;单位:天;</desc>
</param>
<param>
<name>weight</name>
<type>Number</type>
<required>optional</required>
<desc>商品的重量(商超卖家专用字段)</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>商品结构里的num_iid，modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.propimg.delete</name>
<desc>删除propimg_id 所指定的商品属性图片  
传入的num_iid所对应的商品必须属于当前会话的用户  
propimg_id对应的属性图片需要属于num_iid对应的商品</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>required</required>
<desc>商品属性图片ID</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>商品数字ID，必选&lt;br /&gt; 支持最小值为：0</desc>
</param>
</request>
<response>
<param>
<name>prop_img</name>
<type>PropImg</type>
<level>Object</level>
<desc>属性图片结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.propimg.upload</name>
<desc>添加一张商品属性图片到num_iid指定的商品中  
传入的num_iid所对应的商品必须属于当前会话的用户  
图片的属性必须要是颜色的属性，这个在前台显示的时候需要和sku进行关联的  
商品属性图片只有享有服务的卖家（如：淘宝大卖家、订购了淘宝多图服务的卖家）才能上传  
商品属性图片有数量和大小上的限制，最多不能超过24张（每个颜色属性都有一张）。</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>optional</required>
<desc>属性图片ID。如果是新增不需要填写</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>optional</required>
<max_length>1048576</max_length>
<desc>属性图片内容。类型:JPG,GIF;最大长度:500K;图片大小不超过:1M&lt;br /&gt; 支持的文件类型为：gif,jpg,jpeg,png,bmp&lt;br /&gt; 支持的最大列表长度为：1048576</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>商品数字ID，必选&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>position</name>
<type>Number</type>
<required>optional</required>
<desc>图片位置</desc>
</param>
<param>
<name>properties</name>
<type>String</type>
<required>required</required>
<desc>属性列表。调用taobao.itemprops.get获取类目属性，属性必须是颜色属性，再用taobao.itempropvalues.get取得vid。格式:pid:vid。</desc>
</param>
</request>
<response>
<param>
<name>prop_img</name>
<type>PropImg</type>
<level>Object</level>
<desc>PropImg属性图片结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.quantity.update</name>
<desc>提供按照全量或增量形式修改宝贝/SKU库存的功能</desc>
<request>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<desc>商品数字ID，必填参数</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>SKU的商家编码，可选参数。如果不填则默认修改宝贝的库存，如果填了则按照商家编码搜索出对应的SKU并修改库存。当sku_id和本字段都填写时以sku_id为准搜索对应SKU</desc>
</param>
<param>
<name>quantity</name>
<type>Number</type>
<required>required</required>
<desc>库存修改值，必选。当全量更新库存时，quantity必须为大于等于0的正整数；当增量更新库存时，quantity为整数，可小于等于0。若增量更新时传入的库存为负数，则负数与实际库存之和不能小于0。比如当前实际库存为1，传入增量更新quantity=-1，库存改为0</desc>
</param>
<param>
<name>sku_id</name>
<type>Number</type>
<required>optional</required>
<desc>要操作的SKU的数字ID，可选。如果不填默认修改宝贝的库存，如果填上则修改该SKU的库存</desc>
</param>
<param>
<name>type</name>
<type>Number</type>
<required>optional</required>
<desc>库存更新方式，可选。1为全量更新，2为增量更新。如果不填，默认为全量更新</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>iid、numIid、num和modified，skus中每个sku的skuId、quantity和modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.recommend.add</name>
<desc>将当前用户指定商品设置为橱窗推荐状态 
橱窗推荐需要用户有剩余橱窗位才可以顺利执行 
这个Item所属卖家从传入的session中获取，需要session绑定 
需要判断橱窗推荐是否已满，橱窗推荐已满停止调用橱窗推荐接口，2010年1月底开放查询剩余橱窗推荐数后可以按数量橱窗推荐商品</desc>
<request>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>商品数字ID，该参数必须&lt;br /&gt; 支持最小值为：0</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>被推荐的商品的信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.recommend.delete</name>
<desc>取消当前用户指定商品的橱窗推荐状态 
这个Item所属卖家从传入的session中获取，需要session绑定</desc>
<request>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>商品数字ID，该参数必须&lt;br /&gt; 支持最小值为：0</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>被取消橱窗推荐的商品信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.sku.add</name>
<desc>新增一个sku到num_iid指定的商品中  
传入的iid所对应的商品必须属于当前会话的用户</desc>
<request>
<param>
<name>item_price</name>
<type>Price</type>
<required>optional</required>
<desc>sku所属商品的价格。当用户新增sku，使商品价格不属于sku价格之间的时候，用于修改商品的价格，使sku能够添加成功</desc>
</param>
<param>
<name>lang</name>
<type>String</type>
<required>optional</required>
<desc>Sku文字的版本。可选值:zh_HK(繁体),zh_CN(简体);默认值:zh_CN</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>Sku所属商品数字id，可通过 taobao.item.get 获取。必选&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>Sku的商家外部id</desc>
</param>
<param>
<name>price</name>
<type>Price</type>
<required>required</required>
<desc>Sku的销售价格。商品的价格要在商品所有的sku的价格之间。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</param>
<param>
<name>properties</name>
<type>String</type>
<required>required</required>
<desc>Sku属性串。格式:pid:vid;pid:vid,如:1627207:3232483;1630696:3284570,表示:机身颜色:军绿色;手机套餐:一电一充。 
如果包含自定义属性则格式为pid:vid;pid2:vid2;$pText:vText , 其中$pText:vText为自定义属性。限制：其中$pText的‘$’前缀不能少，且pText和vText文本中不可以存在 冒号:和分号;以及逗号，</desc>
</param>
<param>
<name>quantity</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>Sku的库存数量。sku的总数量应该小于等于商品总数量(Item的NUM)。取值范围:大于零的整数&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>spec_id</name>
<type>String</type>
<required>optional</required>
<desc>产品的规格信息</desc>
</param>
</request>
<response>
<param>
<name>sku</name>
<type>Sku</type>
<level>Object</level>
<desc>sku</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.sku.delete</name>
<desc>删除一个sku的数据 
需要删除的sku通过属性properties进行匹配查找</desc>
<request>
<param>
<name>item_num</name>
<type>Number</type>
<required>optional</required>
<desc>sku所属商品的数量,大于0的整数。当用户删除sku，使商品数量不等于sku数量之和时候，用于修改商品的数量，使sku能够删除成功。特别是删除最后一个sku的时候，一定要设置商品数量到正常的值，否则删除失败</desc>
</param>
<param>
<name>item_price</name>
<type>Price</type>
<required>optional</required>
<desc>sku所属商品的价格。当用户删除sku，使商品价格不属于sku价格之间的时候，用于修改商品的价格，使sku能够删除成功</desc>
</param>
<param>
<name>lang</name>
<type>String</type>
<required>optional</required>
<desc>Sku文字的版本。可选值:zh_HK(繁体),zh_CN(简体);默认值:zh_CN</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<desc>Sku所属商品数字id，可通过 taobao.item.get 获取。必选</desc>
</param>
<param>
<name>properties</name>
<type>String</type>
<required>required</required>
<desc>Sku属性串。格式:pid:vid;pid:vid,如: 1627207:3232483;1630696:3284570,表示机身颜色:军绿色;手机套餐:一电一充</desc>
</param>
</request>
<response>
<param>
<name>sku</name>
<type>Sku</type>
<level>Object</level>
<desc>Sku结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.sku.get</name>
<desc>获取sku_id所对应的sku数据  
sku_id对应的sku要属于传入的nick对应的卖家</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表。可选值：Sku结构体中的所有字段；字段之间用“,”分隔。</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>special</required>
<desc>卖家nick(num_iid和nick必传一个)，只传卖家nick时候，该api返回的结果不包含cspu（SKu上的产品规格信息）。</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>special</required>
<min_value>0</min_value>
<desc>商品的数字IID（num_iid和nick必传一个，推荐用num_iid），传商品的数字id返回的结果里包含cspu（SKu上的产品规格信息）。&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>sku_id</name>
<type>Number</type>
<required>required</required>
<desc>Sku的id。可以通过taobao.item.get得到</desc>
</param>
</request>
<response>
<param>
<name>sku</name>
<type>Sku</type>
<level>Object</level>
<desc>Sku</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.sku.price.update</name>
<desc>更新商品SKU的价格</desc>
<request>
<param>
<name>item_price</name>
<type>Price</type>
<required>optional</required>
<desc>sku所属商品的价格。当用户更新sku，使商品价格不属于sku价格之间的时候，用于修改商品的价格，使sku能够更新成功</desc>
</param>
<param>
<name>lang</name>
<type>String</type>
<required>optional</required>
<desc>Sku文字的版本。可选值:zh_HK(繁体),zh_CN(简体);默认值:zh_CN</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>Sku所属商品数字id，可通过 taobao.item.get 获取&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>Sku的商家外部id</desc>
</param>
<param>
<name>price</name>
<type>Price</type>
<required>optional</required>
<desc>Sku的销售价格。精确到2位小数;单位:元。如:200.07，表示:200元7分。修改后的sku价格要保证商品的价格在所有sku价格所形成的价格区间内（例如：商品价格为6元，sku价格有5元、10元两种，如果要修改5元sku的价格，那么修改的范围只能是0-6元之间；如果要修改10元的sku，那么修改的范围只能是6到无穷大的区间中）</desc>
</param>
<param>
<name>properties</name>
<type>String</type>
<required>required</required>
<desc>Sku属性串。格式:pid:vid;pid:vid,如: 1627207:3232483;1630696:3284570,表示机身颜色:军绿色;手机套餐:一电一充</desc>
</param>
<param>
<name>quantity</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>Sku的库存数量。sku的总数量应该小于等于商品总数量(Item的NUM)，sku数量变化后item的总数量也会随着变化。取值范围:大于等于零的整数&lt;br /&gt; 支持最小值为：0</desc>
</param>
</request>
<response>
<param>
<name>sku</name>
<type>Sku</type>
<level>Object</level>
<desc>商品SKU信息（只包含num_iid和modified）</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.sku.update</name>
<desc>*更新一个sku的数据  
*需要更新的sku通过属性properties进行匹配查找  
*商品的数量和价格必须大于等于0  
*sku记录会更新到指定的num_iid对应的商品中  
*num_iid对应的商品必须属于当前的会话用户</desc>
<request>
<param>
<name>item_price</name>
<type>Price</type>
<required>optional</required>
<desc>sku所属商品的价格。当用户更新sku，使商品价格不属于sku价格之间的时候，用于修改商品的价格，使sku能够更新成功</desc>
</param>
<param>
<name>lang</name>
<type>String</type>
<required>optional</required>
<desc>Sku文字的版本。可选值:zh_HK(繁体),zh_CN(简体);默认值:zh_CN</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>Sku所属商品数字id，可通过 taobao.item.get 获取&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>Sku的商家外部id</desc>
</param>
<param>
<name>price</name>
<type>Price</type>
<required>optional</required>
<desc>Sku的销售价格。精确到2位小数;单位:元。如:200.07，表示:200元7分。修改后的sku价格要保证商品的价格在所有sku价格所形成的价格区间内（例如：商品价格为6元，sku价格有5元、10元两种，如果要修改5元sku的价格，那么修改的范围只能是0-6元之间；如果要修改10元的sku，那么修改的范围只能是6到无穷大的区间中）</desc>
</param>
<param>
<name>properties</name>
<type>String</type>
<required>required</required>
<desc>Sku属性串。格式:pid:vid;pid:vid,如: 1627207:3232483;1630696:3284570,表示机身颜色:军绿色;手机套餐:一电一充。 
如果包含自定义属性，则格式为pid:vid;pid2:vid2;$pText:vText , 其中$pText:vText为自定义属性。限制：其中$pText的’$’前缀不能少，且pText和vText文本中不可以存在 冒号:和分号;以及逗号，</desc>
</param>
<param>
<name>quantity</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>Sku的库存数量。sku的总数量应该小于等于商品总数量(Item的NUM)，sku数量变化后item的总数量也会随着变化。取值范围:大于等于零的整数&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>spec_id</name>
<type>String</type>
<required>optional</required>
<desc>产品的规格信息。</desc>
</param>
</request>
<response>
<param>
<name>sku</name>
<type>Sku</type>
<level>Object</level>
<desc>商品Sku</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.skus.get</name>
<desc>* 获取多个商品下的所有sku</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表。可选值：Sku结构体中的所有字段；字段之间用“,”分隔。</desc>
</param>
<param>
<name>num_iids</name>
<type>String</type>
<required>required</required>
<desc>sku所属商品数字id，必选。num_iid个数不能超过40个</desc>
</param>
</request>
<response>
<param>
<name>skus</name>
<type>Sku</type>
<level>Object Array</level>
<desc>Sku列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.templates.get</name>
<desc>查询当前登录用户的店铺的宝贝详情页的模板名称</desc>
<response>
<param>
<name>item_template_list</name>
<type>ItemTemplate</type>
<level>Object Array</level>
<desc>返回宝贝模板对象。包含模板id，模板name，还有模板的类别（0表示外店，1表示内店）</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.update</name>
<desc>根据传入的num_iid更新对应的商品的数据  
传入的num_iid所对应的商品必须属于当前会话的用户  
商品的属性和sku的属性有包含的关系，商品的价格要位于sku的价格区间之中（例如，sku价格有5元、10元两种，那么商品的价格就需要大于等于5元，小于等于10元，否则更新商品会失败）  
商品的类目和商品的价格、sku的价格都有一定的相关性（具体的关系要通过类目属性查询接口获得）  
当关键属性值更新为“其他”的时候，需要输入input_pids和input_str商品才能更新成功。该接口不支持产品属性修改。</desc>
<request>
<param>
<name>after_sale_id</name>
<type>Number</type>
<required>optional</required>
<desc>售后服务说明模板id</desc>
</param>
<param>
<name>approve_status</name>
<type>String</type>
<required>optional</required>
<desc>商品上传后的状态。可选值:onsale（出售中）,instock（库中），如果同时更新商品状态为出售中及list_time为将来的时间，则商品还是处于定时上架的状态, 此时item.is_timing为true</desc>
</param>
<param>
<name>auction_point</name>
<type>Number</type>
<required>optional</required>
<desc>商品的积分返点比例。如：5 表示返点比例0.5%. 注意：返点比例必须是&gt;0的整数，而且最大是90,即为9%.B商家在发布非虚拟商品时，返点必须是 5的倍数，即0.5%的倍数。其它是1的倍数，即0.1%的倍数。无名良品商家发布商品时，复用该字段记录积分宝返点比例，返点必须是对应类目的返点步长的整数倍，默认是5，即0.5%。注意此时该字段值依旧必须是&gt;0的整数，注意此时该字段值依旧必须是&gt;0的整数，最高值不超过500，即50%</desc>
</param>
<param>
<name>auto_fill</name>
<type>String</type>
<required>optional</required>
<desc>代充商品类型。只有少数类目下的商品可以标记上此字段，具体哪些类目可以上传可以通过taobao.itemcat.features.get获得。在代充商品的类目下，不传表示不标记商品类型（交易搜索中就不能通过标记搜到相关的交易了）。可选类型：  
no_mark(不做类型标记)  
time_card(点卡软件代充)  
fee_card(话费软件代充)</desc>
</param>
<param>
<name>barcode</name>
<type>String</type>
<required>optional</required>
<desc>商品条形码</desc>
</param>
<param>
<name>change_prop</name>
<type>String</type>
<required>optional</required>
<desc>商品基础色，数据格式为：pid:vid:rvid1,rvid2,rvid3;pid:vid:rvid1</desc>
</param>
<param>
<name>chaoshi_extends_info</name>
<type>String</type>
<required>optional</required>
<desc>天猫超市扩展字段，天猫超市专用</desc>
</param>
<param>
<name>cid</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>叶子类目id&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>cod_postage_id</name>
<type>Number</type>
<required>optional</required>
<desc>货到付款运费模板ID 
该字段已经废弃，货到付款模板已经集成到运费模板中。</desc>
</param>
<param>
<name>desc</name>
<type>String</type>
<required>optional</required>
<max_length>200000</max_length>
<desc>商品描述. 字数要大于5个字符，小于25000个字符 ，受违禁词控制&lt;br /&gt; 支持最大长度为：200000&lt;br /&gt; 支持的最大列表长度为：200000</desc>
</param>
<param>
<name>desc_modules</name>
<type>String</type>
<required>optional</required>
<desc>商品描述模块化，模块列表；数据结构可参考Item_Desc_Module 。详细使用说明：http://open.taobao.com/support/question_detail.htm?spm=0.0.0.0.cRcj3S&amp;id=147498 ；</desc>
</param>
<param>
<name>empty_fields</name>
<type>String</type>
<required>optional</required>
<desc>支持宝贝信息的删除,如需删除对应的食品安全信息中的储藏方法、保质期， 则应该设置此参数的值为：food_security.plan_storage,food_security.period; 各个参数的名称之间用【,】分割, 如果对应的参数有设置过值，即使在这个列表中，也不会被删除; 目前支持此功能的宝贝信息如下：食品安全信息所有字段、电子交易凭证字段（locality_life，locality_life.verification，locality_life.refund_ratio，locality_life.network_id ，locality_life.onsale_auto_refund_ratio）。支持对全球购宝贝信息的清除（字符串中包含global_stock）</desc>
</param>
<param>
<name>ems_fee</name>
<type>Price</type>
<required>optional</required>
<desc>ems费用。取值范围:0.01-999.00;精确到2位小数;单位:元。如:25.07，表示:25元7分</desc>
</param>
<param>
<name>express_fee</name>
<type>Price</type>
<required>optional</required>
<desc>快递费用。取值范围:0.01-999.00;精确到2位小数;单位:元。如:15.07，表示:15元7分</desc>
</param>
<param>
<name>food_security.contact</name>
<type>String</type>
<required>optional</required>
<desc>厂家联系方式</desc>
</param>
<param>
<name>food_security.design_code</name>
<type>String</type>
<required>optional</required>
<desc>产品标准号</desc>
</param>
<param>
<name>food_security.factory</name>
<type>String</type>
<required>optional</required>
<desc>厂名</desc>
</param>
<param>
<name>food_security.factory_site</name>
<type>String</type>
<required>optional</required>
<desc>厂址</desc>
</param>
<param>
<name>food_security.food_additive</name>
<type>String</type>
<required>optional</required>
<desc>食品添加剂</desc>
</param>
<param>
<name>food_security.health_product_no</name>
<type>String</type>
<required>optional</required>
<desc>健字号，保健品/膳食营养补充剂 这个类目下特有的信息，此类目下无需填写生产许可证编号（QS），如果填写了生产许可证编号（QS）将被忽略不保存；保存宝贝时，标题前会自动加上健字号产品名称一起作为宝贝标题；</desc>
</param>
<param>
<name>food_security.mix</name>
<type>String</type>
<required>optional</required>
<desc>配料表</desc>
</param>
<param>
<name>food_security.period</name>
<type>String</type>
<required>optional</required>
<desc>保质期</desc>
</param>
<param>
<name>food_security.plan_storage</name>
<type>String</type>
<required>optional</required>
<desc>储藏方法</desc>
</param>
<param>
<name>food_security.prd_license_no</name>
<type>String</type>
<required>optional</required>
<desc>生产许可证号</desc>
</param>
<param>
<name>food_security.product_date_end</name>
<type>String</type>
<required>optional</required>
<desc>生产结束日期,格式必须为yyyy-MM-dd</desc>
</param>
<param>
<name>food_security.product_date_start</name>
<type>String</type>
<required>optional</required>
<desc>生产开始日期，格式必须为yyyy-MM-dd</desc>
</param>
<param>
<name>food_security.stock_date_end</name>
<type>String</type>
<required>optional</required>
<desc>进货结束日期，要在生产日期之后，格式必须为yyyy-MM-dd</desc>
</param>
<param>
<name>food_security.stock_date_start</name>
<type>String</type>
<required>optional</required>
<desc>进货开始日期，要在生产日期之后，格式必须为yyyy-MM-dd</desc>
</param>
<param>
<name>food_security.supplier</name>
<type>String</type>
<required>optional</required>
<desc>供货商</desc>
</param>
<param>
<name>freight_payer</name>
<type>String</type>
<required>optional</required>
<desc>运费承担方式。运费承担方式。可选值:seller（卖家承担）,buyer(买家承担);</desc>
</param>
<param>
<name>global_stock_country</name>
<type>String</type>
<required>optional</required>
<max_length>30</max_length>
<desc>全球购商品采购地（地区/国家）,默认值只在全球购商品采购地（库存类型选择情况生效），地区国家值为（美国, 香港, 日本, 英国, 新西兰, 德国, 韩国, 荷兰, 澳洲, 法国, 意大利, 台湾, 澳门, 加拿大, 瑞士, 西班牙, 泰国, 新加坡, 马来西亚, 菲律宾, 其他）&lt;br /&gt; 支持最大长度为：30&lt;br /&gt; 支持的最大列表长度为：30</desc>
</param>
<param>
<name>global_stock_type</name>
<type>String</type>
<required>optional</required>
<desc>全球购商品采购地（库存类型） 
全球购商品有两种库存类型：现货和代购 参数值为1时代表现货，值为2时代表代购。注意：使用时请与 全球购商品采购地（地区/国家）配合使用</desc>
</param>
<param>
<name>has_discount</name>
<type>Boolean</type>
<required>optional</required>
<desc>支持会员打折。可选值:true,false;</desc>
</param>
<param>
<name>has_invoice</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有发票。可选值:true,false (商城卖家此字段必须为true)</desc>
</param>
<param>
<name>has_showcase</name>
<type>Boolean</type>
<required>optional</required>
<desc>橱窗推荐。可选值:true,false;</desc>
</param>
<param>
<name>has_warranty</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有保修。可选值:true,false;</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>optional</required>
<max_length>524288</max_length>
<desc>商品图片。类型:JPG,GIF;最大长度:500k&lt;br /&gt; 支持的文件类型为：gif,jpg,jpeg,png&lt;br /&gt; 支持的最大列表长度为：524288</desc>
</param>
<param>
<name>increment</name>
<type>Price</type>
<required>optional</required>
<desc>加价(降价)幅度。如果为0，代表系统代理幅度。对于增价拍和荷兰拍来说是加价幅度，对于降价拍来说是降价幅度。</desc>
</param>
<param>
<name>input_pids</name>
<type>String</type>
<required>optional</required>
<desc>用户自行输入的类目属性ID串，结构："pid1,pid2,pid3"，如："20000"（表示品牌） 注：通常一个类目下用户可输入的关键属性不超过1个。</desc>
</param>
<param>
<name>input_str</name>
<type>String</type>
<required>optional</required>
<desc>用户自行输入的子属性名和属性值，结构:"父属性值;一级子属性名;一级子属性值;二级子属性名;自定义输入值,....",如：“耐克;耐克系列;科比系列;科比系列;2K5,Nike乔丹鞋;乔丹系列;乔丹鞋系列;乔丹鞋系列;json5”，多个自定义属性用','分割，input_str需要与input_pids一一对应，注：通常一个类目下用户可输入的关键属性不超过1个。所有属性别名加起来不能超过3999字节。此处不可以使用“其他”、“其它”和“其她”这三个词。</desc>
</param>
<param>
<name>is_3D</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否是3D</desc>
</param>
<param>
<name>is_ex</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否在外店显示</desc>
</param>
<param>
<name>is_lightning_consignment</name>
<type>Boolean</type>
<required>optional</required>
<desc>实物闪电发货。注意：在售的闪电发货产品不允许取消闪电发货，需要先下架商品才能取消闪电发货标记</desc>
</param>
<param>
<name>is_offline</name>
<type>String</type>
<required>optional</required>
<desc>是否是线下商品。 1：线上商品（默认值）； 2：线上或线下商品； 3：线下商品。</desc>
</param>
<param>
<name>is_replace_sku</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否替换sku</desc>
</param>
<param>
<name>is_taobao</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否在淘宝上显示（如果传FALSE，则在淘宝主站无法显示该商品）</desc>
</param>
<param>
<name>is_xinpin</name>
<type>Boolean</type>
<required>optional</required>
<desc>商品是否为新品。只有在当前类目开通新品,并且当前用户拥有该类目下发布新品权限时才能设置is_xinpin为true，否则设置true后会返回错误码:isv.invalid-permission:xinpin。同时只有一口价全新的宝贝才能设置为新品，否则会返回错误码：isv.invalid-parameter:xinpin。不设置参数就保持原有值。</desc>
</param>
<param>
<name>item_size</name>
<type>String</type>
<required>optional</required>
<desc>表示商品的体积，如果需要使用按体积计费的运费模板，一定要设置这个值。该值的单位为立方米（m3），如果是其他单位，请转换成成立方米。 
该值支持两种格式的设置：格式1：bulk:3,单位为立方米(m3),表示直接设置为商品的体积。格式2：length:10;breadth:10;height:10，单位为米（m）。体积和长宽高都支持小数类型。 
在传入体积或长宽高时候，不能带单位。体积的单位默认为立方米（m3），长宽高的单位默认为米(m) 
在编辑的时候，如果需要删除体积属性，请设置该值为0，如bulk:0</desc>
</param>
<param>
<name>item_weight</name>
<type>String</type>
<required>optional</required>
<desc>商品的重量，用于按重量计费的运费模板。注意：单位为kg。 只能传入数值类型（包含小数），不能带单位，单位默认为kg。 在编辑时候，如果需要在商品里删除重量的信息，就需要将值设置为0</desc>
</param>
<param>
<name>lang</name>
<type>String</type>
<required>optional</required>
<desc>商品文字的版本，繁体传入”zh_HK”，简体传入”zh_CN”</desc>
</param>
<param>
<name>list_time</name>
<type>Date</type>
<required>optional</required>
<desc>上架时间。大于当前时间则宝贝会下架进入定时上架的宝贝中。</desc>
</param>
<param>
<name>locality_life.choose_logis</name>
<type>String</type>
<required>optional</required>
<desc>编辑电子凭证宝贝时候表示是否使用邮寄 
0: 代表不使用邮寄； 
1：代表使用邮寄； 
如果不设置这个值，代表不使用邮寄</desc>
</param>
<param>
<name>locality_life.expirydate</name>
<type>String</type>
<required>optional</required>
<desc>本地生活电子交易凭证业务，目前此字段只涉及到的信息为有效期; 
如果有效期为起止日期类型，此值为2012-08-06,2012-08-16 
如果有效期为【购买成功日 至】类型则格式为2012-08-16 
如果有效期为天数类型则格式为15</desc>
</param>
<param>
<name>locality_life.merchant</name>
<type>String</type>
<required>optional</required>
<desc>码商信息，格式为 码商id:nick</desc>
</param>
<param>
<name>locality_life.network_id</name>
<type>String</type>
<required>optional</required>
<desc>网点ID,在参数empty_fields里设置locality_life.network_id可删除网点ID</desc>
</param>
<param>
<name>locality_life.onsale_auto_refund_ratio</name>
<type>Number</type>
<required>optional</required>
<desc>电子凭证售中自动退款比例，百分比%前的数字，介于1-100之间的整数</desc>
</param>
<param>
<name>locality_life.refund_ratio</name>
<type>Number</type>
<required>optional</required>
<desc>退款比例，百分比%前的数字,1-100的正整数值; 在参数empty_fields里设置locality_life.refund_ratio可删除退款比例</desc>
</param>
<param>
<name>locality_life.refundmafee</name>
<type>String</type>
<required>optional</required>
<desc>退款码费承担方。发布电子凭证宝贝的时候会增加“退款码费承担方”配置项，可选填：(1)s（卖家承担） (2)b(买家承担)</desc>
</param>
<param>
<name>locality_life.verification</name>
<type>String</type>
<required>optional</required>
<desc>核销打款,1代表核销打款 0代表非核销打款; 在参数empty_fields里设置locality_life.verification可删除核销打款</desc>
</param>
<param>
<name>location.city</name>
<type>String</type>
<required>optional</required>
<desc>所在地城市。如杭州</desc>
</param>
<param>
<name>location.state</name>
<type>String</type>
<required>optional</required>
<desc>所在地省份。如浙江</desc>
</param>
<param>
<name>newprepay</name>
<type>String</type>
<required>optional</required>
<desc>该宝贝是否支持【7天无理由退货】，卖家选择的值只是一个因素，最终以类目和选择的属性条件来确定是否支持7天。填入字符0，表示不支持；未填写或填人字符1，表示支持7天无理由退货；&lt;br&gt;注意：使用该API修改商品其它属性如标题title时，如需保持商品不支持7天无理由退货状态，该字段需传入0 。</desc>
</param>
<param>
<name>num</name>
<type>Number</type>
<required>optional</required>
<max_value>900000000</max_value>
<min_value>0</min_value>
<desc>商品数量，取值范围:0-900000000的整数。且需要等于Sku所有数量的和 拍卖商品中增加拍只能为1，荷兰拍要在[2,500)范围内。&lt;br /&gt; 支持最大值为：900000000&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>1</min_value>
<desc>商品数字ID，该参数必须&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>商家编码</desc>
</param>
<param>
<name>paimai_info.deposit</name>
<type>Number</type>
<required>optional</required>
<desc>拍卖宝贝的保证金。对于增价拍和荷兰拍来说保证金有两种模式：淘宝默认模式（首次出价金额的10%），自定义固定保证金（固定冻结金额只能输入不超过30万的正整数），并且保证金只冻结1次。对于降价拍来说保证金只有淘宝默认的（竞拍价格的10% * 竞拍数量），并且每次出价都需要冻结保证金。 
对于拍卖宝贝来说，保证金是必须的，但是默认使用淘宝默认保证金模式，只有用户需要使用自定义固定保证金的时候才需要使用到这个参数。如果该参数不传或传入0则代表使用默认。</desc>
</param>
<param>
<name>paimai_info.interval</name>
<type>Number</type>
<required>optional</required>
<max_value>60</max_value>
<min_value>1</min_value>
<desc>降价拍宝贝的降价周期(分钟)。降价拍宝贝的价格每隔paimai_info.interval时间会下降一次increment。&lt;br /&gt; 支持最大值为：60&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>paimai_info.mode</name>
<type>Number</type>
<required>optional</required>
<max_value>3</max_value>
<min_value>1</min_value>
<desc>拍卖商品选择的拍卖类型，拍卖类型包括三种：增价拍(1)，荷兰拍(2)和降价拍(3)。&lt;br /&gt; 支持最大值为：3&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>paimai_info.reserve</name>
<type>Price</type>
<required>optional</required>
<desc>降价拍宝贝的保留价。对于降价拍来说，paimai_info.reserve必须大于0，且小于price-increment，而且（price-paimai_info.reserve）/increment的计算结果必须为整数</desc>
</param>
<param>
<name>paimai_info.valid_hour</name>
<type>Number</type>
<required>optional</required>
<max_value>48</max_value>
<min_value>1</min_value>
<desc>自定义销售周期的小时数。拍卖宝贝可以自定义销售周期，这里指定销售周期的小时数。自定义销售周期的小时数。拍卖宝贝可以自定义销售周期，这里指定销售周期的小时数。注意，该参数只作为输入参数，不能通过taobao.item.get接口获取。&lt;br /&gt; 支持最大值为：48&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>paimai_info.valid_minute</name>
<type>Number</type>
<required>optional</required>
<max_value>59</max_value>
<min_value>0</min_value>
<desc>自定义销售周期的分钟数。拍卖宝贝可以自定义销售周期，这里是指定销售周期的分钟数。自定义销售周期的小时数。拍卖宝贝可以自定义销售周期，这里指定销售周期的小时数。注意，该参数只作为输入参数，不能通过taobao.item.get接口获取。&lt;br /&gt; 支持最大值为：59&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>pic_path</name>
<type>String</type>
<required>optional</required>
<desc>商品主图需要关联的图片空间的相对url。这个url所对应的图片必须要属于当前用户。pic_path和image只需要传入一个,如果两个都传，默认选择pic_path</desc>
</param>
<param>
<name>post_fee</name>
<type>Price</type>
<required>optional</required>
<desc>平邮费用。取值范围:0.01-999.00;精确到2位小数;单位:元。如:5.07，表示:5元7分, 注:post_fee,express_fee,ems_fee需一起填写</desc>
</param>
<param>
<name>postage_id</name>
<type>Number</type>
<required>optional</required>
<desc>宝贝所属的运费模板ID。取值范围：整数且必须是该卖家的运费模板的ID（可通过taobao.delivery.templates.get获得当前会话用户的所有邮费模板）</desc>
</param>
<param>
<name>price</name>
<type>Price</type>
<required>optional</required>
<desc>商品价格。取值范围:0-100000000;精确到2位小数;单位:元。如:200.07，表示:200元7分。需要在正确的价格区间内。 拍卖商品对应的起拍价。</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>optional</required>
<desc>商品所属的产品ID(B商家发布商品需要用)</desc>
</param>
<param>
<name>property_alias</name>
<type>String</type>
<required>optional</required>
<max_length>800</max_length>
<desc>属性值别名。如pid:vid:别名;pid1:vid1:别名1， pid:属性id vid:值id。总长度不超过800字节&lt;br /&gt; 支持最大长度为：800&lt;br /&gt; 支持的最大列表长度为：800</desc>
</param>
<param>
<name>props</name>
<type>String</type>
<required>optional</required>
<desc>商品属性列表。格式:pid:vid;pid:vid。属性的pid调用taobao.itemprops.get取得，属性值的vid用taobao.itempropvalues.get取得vid。 如果该类目下面没有属性，可以不用填写。如果有属性，必选属性必填，其他非必选属性可以选择不填写.属性不能超过35对。所有属性加起来包括分割符不能超过549字节，单个属性没有限制。 如果有属性是可输入的话，则用字段input_str填入属性的值。</desc>
</param>
<param>
<name>scenic_ticket_book_cost</name>
<type>String</type>
<required>optional</required>
<max_value>20</max_value>
<min_value>1</min_value>
<desc>景区门票在选择订金支付时候，需要交的预订费。传入的值是1到20之间的数值，小数点后最多可以保留两位（多余的部分将做四舍五入的处理）。这个数值表示的是预订费的比例，最终的预订费为 scenic_ticket_book_cost乘一口价除以100</desc>
</param>
<param>
<name>scenic_ticket_pay_way</name>
<type>Number</type>
<required>optional</required>
<desc>景区门票类宝贝编辑时候，当卖家签订了支付宝代扣协议时候，需要选择支付方式：全额支付和订金支付。当scenic_ticket_pay_way为1时表示全额支付，为2时表示订金支付</desc>
</param>
<param>
<name>sell_point</name>
<type>String</type>
<required>optional</required>
<max_length>150</max_length>
<desc>商品卖点信息，最长150个字符。天猫和集市都可用&lt;br /&gt; 支持最大长度为：150&lt;br /&gt; 支持的最大列表长度为：150</desc>
</param>
<param>
<name>sell_promise</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否承诺退换货服务!虚拟商品无须设置此项!</desc>
</param>
<param>
<name>seller_cids</name>
<type>String</type>
<required>optional</required>
<max_list_size>10</max_list_size>
<desc>重新关联商品与店铺类目，结构:",cid1,cid2,...,"，如果店铺类目存在二级类目，必须传入子类目cids。</desc>
</param>
<param>
<name>sku_barcode</name>
<type>String</type>
<required>optional</required>
<desc>sku层面的条形码，多个SKU情况，与SKU价格库存格式类似，用逗号分隔</desc>
</param>
<param>
<name>sku_outer_ids</name>
<type>String</type>
<required>optional</required>
<desc>Sku的外部id串，结构如：1234,1342,… sku_properties, sku_quantities, sku_prices, sku_outer_ids在输入数据时要一一对应，如果没有sku_outer_ids也要写上这个参数，入参是","(这个是两个sku的示列，逗号数应该是sku个数减1)；该参数最大长度是512个字节</desc>
</param>
<param>
<name>sku_prices</name>
<type>String</type>
<required>optional</required>
<desc>更新的Sku的价格串，结构如：10.00,5.00,… 精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</param>
<param>
<name>sku_properties</name>
<type>String</type>
<required>optional</required>
<desc>更新的Sku的属性串，调用taobao.itemprops.get获取类目属性，如果属性是销售属性，再用taobao.itempropvalues.get取得vid。格式:pid:vid;pid:vid,多个sku之间用逗号分隔。该字段内的销售属性(自定义的除外)也需要在props字段填写 . 规则：如果该SKU存在旧商品，则修改；否则新增Sku。如果更新时有对Sku进行操作，则Sku的properties一定要传入。如果存在自定义销售属性，则格式为pid:vid;pid2:vid2;$pText:vText，其中$pText:vText为自定义属性。限制：其中$pText的’$’前缀不能少，且pText和vText文本中不可以存在 冒号:和分号;以及逗号</desc>
</param>
<param>
<name>sku_quantities</name>
<type>String</type>
<required>optional</required>
<desc>更新的Sku的数量串，结构如：num1,num2,num3 如:2,3,4</desc>
</param>
<param>
<name>sku_spec_ids</name>
<type>String</type>
<required>optional</required>
<desc>暂时不可用</desc>
</param>
<param>
<name>stuff_status</name>
<type>String</type>
<required>optional</required>
<desc>商品新旧程度。可选值:new（全新）,unused（闲置）,second（二手）。</desc>
</param>
<param>
<name>sub_stock</name>
<type>Number</type>
<required>optional</required>
<desc>商品是否支持拍下减库存:1支持;2取消支持(付款减库存);0(默认)不更改
集市卖家默认拍下减库存;
商城卖家默认付款减库存</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>optional</required>
<max_length>120</max_length>
<desc>宝贝标题. 不能超过30字符,受违禁词控制&lt;br /&gt; 支持最大长度为：120&lt;br /&gt; 支持的最大列表长度为：120</desc>
</param>
<param>
<name>valid_thru</name>
<type>Number</type>
<required>optional</required>
<desc>有效期。可选值:7,14;单位:天;</desc>
</param>
<param>
<name>weight</name>
<type>Number</type>
<required>optional</required>
<desc>商品的重量(商超卖家专用字段)</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>商品结构里的num_iid，modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.update.delisting</name>
<desc>* 单个商品下架 
    * 输入的num_iid必须属于当前会话用户</desc>
<request>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>商品数字ID，该参数必须&lt;br /&gt; 支持最小值为：0</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>返回商品更新信息：返回的结果是:num_iid和modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.item.update.listing</name>
<desc>* 单个商品上架 
* 输入的num_iid必须属于当前会话用户</desc>
<request>
<param>
<name>num</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>需要上架的商品的数量。取值范围:大于零的整数。如果商品有sku，则上架数量默认为所有sku数量总和，不可修改。否则商品数量根据设置数量调整为num&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>商品数字ID，该参数必须&lt;br /&gt; 支持最小值为：0</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>上架后返回的商品信息：返回的结果就是:num_iid和modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.items.custom.get</name>
<desc>跟据卖家设定的商品外部id获取商品  
这个商品对应卖家从传入的session中获取，需要session绑定</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表。可选值：Item商品结构体中的所有字段；多个字段之间用“,”分隔。如果想返回整个子对象，那字段为item_img，如果是想返回子对象里面的字段，那字段为item_img.url。新增返回字段：one_station标记商品是否淘1站商品</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>required</required>
<desc>商品的外部商品ID，支持批量，最多不超过40个。</desc>
</param>
</request>
<response>
<param>
<name>items</name>
<type>Item</type>
<level>Object Array</level>
<desc>商品列表，具体返回字段以fields决定</desc>
</param>
</response>
</api>
<api>
<name>taobao.items.inventory.get</name>
<desc>获取当前用户作为卖家的仓库中的商品列表，并能根据传入的搜索条件对仓库中的商品列表进行过滤  
只能获得商品的部分信息，商品的详细信息请通过taobao.item.get获取</desc>
<request>
<param>
<name>banner</name>
<type>String</type>
<required>optional</required>
<desc>分类字段。可选值:&lt;br&gt;
regular_shelved(定时上架)&lt;br&gt;
never_on_shelf(从未上架)&lt;br&gt;
off_shelf(我下架的)&lt;br&gt;
for_shelved(等待所有上架)&lt;br&gt;

sold_out(全部卖完)&lt;br&gt;
violation_off_shelf(违规下架的)&lt;br&gt;
默认查询for_shelved(等待所有上架)这个状态的商品&lt;br&gt;
&lt;font color='red'&gt;注：for_shelved(等待所有上架)=regular_shelved(定时上架)+never_on_shelf(从未上架)+off_shelf(我下架的)&lt;/font&gt;</desc>
</param>
<param>
<name>cid</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>商品类目ID。ItemCat中的cid字段。可以通过taobao.itemcats.get取到&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>end_modified</name>
<type>Date</type>
<required>optional</required>
<desc>商品结束修改时间</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表。可选值为 Item 商品结构体中的以下字段： 
approve_status,num_iid,title,nick,type,cid,pic_url,num,props,valid_thru, list_time,price,has_discount,has_invoice,has_warranty,has_showcase, modified,delist_time,postage_id,seller_cids,outer_id；字段之间用“,”分隔。&lt;br&gt; 
不支持其他字段，如果需要获取其他字段数据，调用taobao.item.get。</desc>
</param>
<param>
<name>has_discount</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否参与会员折扣。可选值：true，false。默认不过滤该条件</desc>
</param>
<param>
<name>is_cspu</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否挂接了达尔文标准产品体系。</desc>
</param>
<param>
<name>is_ex</name>
<type>Boolean</type>
<required>optional</required>
<desc>商品是否在外部网店显示</desc>
</param>
<param>
<name>is_taobao</name>
<type>Boolean</type>
<required>optional</required>
<desc>商品是否在淘宝显示</desc>
</param>
<param>
<name>order_by</name>
<type>String</type>
<required>optional</required>
<desc>排序方式。格式为column:asc/desc ，column可选值:list_time(上架时间),delist_time(下架时间),num(商品数量)，modified(最近修改时间);默认上架时间降序(即最新上架排在前面)。如按照上架时间降序排序方式为list_time:desc</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<max_value>101</max_value>
<desc>页码。取值范围:大于零小于等于101的整数;默认值为1，即返回第一页数据。当页码超过101页时系统就会报错，故请大家在用此接口获取数据时尽可能的细化自己的搜索条件，例如根据修改时间分段获取商品。&lt;br /&gt; 支持最大值为：101</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页条数。取值范围:大于零的整数;最大值：200；默认值：40。</desc>
</param>
<param>
<name>q</name>
<type>String</type>
<required>optional</required>
<desc>搜索字段。搜索商品的title。</desc>
</param>
<param>
<name>seller_cids</name>
<type>String</type>
<required>optional</required>
<max_list_size>32</max_list_size>
<desc>卖家店铺内自定义类目ID。多个之间用“,”分隔。可以根据taobao.sellercats.list.get获得.(&lt;font color="red"&gt;注：目前最多支持32个ID号传入&lt;/font&gt;)</desc>
</param>
<param>
<name>start_modified</name>
<type>Date</type>
<required>optional</required>
<desc>商品起始修改时间</desc>
</param>
</request>
<response>
<param>
<name>items</name>
<type>Item</type>
<level>Object Array</level>
<desc>搜索到底商品列表，具体字段根据设定的fields决定，不包括desc,stuff_status字段</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到符合条件的结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.items.list.get</name>
<desc>查看非公开属性时需要用户登录</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需要返回的商品对象字段。可选值：Item商品结构体中字段均可返回(除item_weight,item_size)；多个字段用“,”分隔。如果想返回整个子对象，那字段为itemimg，如果是想返回子对象里面的字段，那字段为itemimg.url。</desc>
</param>
<param>
<name>num_iids</name>
<type>String</type>
<required>special</required>
<desc>商品数字id列表，多个num_iid用逗号隔开，一次不超过20个。</desc>
</param>
<param>
<name>track_iids</name>
<type>String</type>
<required>special</required>
<desc>商品数字id列表，多个track_iid用逗号隔开，一次不超过20个。</desc>
</param>
</request>
<response>
<param>
<name>items</name>
<type>Item</type>
<level>Object Array</level>
<desc>获取的商品 具体字段根据权限和设定的fields决定</desc>
</param>
</response>
</api>
<api>
<name>taobao.items.onsale.get</name>
<desc>获取当前用户作为卖家的出售中的商品列表，并能根据传入的搜索条件对出售中的商品列表进行过滤  
只能获得商品的部分信息，商品的详细信息请通过taobao.item.get获取</desc>
<request>
<param>
<name>cid</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>商品类目ID。ItemCat中的cid字段。可以通过taobao.itemcats.get取到&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>end_modified</name>
<type>Date</type>
<required>optional</required>
<desc>结束的修改时间</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表。可选值：Item商品结构体中的以下字段： 
approve_status,num_iid,title,nick,type,cid,pic_url,num,props,valid_thru,list_time,price,has_discount,has_invoice,has_warranty,has_showcase,modified,delist_time,postage_id,seller_cids,outer_id；字段之间用“,”分隔。
不支持其他字段，如果需要获取其他字段数据，调用taobao.item.get。</desc>
</param>
<param>
<name>has_discount</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否参与会员折扣。可选值：true，false。默认不过滤该条件</desc>
</param>
<param>
<name>has_showcase</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否橱窗推荐。 可选值：true，false。默认不过滤该条件</desc>
</param>
<param>
<name>is_cspu</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否挂接了达尔文标准产品体系。</desc>
</param>
<param>
<name>is_ex</name>
<type>Boolean</type>
<required>optional</required>
<desc>商品是否在外部网店显示</desc>
</param>
<param>
<name>is_taobao</name>
<type>Boolean</type>
<required>optional</required>
<desc>商品是否在淘宝显示</desc>
</param>
<param>
<name>order_by</name>
<type>String</type>
<required>optional</required>
<desc>排序方式。格式为column:asc/desc ，column可选值:list_time(上架时间),delist_time(下架时间),num(商品数量)，modified(最近修改时间)，sold_quantity（商品销量）,;默认上架时间降序(即最新上架排在前面)。如按照上架时间降序排序方式为list_time:desc</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码。取值范围:大于零的整数。默认值为1,即默认返回第一页数据。用此接口获取数据时，当翻页获取的条数（page_no*page_size）超过10万,为了保护后台搜索引擎，接口将报错。所以请大家尽可能的细化自己的搜索条件，例如根据修改时间分段获取商品</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页条数。取值范围:大于零的整数;最大值：200；默认值：40。用此接口获取数据时，当翻页获取的条数（page_no*page_size）超过2万,为了保护后台搜索引擎，接口将报错。所以请大家尽可能的细化自己的搜索条件，例如根据修改时间分段获取商品</desc>
</param>
<param>
<name>q</name>
<type>String</type>
<required>optional</required>
<desc>搜索字段。搜索商品的title。</desc>
</param>
<param>
<name>seller_cids</name>
<type>String</type>
<required>optional</required>
<max_list_size>32</max_list_size>
<desc>卖家店铺内自定义类目ID。多个之间用“,”分隔。可以根据taobao.sellercats.list.get获得.(&lt;font color="red"&gt;注：目前最多支持32个ID号传入&lt;/font&gt;)</desc>
</param>
<param>
<name>start_modified</name>
<type>Date</type>
<required>optional</required>
<desc>起始的修改时间</desc>
</param>
</request>
<response>
<param>
<name>items</name>
<type>Item</type>
<level>Object Array</level>
<desc>搜索到的商品列表，具体字段根据设定的fields决定，不包括desc字段</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到符合条件的结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.product.add</name>
<desc>获取类目ID，必需是叶子类目ID；调用taobao.itemcats.get.v2获取  
传入关键属性,结构:pid:vid;pid:vid.调用taobao.itemprops.get.v2获取pid, 
调用taobao.itempropvalues.get获取vid;如果碰到用户自定义属性,请用customer_props. 
新增：套装产品发布，目前支持单件多个即 A*2 形式的套装</desc>
<request>
<param>
<name>binds</name>
<type>String</type>
<required>optional</required>
<max_length>512</max_length>
<desc>非关键属性结构:pid:vid;pid:vid.&lt;br&gt;
非关键属性&lt;font color=red&gt;不包含&lt;/font&gt;关键属性、销售属性、用户自定义属性、商品属性;
&lt;br&gt;调用taobao.itemprops.get获取pid,调用taobao.itempropvalues.get获取vid.&lt;br&gt;&lt;font color=red&gt;注:支持最大长度为512字节&lt;/font&gt;&lt;br /&gt; 支持最大长度为：512&lt;br /&gt; 支持的最大列表长度为：512</desc>
</param>
<param>
<name>cid</name>
<type>Number</type>
<required>required</required>
<desc>商品类目ID.调用taobao.itemcats.get获取;注意:必须是叶子类目 id.</desc>
</param>
<param>
<name>customer_props</name>
<type>String</type>
<required>special</required>
<desc>用户自定义属性,结构：pid1:value1;pid2:value2，如果有型号，系列等子属性用: 隔开 例如：“20000:优衣库:型号:001;632501:1234”，表示“品牌:优衣库:型号:001;货号:1234”
&lt;br&gt;&lt;font color=red&gt;注：包含所有自定义属性的传入&lt;/font&gt;</desc>
</param>
<param>
<name>desc</name>
<type>String</type>
<required>optional</required>
<desc>产品描述.最大不超过25000个字符</desc>
</param>
<param>
<name>extra_info</name>
<type>String</type>
<required>optional</required>
<max_length>25000</max_length>
<desc>存放产品扩展信息，由List(ProductExtraInfo)转化成jsonArray存入.&lt;br /&gt; 支持最大长度为：25000&lt;br /&gt; 支持的最大列表长度为：25000</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>required</required>
<max_length>1048576</max_length>
<desc>产品主图片.最大1M,目前仅支持GIF,JPG.&lt;br /&gt; 支持的文件类型为：gif,jpg,png,jpeg&lt;br /&gt; 支持的最大列表长度为：1048576</desc>
</param>
<param>
<name>is_pub_suite</name>
<type>Boolean</type>
<required>special</required>
<desc>是否发布套装产品，和suite_items_str配合使用，is_pub_suite=true走套装SPU发布逻辑，达尔文体系下不需要再走tmall.product.spec.add发布产品规格</desc>
</param>
<param>
<name>major</name>
<type>Boolean</type>
<required>optional</required>
<desc>是不是主图</desc>
</param>
<param>
<name>market_id</name>
<type>String</type>
<required>optional</required>
<desc>市场ID，1为新增C2C市场的产品信息， 2为新增B2C市场的产品信息。 
不填写此值则C用户新增B2C市场的产品信息，B用户新增B2C市场的产品信息。</desc>
</param>
<param>
<name>market_time</name>
<type>Date</type>
<required>optional</required>
<desc>上市时间。目前只支持鞋城类目传入此参数</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>optional</required>
<desc>产品名称,最大30个字符.</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>外部产品ID</desc>
</param>
<param>
<name>packing_list</name>
<type>String</type>
<required>optional</required>
<desc>包装清单。注意，在管控类目下，包装清单不能为空，同时保证清单的格式为： 
名称:数字;名称:数字; 
其中，名称不能违禁、不能超过60字符，数字不能超过999</desc>
</param>
<param>
<name>price</name>
<type>String</type>
<required>optional</required>
<desc>产品市场价.精确到2位小数;单位为元.如：200.07</desc>
</param>
<param>
<name>property_alias</name>
<type>String</type>
<required>optional</required>
<desc>销售属性值别名。格式为pid1:vid1:alias1;pid1:vid2:alia2。只有少数销售属性值支持传入别名，比如颜色和尺寸</desc>
</param>
<param>
<name>props</name>
<type>String</type>
<required>special</required>
<desc>关键属性 结构:pid:vid;pid:vid.调用taobao.itemprops.get获取pid,调用taobao.itempropvalues.get获取vid;如果碰到用户自定义属性,请用customer_props.</desc>
</param>
<param>
<name>sale_props</name>
<type>String</type>
<required>optional</required>
<desc>销售属性结构:pid:vid;pid:vid.调用taobao.itemprops.get获取is_sale_prop＝true的pid,调用taobao.itempropvalues.get获取vid.</desc>
</param>
<param>
<name>sell_pt</name>
<type>String</type>
<required>optional</required>
<desc>商品卖点描述，长度限制为20个汉字</desc>
</param>
<param>
<name>suite_items_str</name>
<type>String</type>
<required>special</required>
<desc>发布套装产品时，套装关联的产品规格+数量的字符串，格式：specsId:number。</desc>
</param>
<param>
<name>template_id</name>
<type>Number</type>
<required>optional</required>
<desc>在天猫，无关键属性发布产品，必须指定模板ID,模板ID通过tmall.product.template.get获取</desc>
</param>
</request>
<response>
<param>
<name>product</name>
<type>Product</type>
<level>Object</level>
<desc>产品结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.product.get</name>
<desc>两种方式查看一个产品详细信息:  
传入product_id来查询  
传入cid和props来查询</desc>
<request>
<param>
<name>cid</name>
<type>Number</type>
<required>special</required>
<desc>商品类目id.调用taobao.itemcats.get获取;必须是叶子类目id,如果没有传product_id,那么cid和props必须要传.</desc>
</param>
<param>
<name>customer_props</name>
<type>String</type>
<required>special</required>
<desc>用户自定义关键属性,结构：pid1:value1;pid2:value2，如果有型号，系列等子属性用: 隔开 例如：“20000:优衣库:型号:001;632501:1234”，表示“品牌:优衣库:型号:001;货号:1234”</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表.可选值:Product数据结构中的所有字段;多个字段之间用","分隔.</desc>
</param>
<param>
<name>market_id</name>
<type>String</type>
<required>optional</required>
<desc>市场ID，1为取C2C市场的产品信息， 2为取B2C市场的产品信息。 
不填写此值则默认取C2C的产品信息。</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>special</required>
<desc>Product的id.两种方式来查看一个产品:1.传入product_id来查询 2.传入cid和props来查询</desc>
</param>
<param>
<name>props</name>
<type>String</type>
<required>special</required>
<desc>比如:诺基亚N73这个产品的关键属性列表就是:品牌:诺基亚;型号:N73,对应的PV值就是10005:10027;10006:29729.</desc>
</param>
</request>
<response>
<param>
<name>product</name>
<type>Product</type>
<level>Object</level>
<desc>返回具体信息为入参fields请求的字段信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.product.img.delete</name>
<desc>1.传入非主图ID  
2.传入产品ID  
删除产品非主图</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>required</required>
<desc>非主图ID</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>required</required>
<desc>产品ID.Product的id,通过taobao.product.add接口新增产品的时候会返回id.</desc>
</param>
</request>
<response>
<param>
<name>product_img</name>
<type>ProductImg</type>
<level>Object</level>
<desc>返回productimg中的：id,product_id</desc>
</param>
</response>
</api>
<api>
<name>taobao.product.img.upload</name>
<desc>1.传入产品ID  
2.传入图片内容  
注意：图片最大为500K,只支持JPG,GIF格式,如果需要传多张，可调多次</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>optional</required>
<desc>产品图片ID.修改图片时需要传入</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>required</required>
<max_length>1048576</max_length>
<desc>图片内容.图片最大为500K,只支持JPG,GIF格式.&lt;br /&gt; 支持的文件类型为：gif,jpg,png,jpeg&lt;br /&gt; 支持的最大列表长度为：1048576</desc>
</param>
<param>
<name>is_major</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否将该图片设为主图.可选值:true,false;默认值:false.</desc>
</param>
<param>
<name>position</name>
<type>Number</type>
<required>optional</required>
<desc>图片序号</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>required</required>
<desc>产品ID.Product的id</desc>
</param>
</request>
<response>
<param>
<name>product_img</name>
<type>ProductImg</type>
<level>Object</level>
<desc>返回产品图片结构中的：url,id,created,modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.product.propimg.delete</name>
<desc>1.传入属性图片ID  
2.传入产品ID  
删除一个产品的属性图片</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>required</required>
<desc>属性图片ID</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>required</required>
<desc>产品ID.Product的id.</desc>
</param>
</request>
<response>
<param>
<name>product_prop_img</name>
<type>ProductPropImg</type>
<level>Object</level>
<desc>返回product_prop_img数据结构中的：product_id,id</desc>
</param>
</response>
</api>
<api>
<name>taobao.product.propimg.upload</name>
<desc>传入产品ID  
传入props,目前仅支持颜色属性.调用taobao.itemprops.get.v2取得颜色属性pid, 
再用taobao.itempropvalues.get取得vid;格式:pid:vid,只能传入一个颜色pid:vid串;  
传入图片内容  
注意：图片最大为2M,只支持JPG,GIF,如果需要传多张，可调多次</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<required>optional</required>
<desc>产品属性图片ID</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>required</required>
<max_length>1048576</max_length>
<desc>图片内容.图片最大为2M,只支持JPG,GIF.&lt;br /&gt; 支持的文件类型为：gif,jpg,png,jpeg&lt;br /&gt; 支持的最大列表长度为：1048576</desc>
</param>
<param>
<name>position</name>
<type>Number</type>
<required>optional</required>
<desc>图片序号</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>required</required>
<desc>产品ID.Product的id</desc>
</param>
<param>
<name>props</name>
<type>String</type>
<required>required</required>
<desc>属性串.目前仅支持颜色属性.调用taobao.itemprops.get获取类目属性,取得颜色属性pid,再用taobao.itempropvalues.get取得vid;格式:pid:vid,只能传入一个颜色pid:vid串;</desc>
</param>
</request>
<response>
<param>
<name>product_prop_img</name>
<type>ProductPropImg</type>
<level>Object</level>
<desc>支持返回产品属性图片中的：url,id,created,modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.product.update</name>
<desc>传入产品ID  
可修改字段：outer_id,binds,sale_props,name,price,desc,image  
注意：1.可以修改主图,不能修改子图片,主图最大500K,目前仅支持GIF,JPG 
      2.商城卖家产品发布24小时后不能作删除或修改操作</desc>
<request>
<param>
<name>binds</name>
<type>String</type>
<required>optional</required>
<desc>非关键属性.调用taobao.itemprops.get获取pid,调用taobao.itempropvalues.get获取vid;格式:pid:vid;pid:vid</desc>
</param>
<param>
<name>desc</name>
<type>String</type>
<required>optional</required>
<desc>产品描述.最大不超过25000个字符</desc>
</param>
<param>
<name>extra_info</name>
<type>String</type>
<required>optional</required>
<max_length>25000</max_length>
<desc>存放产品扩展信息，由List(ProductExtraInfo)转化成jsonArray存入.&lt;br /&gt; 支持最大长度为：25000&lt;br /&gt; 支持的最大列表长度为：25000</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>optional</required>
<max_length>1048576</max_length>
<desc>产品主图.最大500K,目前仅支持GIF,JPG&lt;br /&gt; 支持的文件类型为：gif,jpg,png,jpeg&lt;br /&gt; 支持的最大列表长度为：1048576</desc>
</param>
<param>
<name>major</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否是主图</desc>
</param>
<param>
<name>market_id</name>
<type>String</type>
<required>optional</required>
<desc>市场ID，1为更新C2C市场的产品信息， 2为更新B2C市场的产品信息。 
不填写此值则C用户更新B2C市场的产品信息，B用户更新B2C市场的产品信息。</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>optional</required>
<desc>产品名称.最大不超过30个字符</desc>
</param>
<param>
<name>native_unkeyprops</name>
<type>String</type>
<required>optional</required>
<desc>自定义非关键属性</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>optional</required>
<desc>外部产品ID</desc>
</param>
<param>
<name>packing_list</name>
<type>String</type>
<required>optional</required>
<desc>保证清单。</desc>
</param>
<param>
<name>price</name>
<type>String</type>
<required>optional</required>
<desc>产品市场价.精确到2位小数;单位为元.如:200.07</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>required</required>
<desc>产品ID</desc>
</param>
<param>
<name>sale_props</name>
<type>String</type>
<required>optional</required>
<desc>销售属性.调用taobao.itemprops.get获取pid,调用taobao.itempropvalues.get获取vid;格式:pid:vid;pid:vid</desc>
</param>
<param>
<name>sell_pt</name>
<type>String</type>
<required>optional</required>
<desc>产品卖点描述，最长40个字节</desc>
</param>
</request>
<response>
<param>
<name>product</name>
<type>Product</type>
<level>Object</level>
<desc>返回product数据结构中的：product_id,modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.products.get</name>
<desc>根据淘宝会员帐号搜索所有产品信息，只有天猫商家发布商品时才需要用到。  
注意：支持分页，每页最多返回100条,默认值为40,页码从1开始，默认为第一页</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表.可选值:Product数据结构中的所有字段;多个字段之间用","分隔</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<desc>用户昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码.传入值为1代表第一页,传入值为2代表第二页,依此类推.默认返回的数据是从第一页开始.</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页条数.每页返回最多返回100条,默认值为40</desc>
</param>
</request>
<response>
<param>
<name>products</name>
<type>Product</type>
<level>Object Array</level>
<desc>返回具体信息为入参fields请求的字段信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.products.search</name>
<desc>&lt;pre&gt; 
只有天猫商家发布商品时才需要用到； 
二种方式搜索所有产品信息(二种至少传一种):  
传入关键字q搜索， 
传入cid和props搜索 
返回值支持:product_id,name,pic_path,cid,props,price,tsc 
当用户指定了cid并且cid为垂直市场（3C电器城、鞋城）的类目id时，默认只返回小二确认的产品。如果用户没有指定cid，或cid为普通的类目，默认返回商家确认或小二确认的产品。如果用户自定了status字段，以指定的status类型为准。 
新增一： 
   传入suite_items_str 按规格搜索套装产品。 
   返回字段增加suite_items_str,is_suite_effecitve支持。 
 
新增二： 
   传入barcode_str 支持按条码搜索产品。 
   返回字段增加barcode_str。 
&lt;/pre&gt;</desc>
<request>
<param>
<name>barcode_str</name>
<type>String</type>
<required>optional</required>
<desc>按条码搜索产品信息,多个逗号隔开，不支持条码为全零的方式</desc>
</param>
<param>
<name>cid</name>
<type>Number</type>
<required>special</required>
<desc>商品类目ID.调用taobao.itemcats.get获取.</desc>
</param>
<param>
<name>customer_props</name>
<type>String</type>
<required>special</required>
<desc>用户自定义关键属性,结构：pid1:value1;pid2:value2，如果有型号，系列等子属性用: 隔开 例如：“20000:优衣库:型号:001;632501:1234”，表示“品牌:优衣库:型号:001;货号:1234”</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表.可选值:Product数据结构中的以下字段:product_id,name,pic_url,cid,props,price,tsc;多个字段之间用","分隔.新增字段status(product的当前状态)</desc>
</param>
<param>
<name>market_id</name>
<type>String</type>
<required>optional</required>
<desc>市场ID，1为取C2C市场的产品信息， 2为取B2C市场的产品信息。 
不填写此值则默认取C2C的产品信息。</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码.传入值为1代表第一页,传入值为2代表第二页,依此类推.默认返回的数据是从第一页开始.</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页条数.每页返回最多返回100条,默认值为40.</desc>
</param>
<param>
<name>props</name>
<type>String</type>
<required>special</required>
<desc>属性,属性值的组合.格式:pid:vid;pid:vid;调用taobao.itemprops.get获取类目属性pid  
,再用taobao.itempropvalues.get取得vid.</desc>
</param>
<param>
<name>q</name>
<type>String</type>
<required>special</required>
<desc>搜索的关键词是用来搜索产品的title.　注:q,cid和props至少传入一个</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>想要获取的产品的状态列表，支持多个状态并列获取，多个状态之间用","分隔，最多同时指定5种状态。例如，只获取小二确认的spu传入"3",只要商家确认的传入"0"，既要小二确认又要商家确认的传入"0,3"。目前只支持者两种类型的状态搜索，输入其他状态无效。&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>suite_items_str</name>
<type>String</type>
<required>special</required>
<desc>按关联产品规格specs搜索套装产品</desc>
</param>
<param>
<name>vertical_market</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>传入值为：3表示3C表示3C垂直市场产品，4表示鞋城垂直市场产品，8表示网游垂直市场产品。一次只能指定一种垂直市场类型&lt;br /&gt; 支持最小值为：0</desc>
</param>
</request>
<response>
<param>
<name>products</name>
<type>Product</type>
<level>Object Array</level>
<desc>返回具体信息为入参fields请求的字段信息</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.skus.custom.get</name>
<desc>跟据卖家设定的Sku的外部id获取商品，如果一个outer_id对应多个Sku会返回所有符合条件的sku  
这个Sku所属卖家从传入的session中获取，需要session绑定(注：iid标签里是num_iid的值，可以用作num_iid使用)</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表。可选值：Sku结构体中的所有字段；字段之间用“,”隔开</desc>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<required>required</required>
<desc>Sku的外部商家ID</desc>
</param>
</request>
<response>
<param>
<name>skus</name>
<type>Sku</type>
<level>Object Array</level>
<desc>Sku对象，具体字段以fields决定</desc>
</param>
</response>
</api>
<api>
<name>taobao.skus.quantity.update</name>
<desc>提供按照全量/增量的方式批量修改SKU库存的功能</desc>
<request>
<param>
<name>num_iid</name>
<type>Number</type>
<required>required</required>
<desc>商品数字ID，必填参数</desc>
</param>
<param>
<name>outerid_quantities</name>
<type>String</type>
<required>special</required>
<desc>特殊可选，skuIdQuantities为空的时候用该字段通过outerId来指定sku和其库存修改值。格式为outerId:库存修改值;outerId:库存修改值。当skuIdQuantities不为空的时候该字段失效。当一个outerId对应多个sku时，所有匹配到的sku都会被修改库存。最多支持20个SKU同时修改。</desc>
</param>
<param>
<name>skuid_quantities</name>
<type>String</type>
<required>special</required>
<desc>sku库存批量修改入参，用于指定一批sku和每个sku的库存修改值，特殊可填。格式为skuId:库存修改值;skuId:库存修改值。最多支持20个SKU同时修改。</desc>
</param>
<param>
<name>type</name>
<type>Number</type>
<required>optional</required>
<desc>库存更新方式，可选。1为全量更新，2为增量更新。如果不填，默认为全量更新。当选择全量更新时，如果库存更新值传入的是负数，会出错并返回错误码；当选择增量更新时，如果库存更新值为负数且绝对值大于当前库存，则sku库存会设置为0.</desc>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<desc>iid、numIid、num和modified，skus中每个sku的skuId、quantity和modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.ticket.item.add</name>
<desc>发布门票商品接口，只支持新版门票发布&lt;br&gt; 
注意门票商品必须发布到对应达尔文体系下的产品上，产品获取请走taobao.products.search接口。&lt;br&gt; 
门票商品的产品规格信息包含门票商品的价格，库存，有效期等。是门票核心信息。一个门票宝贝可能包含多个产品规格（产品对应产品规格的获取请走tmall.product.specs.get接口），可以指定每个产品规格在不同时间段下不同有效期的门票的不同价格和库存。具体信息请参见skus字段描述。</desc>
<request>
<param>
<name>auction_point</name>
<type>Price</type>
<required>optional</required>
<desc>门票商品返点比例（只对B卖家开放，单位为%）</desc>
</param>
<param>
<name>auction_status</name>
<type>String</type>
<required>required</required>
<max_length>10</max_length>
<desc>门票商品状态（onsale：上架，instock：仓库）&lt;br /&gt; 支持最大长度为：10&lt;br /&gt; 支持的最大列表长度为：10</desc>
</param>
<param>
<name>city</name>
<type>String</type>
<required>required</required>
<max_length>20</max_length>
<desc>门票商品所在地-城市&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>description</name>
<type>String</type>
<required>required</required>
<max_length>25000</max_length>
<desc>门票宝贝描述&lt;br /&gt; 支持最大长度为：25000&lt;br /&gt; 支持的最大列表长度为：25000</desc>
</param>
<param>
<name>etc.association_status</name>
<type>Boolean</type>
<required>optional</required>
<desc>门票商品电子凭证是否关联本地商户-在门票商品为电子凭证时必选</desc>
</param>
<param>
<name>etc.auto_refund</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>0</min_value>
<desc>门票商品电子凭证的自动退款比例-在门票商品为电子凭证时必选&lt;br /&gt; 支持最大值为：100&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>etc.merchant_id</name>
<type>String</type>
<required>optional</required>
<desc>门票商品电子凭证的码商-在门票商品为电子凭证时必选</desc>
</param>
<param>
<name>etc.merchant_nick</name>
<type>String</type>
<required>optional</required>
<desc>门票商品电子凭证的码商名-在门票商品为电子凭证时必选</desc>
</param>
<param>
<name>etc.network_id</name>
<type>String</type>
<required>optional</required>
<desc>门票商品电子凭证网店ID-在门票商品为电子凭证时必选</desc>
</param>
<param>
<name>etc.overdue_pay</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>0</min_value>
<desc>门票商品电子凭证的过期退款比例-在门票商品为电子凭证时必选&lt;br /&gt; 支持最大值为：100&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>etc.verification_pay</name>
<type>Boolean</type>
<required>optional</required>
<desc>门票商品电子凭证是否核销打款-在门票商品为电子凭证时必选</desc>
</param>
<param>
<name>have_invoice</name>
<type>Boolean</type>
<required>optional</required>
<desc>门票商品是否有发票（有发票：true，没有发票：false）. 
对于B卖家来说只能选择有发票。</desc>
</param>
<param>
<name>image_1</name>
<type>String</type>
<required>required</required>
<desc>商品主图-该值来自图片空间接口返回的图片链接（不包含域名和前缀）</desc>
</param>
<param>
<name>image_2</name>
<type>String</type>
<required>optional</required>
<desc>第一张多图-该值来自图片空间接口返回的图片链接（不包含域名和前缀）</desc>
</param>
<param>
<name>image_3</name>
<type>String</type>
<required>optional</required>
<desc>第二张多图-该值来自图片空间接口返回的图片链接（不包含域名和前缀）</desc>
</param>
<param>
<name>image_4</name>
<type>String</type>
<required>optional</required>
<desc>第三张多图-该值来自图片空间接口返回的图片链接（不包含域名和前缀）</desc>
</param>
<param>
<name>image_5</name>
<type>String</type>
<required>optional</required>
<desc>第四张多图-该值来自图片空间接口返回的图片链接（不包含域名和前缀）</desc>
</param>
<param>
<name>list_time</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>门票商品的上架时间（精确到分，格式为：yyyy-MM-dd HH:mm）&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>postage_id</name>
<type>Number</type>
<required>optional</required>
<desc>门票商品的物流运费模板-在产品规格使用到物流时必选</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>required</required>
<desc>门票对应产品标识&lt;br&gt; 
门票商品只能使用达尔文体系下的产品。该参数可通过taobao.products.search接口获取，注意返回产品的cspu_feature属性，该属性表明是否为达尔文体系下产品。</desc>
</param>
<param>
<name>promoted_status</name>
<type>Boolean</type>
<required>optional</required>
<desc>门票商品是否橱窗推荐（橱窗推荐；true，不推荐则可不用设置该值）</desc>
</param>
<param>
<name>prov</name>
<type>String</type>
<required>required</required>
<max_length>20</max_length>
<desc>门票商品所在地-省份&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>shop_cats</name>
<type>String</type>
<required>optional</required>
<desc>门票宝贝所属的店铺分类列表-店铺分类标识请使用店铺相关接口获取获取，多个店铺分类标识之间通过逗号进行分隔，最多包含10个分类标识</desc>
</param>
<param>
<name>skus</name>
<type>String</type>
<required>required</required>
<desc>门票商品产品规格信息，包括门票的库存价格等信息（产品规格可通过tmall.product.specs.get接口获取）。&lt;br&gt;请通过门票商品使用的产品所对应的产品规格信息进行设置，注意由于产品规格信息比较复杂，所以直接使用json作为传输，请按照约定传入正确的json格式）&lt;br&gt; 
格式定义：&lt;br&gt; 
&lt;pre&gt; 
{ 
  "SKU": 
	{ 
		"20890017-121840019_20394-121290067":{// 产品下的某个产品规格的属性属性值信息（pid-vid_pid-vid） 
			"effDates":{ 
				"1":{ 
					"type":"0",// 有效期类型，0-非指定日票，1-指定日票，2-年卡 
					"effDate" :{ // 有效期，如下几块，type已经去掉 
						"startDate":"2013-01-01",// 有效期时间段开始时间,null代表未设置 
						"endDate":"2013-12-31",// 有效期时间段结束时间,null代表未设置 
						"weeks":["1","4"],// 有效期周,1~7代表周一到周日，null代表未设置 
						"startHour":"12",// 有效期开始时间小时,null代表未设置 
						"startMinute":"59",// 有效期开始时间分钟,null代表未设置 
						"endHour":"18"// 有效期结束时间小时,null代表未设置 
						"endMinute":"30"// 有效期结束时间分钟,null代表未设置 
						"effDays":"1",// xx后n天内有效的天数，购买后、出票后、开卡后n天内有效,null代表未设置 
					}, 
					"timeLimit":{// 入园时间限制数据 
						"limit":{ 
							"type":"0",// 入园时间限制类型,0-不限，1-提前n天的n点n分，2-提前n小时n分钟 
							"aheadDays":"3",// 入园时间限制类型为提前n天的n点n分时才使用，入园时间提前n天的天数 
							"aheadAtHour":"12",// 入园时间限制类型为提前n天的n点n分时才使用，入园时间在n点n分之前的小时 
							"aheadAtMinute":"30",// 入园时间限制类型为提前n天的n点n分时才使用，入园时间在n点n分之前的分钟 
							"aheadHours":"48",// 入园时间限制类型为提前n小时n分时才使用，入园时间提前n小时的小时 
							"aheadMinutes":"30",// 入园时间限制类型为提前n小时n分时才使用，入园时间提前n分钟的分钟 
						} 
						"autoActivate":{ // 有效期类型为年卡时才使用 
							"type":"0",// 是否有最晚自动开卡时间,0-无，1-有最晚自动开卡 
							"time":"30" // 天数,无最晚自动开发时间时为null 
						} 
					} 
 
					"price" : 10000,  
					"inventory" : 100, 
					"outerId" : "商家编码" 
				}, 
				"222":{} 
			}, 
			"save":true, // 必须，代表是保存的有效数据 
 
				"returnRule":{ 
					"type":"0",      // 0,1,2 
					"value":""      // type 0:""，1:""，2:"卖家输入的文本" 
				}, 
				"changeRule":{ 
					"type":"1",      // 0,1,2 
					"value":""      // type 0:""，1:""，2:"卖家输入的文本" 
				}, 
				"guide": "卖家输入的文本" 
		} 
	} 
} 
&lt;/pre&gt;&lt;br&gt;</desc>
</param>
<param>
<name>sub_stock_at_buy</name>
<type>Boolean</type>
<required>required</required>
<max_value>1</max_value>
<min_value>0</min_value>
<desc>门票商品库存技术方式（拍下减库存：true，付款减库存：false）</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>required</required>
<max_length>60</max_length>
<desc>门票商品标题&lt;br /&gt; 支持最大长度为：60&lt;br /&gt; 支持的最大列表长度为：60</desc>
</param>
<param>
<name>video_id</name>
<type>Number</type>
<required>optional</required>
<desc>门票商品视频-视频标识由多媒体中相关接口获取</desc>
</param>
<param>
<name>vip_promoted</name>
<type>Boolean</type>
<required>optional</required>
<desc>门票商品是否参与店铺会员打折</desc>
</param>
</request>
<response>
<param>
<name>ticket_item_process_result</name>
<type>TicketItemProcessResult</type>
<level>Object</level>
<desc>门票商品操作结果，具体请参见TicketItemProcessResult数据结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.ticket.item.get</name>
<desc>获取新门票类目商品信息，目前只支持门票二期的商品</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需要返回的门票商品（TicketItem）对象字段，如title,price,skus等。&lt;br&gt;可选值：TicketItem商品结构体中所有字段均可返回；多个字段用“,”分隔。</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>新门票类目商品的标识（非日历价格库存商品）</desc>
</param>
</request>
<response>
<param>
<name>ticket_item</name>
<type>TicketItem</type>
<level>Object</level>
<desc>参见TicketItem数据结构文档</desc>
</param>
</response>
</api>
<api>
<name>taobao.ticket.item.update</name>
<desc>编辑新门票类目商品&lt;br&gt; 
只有如下两种情况能够更换门票商品挂载的产品：从其他类目迁移到当前新门票类目，或当前商品挂载的产品被屏蔽&lt;br&gt; 
注意门票商品必须发布到对应达尔文体系下的产品上，产品获取请走taobao.products.search接口。 
门票商品的产品规格信息包含门票商品的价格，库存，有效期等。是门票核心信息。一个门票宝贝可能包含多个达尔文体系产品（产品对应达尔文体系产品的获取请走tmall.product.specs.get接口），可以指定每个达尔文体系产品在不同时间段下不同有效期的门票的不同价格和库存。具体信息请参见skus字段描述。</desc>
<request>
<param>
<name>auction_point</name>
<type>Price</type>
<required>optional</required>
<desc>门票商品返点比例（只对B卖家开放，单位为%）</desc>
</param>
<param>
<name>auction_status</name>
<type>String</type>
<required>optional</required>
<max_length>10</max_length>
<desc>门票商品状态（onsale：上架，instock：仓库）&lt;br /&gt; 支持最大长度为：10&lt;br /&gt; 支持的最大列表长度为：10</desc>
</param>
<param>
<name>city</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>门票商品所在地-城市&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>description</name>
<type>String</type>
<required>optional</required>
<max_length>25000</max_length>
<desc>门票宝贝描述&lt;br /&gt; 支持最大长度为：25000&lt;br /&gt; 支持的最大列表长度为：25000</desc>
</param>
<param>
<name>etc.association_status</name>
<type>Boolean</type>
<required>optional</required>
<desc>门票商品电子凭证是否关联本地商户-在门票商品为电子凭证时必选</desc>
</param>
<param>
<name>etc.auto_refund</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>0</min_value>
<desc>门票商品电子凭证的自动退款比例-在门票商品为电子凭证时必选&lt;br /&gt; 支持最大值为：100&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>etc.merchant_id</name>
<type>String</type>
<required>optional</required>
<desc>门票商品电子凭证的码商-在门票商品为电子凭证时必选</desc>
</param>
<param>
<name>etc.merchant_nick</name>
<type>String</type>
<required>optional</required>
<desc>门票商品电子凭证的码商名-在门票商品为电子凭证时必选</desc>
</param>
<param>
<name>etc.network_id</name>
<type>String</type>
<required>optional</required>
<desc>门票商品电子凭证网店ID-在门票商品为电子凭证时必选</desc>
</param>
<param>
<name>etc.overdue_pay</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>0</min_value>
<desc>门票商品电子凭证的过期退款比例-在门票商品为电子凭证时必选&lt;br /&gt; 支持最大值为：100&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>etc.verification_pay</name>
<type>Boolean</type>
<required>optional</required>
<desc>门票商品电子凭证是否核销打款-在门票商品为电子凭证时必选</desc>
</param>
<param>
<name>have_invoice</name>
<type>Boolean</type>
<required>optional</required>
<desc>门票商品是否有发票（有发票：true，没有发票：false）. 
对于B卖家来说只能选择有发票。</desc>
</param>
<param>
<name>image_1</name>
<type>String</type>
<required>optional</required>
<desc>商品主图-该值来自图片空间接口返回的图片链接（不包含域名和前缀）</desc>
</param>
<param>
<name>image_2</name>
<type>String</type>
<required>optional</required>
<desc>第一张多图-该值来自图片空间接口返回的图片链接（不包含域名和前缀）</desc>
</param>
<param>
<name>image_3</name>
<type>String</type>
<required>optional</required>
<desc>第二张多图-该值来自图片空间接口返回的图片链接（不包含域名和前缀）</desc>
</param>
<param>
<name>image_4</name>
<type>String</type>
<required>optional</required>
<desc>第三张多图-该值来自图片空间接口返回的图片链接（不包含域名和前缀）</desc>
</param>
<param>
<name>image_5</name>
<type>String</type>
<required>optional</required>
<desc>第四张多图-该值来自图片空间接口返回的图片链接（不包含域名和前缀）</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>需要更新的门票商品标识（只支持门票二期商品）</desc>
</param>
<param>
<name>list_time</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>门票商品的上架时间（精确到分，格式为：yyyy-MM-dd HH:mm）&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>postage_id</name>
<type>Number</type>
<required>optional</required>
<desc>门票商品的物流运费模板-在产品规格使用到物流时必选</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>optional</required>
<desc>门票商品挂载到的产品&lt;br&gt; 
通过taobao.products.search获取产品信息，并且对应产品必须是小二确认的达尔文体系产品。</desc>
</param>
<param>
<name>promoted_status</name>
<type>Boolean</type>
<required>optional</required>
<desc>门票商品是否橱窗推荐（橱窗推荐；true，不推荐则可不用设置该值）</desc>
</param>
<param>
<name>prov</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>门票商品所在地-省份&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>remove_fields</name>
<type>Field List</type>
<required>optional</required>
<desc>需要删除的字段列表</desc>
</param>
<param>
<name>shop_cats</name>
<type>String</type>
<required>optional</required>
<desc>门票宝贝所属的店铺分类列表-店铺分类标识请使用店铺相关接口获取获取，多个店铺分类标识之间通过逗号进行分隔，最多包含10个分类标识</desc>
</param>
<param>
<name>skus</name>
<type>String</type>
<required>optional</required>
<desc>门票商品产品规格信息（门票的产品规格信息可以通过tmall.product.specs.get接口获取）&lt;br&gt;。请通过门票商品使用的产品所对应的产品规格信息进行设置，注意由于产品规格信息比较复杂，所以直接使用json作为传输，请按照约定传入正确的json格式）&lt;br&gt; 
格式定义：&lt;br&gt; 
&lt;pre&gt; 
{ 
  "SKU": 
	{ 
		"20890017-121840019_20394-121290067":{// 产品下的某个产品规格的属性属性值信息（pid-vid_pid-vid） 
			"effDates":{ 
				"1":{ 
					"type":"0",// 有效期类型，0-非指定日票，1-指定日票，2-年卡 
					"effDate" :{ // 有效期，如下几块，type已经去掉 
						"startDate":"2013-01-01",// 有效期时间段开始时间,null代表未设置 
						"endDate":"2013-12-31",// 有效期时间段结束时间,null代表未设置 
						"weeks":["1","4"],// 有效期周,1~7代表周一到周日，null代表未设置 
						"startHour":"12",// 有效期开始时间小时,null代表未设置 
						"startMinute":"59",// 有效期开始时间分钟,null代表未设置 
						"endHour":"18"// 有效期结束时间小时,null代表未设置 
						"endMinute":"30"// 有效期结束时间分钟,null代表未设置 
						"effDays":"1",// xx后n天内有效的天数，购买后、出票后、开卡后n天内有效,null代表未设置 
					}, 
					"timeLimit":{// 入园时间限制数据 
						"limit":{ 
							"type":"0",// 入园时间限制类型,0-不限，1-提前n天的n点n分，2-提前n小时n分钟 
							"aheadDays":"3",// 入园时间限制类型为提前n天的n点n分时才使用，入园时间提前n天的天数 
							"aheadAtHour":"12",// 入园时间限制类型为提前n天的n点n分时才使用，入园时间在n点n分之前的小时 
							"aheadAtMinute":"30",// 入园时间限制类型为提前n天的n点n分时才使用，入园时间在n点n分之前的分钟 
							"aheadHours":"48",// 入园时间限制类型为提前n小时n分时才使用，入园时间提前n小时的小时 
							"aheadMinutes":"30",// 入园时间限制类型为提前n小时n分时才使用，入园时间提前n分钟的分钟 
						} 
						"autoActivate":{ // 有效期类型为年卡时才使用 
							"type":"0",// 是否有最晚自动开卡时间,0-无，1-有最晚自动开卡 
							"time":"30" // 天数,无最晚自动开发时间时为null 
						} 
					} 
 
					"price" : 10000,  
					"inventory" : 100, 
					"outerId" : "商家编码" 
				}, 
				"222":{} 
			}, 
			"save":true, // 必须，代表是保存的有效数据 
 
				"returnRule":{ 
					"type":"0",      // 0,1,2 
					"value":""      // type 0:""，1:""，2:"卖家输入的文本" 
				}, 
				"changeRule":{ 
					"type":"1",      // 0,1,2 
					"value":""      // type 0:""，1:""，2:"卖家输入的文本" 
				}, 
				"guide": "卖家输入的文本" 
		} 
	} 
} 
&lt;/pre&gt;&lt;br&gt;</desc>
</param>
<param>
<name>sub_stock_at_buy</name>
<type>Boolean</type>
<required>optional</required>
<max_value>1</max_value>
<min_value>0</min_value>
<desc>门票商品库存技术方式（拍下减库存：true，付款减库存：false）</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>optional</required>
<max_length>60</max_length>
<desc>门票商品标题&lt;br /&gt; 支持最大长度为：60&lt;br /&gt; 支持的最大列表长度为：60</desc>
</param>
<param>
<name>video_id</name>
<type>Number</type>
<required>optional</required>
<desc>门票商品视频-视频标识由多媒体中相关接口获取</desc>
</param>
<param>
<name>vip_promoted</name>
<type>Boolean</type>
<required>optional</required>
<desc>门票商品是否参与店铺会员打折</desc>
</param>
</request>
<response>
<param>
<name>ticket_item_process_result</name>
<type>TicketItemProcessResult</type>
<level>Object</level>
<desc>门票商品操作结果，具体请参见TicketItemProcessResult数据结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.ticket.items.get</name>
<desc>批量获取新门票类目商品信息</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需要返回的门票商品（TicketItem）对象字段，如title,price,skus等。&lt;br&gt;可选值：TicketItem商品结构体中所有字段均可返回；多个字段用“,”分隔。</desc>
</param>
<param>
<name>item_ids</name>
<type>Field List</type>
<required>required</required>
<desc>批量获取信息的商品标识。最多不能超过20个。</desc>
</param>
</request>
<response>
<param>
<name>ticket_items</name>
<type>TicketItem</type>
<level>Object Array</level>
<desc>商品信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.ump.promotion.get</name>
<desc>商品优惠详情查询，可查询商品设置的详细优惠。包括限时折扣，满就送等官方优惠以及第三方优惠。</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>商品id</desc>
</param>
</request>
<response>
<param>
<name>promotions</name>
<type>PromotionDisplayTop</type>
<level>Object</level>
<desc>优惠详细信息</desc>
</param>
</response>
</api>
<api>
<name>tmall.brandcat.control.get</name>
<desc>获取到所有的类目，品牌的控制信息，达尔文类目是会以品牌和类目作为控制的力度来管理商品，所有的控制信息可以通过这个接口获取到信息。</desc>
<response>
<param>
<name>brand_cat_control_info</name>
<type>BrandCatControlInfo</type>
<level>Object</level>
<desc>被管控的类目和品牌信息。如何判断一个产品是否被管控，是去品牌的信息和类目信息做一个交集。</desc>
</param>
</response>
</api>
<api>
<name>tmall.brandcat.propinput.get</name>
<desc>针对监管类目品牌关键属性可输入判断逻辑比较复杂，提供简化属性可输入判断的接口，该接口兼容非关键属性和非监管类目品牌</desc>
<request>
<param>
<name>brand_id</name>
<type>Number</type>
<required>required</required>
<desc>品牌ID，如果类目没有品牌，指定null</desc>
</param>
<param>
<name>cid</name>
<type>Number</type>
<required>required</required>
<desc>类目ID</desc>
</param>
<param>
<name>pid</name>
<type>Number</type>
<required>required</required>
<desc>属性ID，如果属性有子属性，请指定最后一级子属性ID，tmall.brandcat.propinput.get返回的即为的该属性ID对应的输入特征，对于有子属性模板的情况指定顶级属性ID即可</desc>
</param>
</request>
<response>
<param>
<name>property_input</name>
<type>PropertyInputDO</type>
<level>Object</level>
<desc>属性输入特征</desc>
</param>
</response>
</api>
<api>
<name>tmall.brandcat.salespro.get</name>
<desc>获取被管控的品牌类目下销售信息，销售信息又分成两中，一种是规格属性，要求针对这个属性创建规格信息，第二种是非规格属性（一般会被称为营销属性），这种信息主要是会影响到价格的变化，在做sku的时候会使用到。</desc>
<request>
<param>
<name>brand_id</name>
<type>Number</type>
<required>required</required>
<desc>被管控的品牌Id</desc>
</param>
<param>
<name>cat_id</name>
<type>Number</type>
<required>required</required>
<desc>被管控的类目Id</desc>
</param>
</request>
<response>
<param>
<name>cat_brand_sale_props</name>
<type>CatBrandSaleProp</type>
<level>Object Array</level>
<desc>获取被管控品牌和类目下的销售属性，注意，一个管控品牌和类目下可能有多个销售属性。</desc>
</param>
</response>
</api>
<api>
<name>tmall.brandcat.suiteconf.get</name>
<desc>该接口获取能发布套餐产品的类目，及对应的套餐配置。</desc>
<response>
<param>
<name>suite_conf_list</name>
<type>SuiteConfDO</type>
<level>Object Array</level>
<desc>套装的配置信息</desc>
</param>
</response>
</api>
<api>
<name>tmall.item.desc.modules.get</name>
<desc>商品描述模块信息获取，包括运营设定的类目级别的模块信息以及用户自定义模块数量约束。</desc>
<request>
<param>
<name>cat_id</name>
<type>Number</type>
<required>required</required>
<desc>淘宝后台发布商品的叶子类目id，可通过taobao.itemcats.get查到。api 访问地址http://api.taobao.com/apidoc/api.htm?spm=0.0.0.0.CFhhk4&amp;path=cid:3-apiId:122</desc>
</param>
<param>
<name>usr_id</name>
<type>Number</type>
<required>required</required>
<desc>商家主帐号id</desc>
</param>
</request>
<response>
<param>
<name>modular_desc_info</name>
<type>ModularDescInfo</type>
<level>Object</level>
<desc>返回描述模块信息</desc>
</param>
</response>
</api>
<api>
<name>tmall.product.books.add</name>
<desc>tmall提供给外部商家的接口，外部商家调用接口，可以将商家的图书的类目以及SPU信息推送到tamll的数据库中</desc>
<request>
<param>
<name>abstract_msg</name>
<type>String</type>
<required>optional</required>
<desc>摘要信息，不支持HTML代码，长度限制5000</desc>
</param>
<param>
<name>app_info</name>
<type>String</type>
<required>required</required>
<max_length>40</max_length>
<desc>用户的Id,需要确定自己id的可以联系接口负责人&lt;br /&gt; 支持最大长度为：40&lt;br /&gt; 支持的最大列表长度为：40</desc>
</param>
<param>
<name>author</name>
<type>String</type>
<required>required</required>
<max_length>80</max_length>
<desc>作者/著者，最多填写三个人名，超出三个人的以“等”结束&lt;br /&gt; 支持最大长度为：80&lt;br /&gt; 支持的最大列表长度为：80</desc>
</param>
<param>
<name>author_area</name>
<type>String</type>
<required>optional</required>
<max_length>80</max_length>
<desc>作者国别/地区，到国家级别&lt;br /&gt; 支持最大长度为：80&lt;br /&gt; 支持的最大列表长度为：80</desc>
</param>
<param>
<name>bar_code</name>
<type>String</type>
<required>required</required>
<max_length>20</max_length>
<desc>条形码，数字，共13位，9787开头&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>book_bind</name>
<type>String</type>
<required>required</required>
<max_length>10</max_length>
<desc>装帧&lt;br /&gt; 支持最大长度为：10&lt;br /&gt; 支持的最大列表长度为：10</desc>
</param>
<param>
<name>book_size</name>
<type>Number</type>
<required>optional</required>
<desc>开本，如：16  表示16开本</desc>
</param>
<param>
<name>book_version</name>
<type>Number</type>
<required>optional</required>
<max_length>10</max_length>
<desc>版本&lt;br /&gt; 支持的最大列表长度为：10</desc>
</param>
<param>
<name>catalog</name>
<type>String</type>
<required>optional</required>
<max_length>8000</max_length>
<desc>目录，不支持HTML代码，长度限制为8000&lt;br /&gt; 支持最大长度为：8000&lt;br /&gt; 支持的最大列表长度为：8000</desc>
</param>
<param>
<name>category_id</name>
<type>Number</type>
<required>required</required>
<max_list_size>40</max_list_size>
<desc>类目id</desc>
</param>
<param>
<name>china_classify_no</name>
<type>String</type>
<required>optional</required>
<max_length>30</max_length>
<desc>中图分类号，英文字母加数字组成&lt;br /&gt; 支持最大长度为：30&lt;br /&gt; 支持的最大列表长度为：30</desc>
</param>
<param>
<name>cip</name>
<type>String</type>
<required>optional</required>
<max_length>50</max_length>
<desc>cip数据编号，真实格式：（XXX）第***号， 
导入时，格式为XXX-***&lt;br /&gt; 支持最大长度为：50&lt;br /&gt; 支持的最大列表长度为：50</desc>
</param>
<param>
<name>commentator</name>
<type>String</type>
<required>optional</required>
<max_length>40</max_length>
<desc>点评者，只写一个人的名字，超出的以“等”结束&lt;br /&gt; 支持最大长度为：40&lt;br /&gt; 支持的最大列表长度为：40</desc>
</param>
<param>
<name>custom_id</name>
<type>String</type>
<required>required</required>
<desc>用户自己的Id号</desc>
</param>
<param>
<name>deputy_name</name>
<type>String</type>
<required>required</required>
<max_length>150</max_length>
<desc>图书名称(正副书名)&lt;br /&gt; 支持最大长度为：150&lt;br /&gt; 支持的最大列表长度为：150</desc>
</param>
<param>
<name>drawor</name>
<type>String</type>
<required>optional</required>
<max_length>40</max_length>
<desc>绘图者，只写一个人的名字，超出的以“等”结束&lt;br /&gt; 支持最大长度为：40&lt;br /&gt; 支持的最大列表长度为：40</desc>
</param>
<param>
<name>editor</name>
<type>String</type>
<required>optional</required>
<max_length>40</max_length>
<desc>编者，只写一个人的名字，超出的以“等”结束&lt;br /&gt; 支持最大长度为：40&lt;br /&gt; 支持的最大列表长度为：40</desc>
</param>
<param>
<name>graphor</name>
<type>String</type>
<required>optional</required>
<max_length>40</max_length>
<desc>摄影者，只写一个人的名字，超出的以“等”结束&lt;br /&gt; 支持最大长度为：40&lt;br /&gt; 支持的最大列表长度为：40</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>optional</required>
<desc>上传图片，图片上传使用byte[]类型</desc>
</param>
<param>
<name>isbn</name>
<type>String</type>
<required>required</required>
<max_length>13</max_length>
<desc>不带‘-’的图书ISBN号 
1. 位数限定：10位 末尾校验,7开头 
2. 位数限定：13位、开头数字限定： 9787开头&lt;br /&gt; 支持最大长度为：13&lt;br /&gt; 支持的最大列表长度为：13</desc>
</param>
<param>
<name>item_ids</name>
<type>String</type>
<required>optional</required>
<desc>这条记录对应的淘宝的Ids</desc>
</param>
<param>
<name>narrator</name>
<type>String</type>
<required>optional</required>
<max_length>40</max_length>
<desc>口述者，只写一个人的名字，超出的以“等”结束&lt;br /&gt; 支持最大长度为：40&lt;br /&gt; 支持的最大列表长度为：40</desc>
</param>
<param>
<name>part_name</name>
<type>String</type>
<required>optional</required>
<max_length>150</max_length>
<desc>分册名&lt;br /&gt; 支持最大长度为：150&lt;br /&gt; 支持的最大列表长度为：150</desc>
</param>
<param>
<name>part_no</name>
<type>Number</type>
<required>optional</required>
<max_length>10</max_length>
<desc>分册号&lt;br /&gt; 支持的最大列表长度为：10</desc>
</param>
<param>
<name>plottor</name>
<type>String</type>
<required>optional</required>
<max_length>40</max_length>
<desc>策划者，只写一个人的名字，超出的以“等”结束&lt;br /&gt; 支持最大长度为：40&lt;br /&gt; 支持的最大列表长度为：40</desc>
</param>
<param>
<name>price</name>
<type>String</type>
<required>required</required>
<max_length>40</max_length>
<desc>价格支持整数和小数，小数保留小数点后两位，若有多个价格，价格之间通过','号分隔&lt;br /&gt; 支持最大长度为：40&lt;br /&gt; 支持的最大列表长度为：40</desc>
</param>
<param>
<name>publish_company</name>
<type>String</type>
<required>optional</required>
<max_length>80</max_length>
<desc>出版社名称&lt;br /&gt; 支持最大长度为：80&lt;br /&gt; 支持的最大列表长度为：80</desc>
</param>
<param>
<name>publish_ym</name>
<type>String</type>
<required>optional</required>
<desc>出版时间，格式必须注意：年份/月份</desc>
</param>
<param>
<name>regin_year</name>
<type>String</type>
<required>optional</required>
<max_length>10</max_length>
<desc>年号，必须是完整的年份，如：2013，当输入的值不是四位或者首位大于2时，调接口失败&lt;br /&gt; 支持最大长度为：10&lt;br /&gt; 支持的最大列表长度为：10</desc>
</param>
<param>
<name>scholisat</name>
<type>String</type>
<required>optional</required>
<max_length>40</max_length>
<desc>注释者，只写一个人的名字，超出的以“等”结束&lt;br /&gt; 支持最大长度为：40&lt;br /&gt; 支持的最大列表长度为：40</desc>
</param>
<param>
<name>series_books_name</name>
<type>String</type>
<required>optional</required>
<max_length>150</max_length>
<desc>丛书名&lt;br /&gt; 支持最大长度为：150&lt;br /&gt; 支持的最大列表长度为：150</desc>
</param>
<param>
<name>spu_img</name>
<type>String</type>
<required>optional</required>
<max_length>150</max_length>
<desc>此字段废弃&lt;br /&gt; 支持最大长度为：150&lt;br /&gt; 支持的最大列表长度为：150</desc>
</param>
<param>
<name>summary</name>
<type>String</type>
<required>optional</required>
<max_length>5000</max_length>
<desc>简介，不支持HTML代码，长度不能超过5000&lt;br /&gt; 支持最大长度为：5000&lt;br /&gt; 支持的最大列表长度为：5000</desc>
</param>
<param>
<name>translator</name>
<type>String</type>
<required>optional</required>
<max_length>40</max_length>
<desc>译者，只写一个人的名字，超出的以“等”结束&lt;br /&gt; 支持最大长度为：40&lt;br /&gt; 支持的最大列表长度为：40</desc>
</param>
</request>
<response>
<param>
<name>product_books</name>
<type>ProductBooks</type>
<level>Object</level>
<desc>请求相应结构</desc>
</param>
</response>
</api>
<api>
<name>tmall.product.spec.add</name>
<desc>增加产品规格</desc>
<request>
<param>
<name>barcode</name>
<type>String</type>
<required>optional</required>
<desc>产品二维码</desc>
</param>
<param>
<name>certified_pic_str</name>
<type>String</type>
<required>optional</required>
<desc>存放产品规格认证类型-认证图片url映射信息，格式为k:v;k:v;，其中key为认证类型数字id，value为调用tmall.product.spec.pic.upload返回的认证图片url文本</desc>
</param>
<param>
<name>certified_txt_str</name>
<type>String</type>
<required>optional</required>
<desc>存放产品规格认证类型-认证文本映射信息，格式为k:v;k:v;，其中key为认证类型数字id，value为认证文本值</desc>
</param>
<param>
<name>change_prop</name>
<type>String</type>
<required>optional</required>
<desc>产品基础色，数据格式为：pid:vid:rvid1,rvid2,rvid3;pid:vid:rvid1</desc>
</param>
<param>
<name>customer_spec_props</name>
<type>String</type>
<required>optional</required>
<desc>用户自定义销售属性，结构：pid1:value1;pid2:value2。在</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>required</required>
<desc>产品图片</desc>
</param>
<param>
<name>label_price</name>
<type>Number</type>
<required>optional</required>
<max_value>999999999</max_value>
<min_value>0</min_value>
<desc>产品规格吊牌价，以分为单位，无默认值，上限999999999&lt;br /&gt; 支持最大值为：999999999&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>market_time</name>
<type>Date</type>
<required>optional</required>
<desc>产品上市时间</desc>
</param>
<param>
<name>product_code</name>
<type>String</type>
<required>optional</required>
<desc>产品货号</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>required</required>
<desc>产品ID</desc>
</param>
<param>
<name>spec_props</name>
<type>String</type>
<required>optional</required>
<desc>产品的规格属性</desc>
</param>
<param>
<name>spec_props_alias</name>
<type>String</type>
<required>optional</required>
<max_length>60</max_length>
<desc>规格属性别名,只允许传颜色别名&lt;br /&gt; 支持最大长度为：60&lt;br /&gt; 支持的最大列表长度为：60</desc>
</param>
</request>
<response>
<param>
<name>product_spec</name>
<type>ProductSpec</type>
<level>Object</level>
<desc>产品规格对象</desc>
</param>
</response>
</api>
<api>
<name>tmall.product.spec.get</name>
<desc>通过当个的spec_id获取到这个产品规格的信息，主要是因为产品规格是要经过审核的，所以通过这个接口可以获取到是否通过审核 
通过参看这个ProductSpec的status判断： 
1:表示审核通过 
3:表示等待审核。 
如果你的id找不到数据，那么就是审核被拒绝。</desc>
<request>
<param>
<name>spec_id</name>
<type>Number</type>
<required>required</required>
<desc>要获取信息的产品规格信息。</desc>
</param>
</request>
<response>
<param>
<name>product_spec</name>
<type>ProductSpec</type>
<level>Object</level>
<desc>返回的产品规格信息，注意，这个产品规格信息可能是等待审核的，不一定可用。根据状态判断1：表示审核通过 
3：表示等待审核。</desc>
</param>
</response>
</api>
<api>
<name>tmall.product.spec.pic.upload</name>
<desc>上传指定类型的产品规格认证文件，并返回存有上传成功图片url的产品规格对象</desc>
<request>
<param>
<name>certify_pic</name>
<type>byte[]</type>
<required>required</required>
<desc>上传的认证图片文件</desc>
</param>
<param>
<name>certify_type</name>
<type>Number</type>
<required>required</required>
<desc>上传的认证图片的认证类型&lt;br&gt;
1：代表产品包装正面图&lt;br&gt;
2：代表完整产品资质&lt;br&gt;
3：代表产品包装反面图&lt;br&gt;
4：代表产品包装侧面图&lt;br&gt;
5：代表产品包装条形码特写&lt;br&gt;
6：代表特殊用途化妆品批准文号&lt;br&gt;
7：代表3C认证图标&lt;br&gt;</desc>
</param>
</request>
<response>
<param>
<name>spec_pic_url</name>
<type>String</type>
<level>Basic</level>
<desc>上传成功的产品规格认证图片url</desc>
</param>
</response>
</api>
<api>
<name>tmall.product.specs.get</name>
<desc>按product_id或品牌下载产品规格，返回一组的产品规格信息。</desc>
<request>
<param>
<name>cat_id</name>
<type>Number</type>
<required>optional</required>
<desc>类目的ID号，该id必须和properties同时传入。 
而且只有当product_id不传入的时候才起效果。</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>optional</required>
<desc>产品的ID。这个不能和properties和cat_id同时起效果</desc>
</param>
<param>
<name>properties</name>
<type>String</type>
<required>optional</required>
<desc>关键属性的字符串，pid:vid;pid:vid 
该字段必须和cat_id同时传入才起效果。 而且只有当product_id不传入的时候才起效果。</desc>
</param>
</request>
<response>
<param>
<name>product_specs</name>
<type>ProductSpec</type>
<level>Object Array</level>
<desc>返回一组产品规格信息。</desc>
</param>
</response>
</api>
<api>
<name>tmall.product.specs.ticket.get</name>
<desc>批量根据specId查询产品规格审核信息包括产品规格状态，申请人，拒绝原因等</desc>
<request>
<param>
<name>spec_ids</name>
<type>String</type>
<required>required</required>
<desc>产品规格ID，多个用逗号分隔</desc>
</param>
</request>
<response>
<param>
<name>tickets</name>
<type>Ticket</type>
<level>Object Array</level>
<desc>产品规格审核单信息</desc>
</param>
</response>
</api>
<api>
<name>tmall.product.suitespecs.get</name>
<desc>套装产品，关联规格获取，和tmall.product.specs.get相似。仅现套装的情况下使用，返回的规格number有直</desc>
<request>
<param>
<name>cat_id</name>
<type>Number</type>
<required>optional</required>
<desc>类目的ID号，该id必须和properties同时传入。 
而且只有当product_id不传入的时候才起效果。</desc>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<required>optional</required>
<desc>产品的ID。这个不能和properties和cat_id同时起效果</desc>
</param>
<param>
<name>properties</name>
<type>String</type>
<required>optional</required>
<desc>关键属性的字符串，pid:vid;pid:vid 
该字段必须和cat_id同时传入才起效果。 而且只有当product_id不传入的时候才起效果。</desc>
</param>
</request>
<response>
<param>
<name>product_specs</name>
<type>ProductSpec</type>
<level>Object Array</level>
<desc>返回一组产品规格信息。</desc>
</param>
</response>
</api>
<api>
<name>tmall.product.template.get</name>
<desc>产品模板获取接口，对于非关键属性的类目，发布达尔文(监管)产品时，必须先根据类目获取产品模板。&lt;br/&gt; 
产品模板定义产品发布需要的类目属性，包括：&lt;br/&gt; 
   关键属性:关键属性可以在类目上不存在。不存在的PID，默认为输入，没有子属性。属性名称在prop_name_str中取 
   绑定属性:内容为属性ID(PID)的列表,绑定属性肯定在类目上有，对应属性的类目特征，子属性请根据PID到类目上去取&lt;br/&gt; 
   过滤属性:内容有属性ID(PID)列表，很重要的属性，filter_properties包含的属性，必须填写&lt;br/&gt; 
   如果获取不到模板，非关键属性类目是不能发布产品的&lt;br/&gt;</desc>
<request>
<param>
<name>cid</name>
<type>Number</type>
<required>required</required>
<desc>类目ID</desc>
</param>
</request>
<response>
<param>
<name>template</name>
<type>SpuTemplateDO</type>
<level>Object</level>
<desc>见SpuTemplateDO说明</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.amount.get</name>
<desc>卖家查询该笔交易订单的资金帐务相关的数据； 
1. 只供卖家使用，买家不可使用 
2. 可查询所有的状态的订单，但不同状态时订单的相关数据可能会有不同</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>订单帐务详情需要返回的字段信息，可选值如下： 
1. TradeAmount中可指定的fields： 
tid,alipay_no,created,pay_time,end_time,total_fee,payment,post_fee,cod_fee,commission_fee,buyer_obtain_point_fee 
2. OrderAmount中可指定的fields：order_amounts.oid,order_amounts.title,order_amounts.num_iid, 
order_amounts.sku_properties_name,order_amounts.sku_id,order_amounts.num,order_amounts.price,order_amounts.discount_fee,order_amounts.adjust_fee,order_amounts.payment,order_amounts.promotion_name 
3. order_amounts(返回OrderAmount的所有内容) 
4. promotion_details(指定该值会返回主订单的promotion_details中除id之外的所有字段)</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<max_value>9223372036854775807</max_value>
<min_value>-9223372036854775808</min_value>
<desc>订单交易编号&lt;br /&gt; 支持最大值为：9223372036854775807&lt;br /&gt; 支持最小值为：-9223372036854775808</desc>
</param>
</request>
<response>
<param>
<name>trade_amount</name>
<type>TradeAmount</type>
<level>Object</level>
<desc>主订单的财务信息详情</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.close</name>
<desc>关闭一笔订单，可以是主订单或子订单。当订单从创建到关闭时间小于10s的时候，会报“CLOSE_TRADE_TOO_FAST”错误。</desc>
<request>
<param>
<name>close_reason</name>
<type>String</type>
<required>required</required>
<desc>交易关闭原因。可以选择的理由有：
1.未及时付款
2.买家联系不上
3.谢绝还价
4.商品瑕疵
5.协商不一致
6.买家不想买
7.与买家协商一致</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>主订单或子订单编号。</desc>
</param>
</request>
<response>
<param>
<name>trade</name>
<type>Trade</type>
<level>Object</level>
<desc>关闭交易时返回的Trade信息，可用字段有tid和modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.confirmfee.get</name>
<desc>获取交易确认收货费用 
可以获取主订单或子订单的确认收货费用</desc>
<request>
<param>
<name>is_detail</name>
<type>String</type>
<required>required</required>
<desc>是否是子订单。可选值:IS_FATHER(父订单),IS_CHILD(子订单)</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>交易编号，或子订单编号</desc>
</param>
</request>
<response>
<param>
<name>trade_confirm_fee</name>
<type>TradeConfirmFee</type>
<level>Object</level>
<desc>获取到的交易确认收货费用</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.fullinfo.get</name>
<desc>获取单笔交易的详细信息 
&lt;br/&gt;1. 只有在交易成功的状态下才能取到交易佣金，其它状态下取到的都是零或空值  
&lt;br/&gt;2. 只有单笔订单的情况下Trade数据结构中才包含商品相关的信息  
&lt;br/&gt;3. 获取到的Order中的payment字段在单笔子订单时包含物流费用，多笔子订单时不包含物流费用 
&lt;br/&gt;4. 请按需获取字段，减少TOP系统的压力</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>1.Trade中可以指定返回的fields：seller_nick, buyer_nick, title, type, created, tid, seller_rate,buyer_flag, buyer_rate, status, payment, adjust_fee, post_fee, total_fee, pay_time, end_time, modified, consign_time, buyer_obtain_point_fee, point_fee, real_point_fee, received_payment, commission_fee, buyer_memo, seller_memo, alipay_no,alipay_id,buyer_message, pic_path, num_iid, num, price, buyer_alipay_no, receiver_name, receiver_state, receiver_city, receiver_district, receiver_address, receiver_zip, receiver_mobile, receiver_phone,seller_flag, seller_alipay_no, seller_mobile, seller_phone, seller_name, seller_email, available_confirm_fee, has_post_fee, timeout_action_time, snapshot_url, cod_fee, cod_status, shipping_type, trade_memo, is_3D,buyer_email,buyer_area, trade_from,is_lgtype,is_force_wlb,is_brand_sale,buyer_cod_fee,discount_fee,seller_cod_fee,express_agency_fee,invoice_name,service_orders,credit_cardfee,step_trade_status,step_paid_fee,mark_desc,has_yfx,yfx_fee,yfx_id,yfx_type,trade_source(注：当该授权用户为卖家时不能查看买家buyer_memo,buyer_flag),eticket_ext,send_time, is_daixiao,is_part_consign, arrive_interval, arrive_cut_time, consign_interval,zero_purchase,alipay_point,pcc_af,2.Order中可以指定返回fields：orders.title, orders.pic_path, orders.price, orders.num, orders.num_iid, orders.sku_id, orders.refund_status, orders.status, orders.oid, orders.total_fee, orders.payment, orders.discount_fee, orders.adjust_fee, orders.snapshot_url, orders.timeout_action_time，orders.sku_properties_name, orders.item_meal_name, orders.item_meal_id,orders.buyer_rate, orders.seller_rate, orders.outer_iid, orders.outer_sku_id, orders.refund_id, orders.seller_type, orders.is_oversold,orders.end_time,orders.order_from,orders.consign_time,orders.shipping_type,orders.logistics_company,orders.invoice_no, orders.is_daixiao 
3.fields：orders（返回Order的所有内容） 
4.flelds：promotion_details(返回promotion_details所有内容，优惠详情),invoice_name(发票抬头),orders.is_www(子订单是否是www订单,orders.store_code(发货的仓库编码)&lt;br&gt; 
5. field:service_tags(返回物流标签)</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<max_value>9223372036854775807</max_value>
<min_value>1</min_value>
<desc>交易编号&lt;br /&gt; 支持最大值为：9223372036854775807&lt;br /&gt; 支持最小值为：1</desc>
</param>
</request>
<response>
<param>
<name>trade</name>
<type>Trade</type>
<level>Object</level>
<desc>搜索到的交易信息列表，返回的Trade和Order中包含的具体信息为入参fields请求的字段信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.get</name>
<desc>获取单笔交易的部分信息</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需要返回的字段。目前支持有：&lt;br&gt;

1. Trade中可以指定返回的fields:seller_nick, buyer_nick, title, type, created, tid, seller_rate, buyer_rate, status, payment, discount_fee, adjust_fee, post_fee, total_fee, pay_time, end_time, modified, consign_time, buyer_obtain_point_fee, point_fee, real_point_fee, received_payment, commission_fee, buyer_memo, seller_memo, alipay_no, buyer_message, pic_path, num_iid, num, price, cod_fee, cod_status, shipping_type， is_daixiao，consign_interval，arrive_interval，arrive_cut_time &lt;br&gt;
2. Order中可以指定返回fields:orders.title, orders.pic_path, orders.price, orders.num, orders.num_iid, orders.sku_id, orders.refund_status, orders.status, orders.oid, orders.total_fee, orders.payment, orders.discount_fee, orders.adjust_fee, orders.sku_properties_name, orders.item_meal_name, orders.outer_sku_id, orders.outer_iid, orders.buyer_rate, orders.seller_rate， orders.is_daixiao &lt;br&gt;
3. fields：orders（返回Order中的所有允许返回的字段）,orders.is_wwww(是否是www订单),orders.store_code(仓库代码）&lt;br&gt;
4. field:service_tags(返回物流标签)</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>交易编号</desc>
</param>
</request>
<response>
<param>
<name>trade</name>
<type>Trade</type>
<level>Object</level>
<desc>搜索到的交易信息列表，返回的Trade和Order中包含的具体信息为入参fields请求的字段信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.memo.add</name>
<desc>根据登录用户的身份（买家或卖家），自动添加相应的交易备注,不能重复调用些接口添加备注，需要更新备注请用taobao.trade.memo.update</desc>
<request>
<param>
<name>flag</name>
<type>Number</type>
<required>optional</required>
<max_value>5</max_value>
<min_value>0</min_value>
<desc>交易备注旗帜，可选值为：0(灰色), 1(红色), 2(黄色), 3(绿色), 4(蓝色), 5(粉红色)，默认值为0&lt;br /&gt; 支持最大值为：5&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>memo</name>
<type>String</type>
<required>required</required>
<desc>交易备注。最大长度: 1000个字节</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>交易编号</desc>
</param>
</request>
<response>
<param>
<name>trade</name>
<type>Trade</type>
<level>Object</level>
<desc>对一笔交易添加备注后返回其对应的Trade，Trade中可用的返回字段有tid和created</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.memo.update</name>
<desc>需要商家或以上权限才可调用此接口，可重复调用本接口更新交易备注，本接口同时具有添加备注的功能</desc>
<request>
<param>
<name>flag</name>
<type>Number</type>
<required>optional</required>
<max_value>5</max_value>
<min_value>0</min_value>
<desc>卖家交易备注旗帜，可选值为：0(灰色), 1(红色), 2(黄色), 3(绿色), 4(蓝色), 5(粉红色)，默认值为0&lt;br /&gt; 支持最大值为：5&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>memo</name>
<type>String</type>
<required>optional</required>
<desc>卖家交易备注。最大长度: 1000个字节</desc>
</param>
<param>
<name>reset</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否对memo的值置空 
若为true，则不管传入的memo字段的值是否为空，都将会对已有的memo值清空，慎用； 
若用false，则会根据memo是否为空来修改memo的值：若memo为空则忽略对已有memo字段的修改，若memo非空，则使用新传入的memo覆盖已有的memo的值</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>交易编号</desc>
</param>
</request>
<response>
<param>
<name>trade</name>
<type>Trade</type>
<level>Object</level>
<desc>更新交易的备注信息后返回的Trade，其中可用字段为tid和modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.ordersku.update</name>
<desc>只能更新发货前子订单的销售属性  
只能更新价格相同的销售属性。对于拍下减库存的交易会同步更新销售属性的库存量。对于旺店的交易，要使用商品扩展信息中的SKU价格来比较。  
必须使用sku_id或sku_props中的一个参数来更新，如果两个都传的话，sku_id优先</desc>
<request>
<param>
<name>oid</name>
<type>Number</type>
<required>required</required>
<desc>子订单编号（对于单笔订单的交易可以传交易编号）。</desc>
</param>
<param>
<name>sku_id</name>
<type>Number</type>
<required>special</required>
<desc>销售属性编号，可以通过taobao.item.skus.get获取订单对应的商品的所有销售属性。</desc>
</param>
<param>
<name>sku_props</name>
<type>String</type>
<required>special</required>
<desc>销售属性组合串，格式：p1:v1;p2:v2，如：1627207:28329;20509:28314。可以通过taobao.item.skus.get获取订单对应的商品的所有销售属性。</desc>
</param>
</request>
<response>
<param>
<name>order</name>
<type>Order</type>
<level>Object</level>
<desc>只返回oid和modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.postage.update</name>
<desc>修改订单邮费接口，通过传入订单编号和邮费价格，修改订单的邮费，返回修改时间modified,邮费post_fee,总费用total_fee。</desc>
<request>
<param>
<name>post_fee</name>
<type>String</type>
<required>required</required>
<desc>邮费价格(邮费单位是元）</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>主订单编号</desc>
</param>
</request>
<response>
<param>
<name>trade</name>
<type>Trade</type>
<level>Object</level>
<desc>返回trade类型，其中包含修改时间modified，修改邮费post_fee，修改后的总费用total_fee和买家实付款payment</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.receivetime.delay</name>
<desc>延长交易收货时间</desc>
<request>
<param>
<name>days</name>
<type>Number</type>
<required>required</required>
<max_value>10</max_value>
<min_value>3</min_value>
<desc>延长收货的天数，可选值为：3, 5, 7, 10。&lt;br /&gt; 支持最大值为：10&lt;br /&gt; 支持最小值为：3</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>主订单号</desc>
</param>
</request>
<response>
<param>
<name>trade</name>
<type>Trade</type>
<level>Object</level>
<desc>更新后的交易数据，只包括tid和modified两个字段。</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.shippingaddress.update</name>
<desc>只能更新一笔交易里面的买家收货地址  
只能更新发货前（即买家已付款，等待卖家发货状态）的交易的买家收货地址  
更新后的发货地址可以通过taobao.trade.fullinfo.get查到  
参数中所说的字节为GBK编码的（英文和数字占1字节，中文占2字节）</desc>
<request>
<param>
<name>receiver_address</name>
<type>String</type>
<required>optional</required>
<max_length>228</max_length>
<desc>收货地址。最大长度为228个字节。&lt;br /&gt; 支持最大长度为：228&lt;br /&gt; 支持的最大列表长度为：228</desc>
</param>
<param>
<name>receiver_city</name>
<type>String</type>
<required>optional</required>
<max_length>32</max_length>
<desc>城市。最大长度为32个字节。如：杭州&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>receiver_district</name>
<type>String</type>
<required>optional</required>
<max_length>32</max_length>
<desc>区/县。最大长度为32个字节。如：西湖区&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>receiver_mobile</name>
<type>String</type>
<required>optional</required>
<max_length>30</max_length>
<desc>移动电话。最大长度为30个字节。&lt;br /&gt; 支持最大长度为：30&lt;br /&gt; 支持的最大列表长度为：30</desc>
</param>
<param>
<name>receiver_name</name>
<type>String</type>
<required>optional</required>
<max_length>50</max_length>
<desc>收货人全名。最大长度为50个字节。&lt;br /&gt; 支持最大长度为：50&lt;br /&gt; 支持的最大列表长度为：50</desc>
</param>
<param>
<name>receiver_phone</name>
<type>String</type>
<required>optional</required>
<max_length>30</max_length>
<desc>固定电话。最大长度为30个字节。&lt;br /&gt; 支持最大长度为：30&lt;br /&gt; 支持的最大列表长度为：30</desc>
</param>
<param>
<name>receiver_state</name>
<type>String</type>
<required>optional</required>
<max_length>32</max_length>
<desc>省份。最大长度为32个字节。如：浙江&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>receiver_zip</name>
<type>String</type>
<required>optional</required>
<max_length>6</max_length>
<desc>邮政编码。必须由6个数字组成。&lt;br /&gt; 支持最大长度为：6&lt;br /&gt; 支持的最大列表长度为：6</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>交易编号。</desc>
</param>
</request>
<response>
<param>
<name>trade</name>
<type>Trade</type>
<level>Object</level>
<desc>交易结构</desc>
</param>
</response>
</api>
<api>
<name>taobao.trade.snapshot.get</name>
<desc>交易快照查询 
目前只支持类型为“旺店标准版(600)”或“旺店入门版(610)”的交易  
对于“旺店标准版”类型的交易，返回的snapshot字段为交易快照编号  
对于“旺店入门版”类型的交易，返回的snapshot字段为JSON结构的数据(其中的shopPromotion包含了优惠，积分等信息）</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需要返回的字段列表。现只支持："snapshot"字段</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>交易编号</desc>
</param>
</request>
<response>
<param>
<name>trade</name>
<type>Trade</type>
<level>Object</level>
<desc>只包含Trade中的tid和snapshot、子订单Order中的oid和snapshot</desc>
</param>
</response>
</api>
<api>
<name>taobao.trades.sold.get</name>
<desc>搜索当前会话用户作为卖家已卖出的交易数据（只能获取到三个月以内的交易信息） 
&lt;br/&gt;1. 返回的数据结果是以订单的创建时间倒序排列的。 
&lt;br/&gt;2. 返回的数据结果只包含了订单的部分数据，可通过taobao.trade.fullinfo.get获取订单详情。 
&lt;br/&gt; &lt;span style="color:red"&gt;注意：type字段的说明，如果该字段不传，接口默认只查4种类型订单，非默认查询的订单是不返回。遇到订单查不到的情况的，通常都是这个原因造成。解决办法就是type加上订单类型就可正常返回了。用taobao.trade.fullinfo.get 查订单fields返回type 很容易的能知道订单的类型（type）&lt;/span&gt;</desc>
<request>
<param>
<name>buyer_nick</name>
<type>String</type>
<required>optional</required>
<desc>买家昵称</desc>
</param>
<param>
<name>end_created</name>
<type>Date</type>
<required>optional</required>
<desc>查询交易创建时间结束。格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>ext_type</name>
<type>String</type>
<required>optional</required>
<desc>可选值有ershou(二手市场的订单）,service（商城服务子订单）mark（双十一大促活动异常订单）作为扩展类型筛选只能做单个ext_type查询，不能全部查询所有的ext_type类型</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需要返回的字段。目前支持有：&lt;br&gt; 
1. Trade中可以指定返回的fields:&lt;br&gt; 
seller_nick, buyer_nick, title, type, created,  tid, seller_rate,seller_can_rate, buyer_rate,can_rate, status, payment, discount_fee, adjust_fee, post_fee, total_fee, pay_time, end_time, modified, consign_time, buyer_obtain_point_fee, point_fee, real_point_fee, received_payment,  pic_path, num_iid, num, price, cod_fee, cod_status, shipping_type, receiver_name, receiver_state, receiver_city, receiver_district, receiver_address, receiver_zip, receiver_mobile, receiver_phone,seller_flag,alipay_id,alipay_no,is_lgtype,is_force_wlb,is_brand_sale,buyer_area,has_buyer_message, credit_card_fee, lg_aging_type, lg_aging, step_trade_status,step_paid_fee,mark_desc,has_yfx,yfx_fee,yfx_id,yfx_type,trade_source,send_time,is_daixiao,is_wt,is_part_consign,zero_purchase 
&lt;br&gt; 
2. Order中可以指定返回fields：orders.title, orders.pic_path, orders.price, orders.num, orders.num_iid, orders.sku_id, orders.refund_status, orders.status, orders.oid, orders.total_fee, orders.payment, orders.discount_fee, orders.adjust_fee, orders.sku_properties_name, orders.item_meal_name, orders.buyer_rate, orders.seller_rate, orders.outer_iid, orders.outer_sku_id, orders.refund_id, orders.seller_type, orders.end_time,orders.order_from,orders.consign_time,orders.shipping_type,orders.logistics_company,orders.invoice_no,orders.is_daixiao&lt;br&gt; 
3. fields：orders（返回2中Order的所有内容） 
4.fields:service_orders(返回service_order中所有内容)</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码。取值范围:大于零的整数; 默认值:1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页条数。取值范围:大于零的整数; 默认值:40;最大值:100</desc>
</param>
<param>
<name>rate_status</name>
<type>String</type>
<required>optional</required>
<desc>评价状态，默认查询所有评价状态的数据，除了默认值外每次只能查询一种状态。&lt;br&gt;
可选值：
RATE_UNBUYER(买家未评)
RATE_UNSELLER(卖家未评)
RATE_BUYER_UNSELLER(买家已评，卖家未评)
RATE_UNBUYER_SELLER(买家未评，卖家已评)
RATE_BUYER_SELLER(买家已评,卖家已评)</desc>
</param>
<param>
<name>start_created</name>
<type>Date</type>
<required>optional</required>
<desc>查询三个月内交易创建时间开始。格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>交易状态，默认查询所有交易状态的数据，除了默认值外每次只能查询一种状态。 
可选值： 
TRADE_NO_CREATE_PAY(没有创建支付宝交易) 
WAIT_BUYER_PAY(等待买家付款) 
WAIT_SELLER_SEND_GOODS(等待卖家发货,即:买家已付款) 
SELLER_CONSIGNED_PART（卖家部分发货） 
WAIT_BUYER_CONFIRM_GOODS(等待买家确认收货,即:卖家已发货) 
TRADE_BUYER_SIGNED(买家已签收,货到付款专用) 
TRADE_FINISHED(交易成功) 
TRADE_CLOSED(交易关闭) 
TRADE_CLOSED_BY_TAOBAO(交易被淘宝关闭) 
ALL_WAIT_PAY(包含：WAIT_BUYER_PAY、TRADE_NO_CREATE_PAY) 
ALL_CLOSED(包含：TRADE_CLOSED、TRADE_CLOSED_BY_TAOBAO) 
WAIT_PRE_AUTH_CONFIRM(余额宝0元购合约中)</desc>
</param>
<param>
<name>tag</name>
<type>String</type>
<required>optional</required>
<desc>卖家对交易的自定义分组标签，目前可选值为：time_card（点卡软件代充），fee_card（话费软件代充）</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>optional</required>
<desc>交易类型列表，同时查询多种交易类型可用逗号分隔。&lt;span style="color:red;font-weight: bold;"&gt;默认同时查询guarantee_trade, auto_delivery, ec, cod,step的5种交易类型的数据；查询所有交易类型的数据，需要设置下面全部可选值。&lt;/span&gt; 
可选值： 
fixed(一口价) 
auction(拍卖) 
guarantee_trade(一口价、拍卖) 
step(分阶段付款，万人团，阶梯团订单） 
independent_simple_trade(旺店入门版交易) 
independent_shop_trade(旺店标准版交易) 
auto_delivery(自动发货) 
ec(直冲) 
cod(货到付款) 
game_equipment(游戏装备) 
shopex_trade(ShopEX交易) 
netcn_trade(万网交易) 
external_trade(统一外部交易) 
instant_trade (即时到账) 
b2c_cod(大商家货到付款) 
hotel_trade(酒店类型交易) 
super_market_trade(商超交易) 
super_market_cod_trade(商超货到付款交易) 
taohua(淘花网交易类型） 
waimai(外卖交易类型） 
nopaid（即时到帐/趣味猜交易类型） 
step (万人团) eticket(电子凭证)  
tmall_i18n（天猫国际）;nopaid （无付款交易）insurance_plus（保险）finance（基金） 
注：guarantee_trade是一个组合查询条件，并不是一种交易类型，获取批量或单个订单中不会返回此种类型的订单。 
pre_auth_type(预授权0元购)</desc>
</param>
<param>
<name>use_has_next</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否启用has_next的分页方式，如果指定true,则返回的结果中不包含总记录数，但是会新增一个是否存在下一页的的字段，通过此种方式获取增量交易，接口调用成功率在原有的基础上有所提升。</desc>
</param>
</request>
<response>
<param>
<name>has_next</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否存在下一页</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到的交易信息总数</desc>
</param>
<param>
<name>trades</name>
<type>Trade</type>
<level>Object Array</level>
<desc>搜索到的交易信息列表，返回的Trade和Order中包含的具体信息为入参fields请求的字段信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.trades.sold.increment.get</name>
<desc>搜索当前会话用户作为卖家已卖出的增量交易数据（只能获取到三个月以内的交易信息） 
&lt;br/&gt;1. 一次请求只能查询时间跨度为一天的增量交易记录，即end_modified - start_modified &lt;= 1天。 
&lt;br/&gt;2. 返回的数据结果是以订单的修改时间倒序排列的，通过从后往前翻页的方式可以避免漏单问题。 
&lt;br/&gt;3. 返回的数据结果只包含了订单的部分数据，可通过taobao.trade.fullinfo.get获取订单详情。 
&lt;br/&gt;4. &lt;span style="color:red"&gt;使用&lt;a href="http://open.taobao.com/doc/detail.htm?spm=0.0.0.0.F9TTxy&amp;id=101744"&gt;消息服务&lt;/a&gt;监听订单变更事件，可以实时获取订单更新数据。&lt;/span&gt; 
&lt;br/&gt;注意：type字段的说明，如果该字段不传，接口默认只查4种类型订单，非默认查询的订单是不返回。遇到订单查不到的情况的，通常都是这个原因造成。解决办法就是type加上订单类型就可正常返回了。用taobao.trade.fullinfo.get 查订单fields返回type 很容易的能知道订单的类型（type）</desc>
<request>
<param>
<name>end_modified</name>
<type>Date</type>
<required>required</required>
<desc>查询修改结束时间，必须大于修改开始时间(修改时间跨度不能大于一天)，格式:yyyy-MM-dd HH:mm:ss。&lt;span style="color:red;font-weight: bold;"&gt;建议使用30分钟以内的时间跨度，能大大提高响应速度和成功率&lt;/span&gt;。</desc>
</param>
<param>
<name>ext_type</name>
<type>String</type>
<required>optional</required>
<desc>可选值有ershou(二手市场的订单）,service（商城服务子订单）mark（双十一大促活动异常订单）作为扩展类型筛选只能做单个ext_type查询，不能全部查询所有的ext_type类型</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需要返回的字段。目前支持有： 
1.Trade中可以指定返回的fields:seller_nick, buyer_nick, title, type, created, tid, seller_rate,seller_can_rate, buyer_rate,can_rate,status, payment, discount_fee, adjust_fee, post_fee, total_fee, pay_time, end_time, modified, consign_time, buyer_obtain_point_fee, point_fee, real_point_fee, received_payment,pic_path, num_iid, num, price, cod_fee, cod_status, shipping_type, receiver_name, receiver_state, receiver_city, receiver_district, receiver_address, receiver_zip, receiver_mobile, receiver_phone,alipay_id,alipay_no,is_lgtype,is_force_wlb,is_brand_sale,has_buyer_message,credit_card_fee,step_trade_status,step_paid_fee,mark_desc,send_time,,has_yfx,yfx_fee,yfx_id,yfx_type,trade_source,seller_flag,is_daixiao,is_part_consign,zero_purchase 
2.Order中可以指定返回fields： 
orders.title, orders.pic_path, orders.price, orders.num, orders.num_iid, orders.sku_id, orders.refund_status, orders.status, orders.oid, orders.total_fee, orders.payment, orders.discount_fee, orders.adjust_fee, orders.sku_properties_name, orders.item_meal_name, orders.buyer_rate, orders.seller_rate, orders.outer_iid, orders.outer_sku_id, orders.refund_id, orders.seller_type，orders.end_time,,orders.consign_time,orders.shipping_type,orders.logistics_company,orders.invoice_no,orders.is_daixiao 
3.fields：orders（返回Order的所有内容） 
4.fields:service_orders(返回service_order中所有内容)</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码。取值范围:大于零的整数;默认值:1。&lt;span style="color:red;font-weight: bold;"&gt;注：必须采用倒序的分页方式（从最后一页往回取）才能避免漏单问题。&lt;/span&gt;</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页条数。取值范围：1~100，默认值：40。&lt;span style="color:red;font-weight: bold;"&gt;建议使用40~50，可以提高成功率，减少超时数量&lt;/span&gt;。</desc>
</param>
<param>
<name>start_modified</name>
<type>Date</type>
<required>required</required>
<desc>查询修改开始时间(修改时间跨度不能大于一天)。格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>交易状态，默认查询所有交易状态的数据，除了默认值外每次只能查询一种状态。 可选值 TRADE_NO_CREATE_PAY(没有创建支付宝交易) WAIT_BUYER_PAY(等待买家付款) 
SELLER_CONSIGNED_PART（卖家部分发货）  
WAIT_SELLER_SEND_GOODS(等待卖家发货,即:买家已付款) WAIT_BUYER_CONFIRM_GOODS(等待买家确认收货,即:卖家已发货) TRADE_BUYER_SIGNED(买家已签收,货到付款专用) TRADE_FINISHED(交易成功) TRADE_CLOSED(交易关闭) TRADE_CLOSED_BY_TAOBAO(交易被淘宝关闭) ALL_WAIT_PAY(包含：WAIT_BUYER_PAY、TRADE_NO_CREATE_PAY) ALL_CLOSED(包含：TRADE_CLOSED、TRADE_CLOSED_BY_TAOBAO) 
WAIT_PRE_AUTH_CONFIRM(余额宝0元购合约中)</desc>
</param>
<param>
<name>tag</name>
<type>String</type>
<required>optional</required>
<desc>卖家对交易的自定义分组标签，目前可选值为：time_card（点卡软件代充），fee_card（话费软件代充）</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>optional</required>
<desc>交易类型列表，同时查询多种交易类型可用逗号分隔。&lt;span style="color:red;font-weight: bold;"&gt;默认同时查询guarantee_trade, auto_delivery, ec, cod,step的5种交易类型的数据；查询所有交易类型的数据，需要设置下面全部可选值。&lt;/span&gt; 
可选值： 
fixed(一口价) 
auction(拍卖) 
step（分阶段付款，万人团，阶梯团订单） 
guarantee_trade(一口价、拍卖) 
independent_simple_trade(旺店入门版交易) 
independent_shop_trade(旺店标准版交易) 
auto_delivery(自动发货) 
ec(直冲) cod(货到付款) 
fenxiao(分销) 
game_equipment(游戏装备) 
shopex_trade(ShopEX交易) 
netcn_trade(万网交易) 
external_trade(统一外部交易) 
instant_trade (即时到账) 
b2c_cod(大商家货到付款) 
hotel_trade(酒店类型交易) 
super_market_trade(商超交易), 
super_market_cod_trade(商超货到付款交易) 
taohua(桃花网交易类型） 
waimai(外卖交易类型） 
nopaid（即时到帐/趣味猜交易类型） 
 eticket(电子凭证)  
tmall_i18n（天猫国际）;nopaid（无付款交易）insurance_plus（保险）finance（基金） 
注：guarantee_trade是一个组合查询条件，并不是一种交易类型，获取批量或单个订单中不会返回此种类型的订单。 
pre_auth_type(预授权0元购)</desc>
</param>
<param>
<name>use_has_next</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否启用has_next的分页方式，如果指定true,则返回的结果中不包含总记录数，但是会新增一个是否存在下一页的的字段，&lt;span style="color:red;font-weight: bold;"&gt;通过此种方式获取增量交易，效率在原有的基础上有80%的提升&lt;/span&gt;。</desc>
</param>
</request>
<response>
<param>
<name>has_next</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否存在下一页</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到的交易信息总数</desc>
</param>
<param>
<name>trades</name>
<type>Trade</type>
<level>Object Array</level>
<desc>搜索到的交易信息列表，返回的Trade和Order中包含的具体信息为入参fields请求的字段信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.trades.sold.incrementv.get</name>
<desc>搜索当前会话用户作为卖家已卖出的增量交易数据（只能获取到三个月以内的交易信息）  
&lt;br/&gt;1. 一次请求只能查询时间跨度为一天的增量交易记录，即end_create - start_create &lt;= 1天。  
&lt;br/&gt;2. 返回的数据结果是以订单入库时间的倒序排列的(该时间和订单修改时间不同)，通过从后往前翻页的方式可以避免漏单问题。  
&lt;br/&gt;3. 返回的数据结果只包含了订单的部分数据，可通过taobao.trade.fullinfo.get获取订单详情。  
&lt;br/&gt;4. 使用主动通知监听订单变更事件，可以实时获取订单更新数据。</desc>
<request>
<param>
<name>end_create</name>
<type>Date</type>
<required>required</required>
<desc>查询入库结束时间，必须大于入库开始时间(修改时间跨度不能大于一天)，格式:yyyy-MM-dd HH:mm:ss。&lt;span style="color:red;font-weight: bold;"&gt;建议使用30分钟以内的时间跨度，能大大提高响应速度和成功率&lt;/span&gt;。</desc>
</param>
<param>
<name>ext_type</name>
<type>String</type>
<required>optional</required>
<desc>可选值有ershou(二手市场的订单）,service（商城服务子订单）mark（双十一大促活动异常订单）作为扩展类型筛选只能做单个ext_type查询，不能全部查询所有的ext_type类型</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需要返回的字段。目前支持有：
1.Trade中可以指定返回的fields:seller_nick, buyer_nick, title, type, created, tid, seller_rate, buyer_rate, status, payment, discount_fee, adjust_fee, post_fee, total_fee, pay_time, end_time, modified, consign_time, buyer_obtain_point_fee, point_fee, real_point_fee, received_payment,pic_path, num_iid, num, price, cod_fee, cod_status, shipping_type, receiver_name, receiver_state, receiver_city, receiver_district, receiver_address, receiver_zip, receiver_mobile, receiver_phone,alipay_id,alipay_no,is_lgtype,is_force_wlb,is_brand_sale,has_buyer_message,credit_card_fee,step_trade_status,step_paid_fee,mark_desc，is_daixiao,is_part_consign
2.Order中可以指定返回fields：
orders.title, orders.pic_path, orders.price, orders.num, orders.num_iid, orders.sku_id, orders.refund_status, orders.status, orders.oid, orders.total_fee, orders.payment, orders.discount_fee, orders.adjust_fee, orders.sku_properties_name, orders.item_meal_name, orders.buyer_rate, orders.seller_rate, orders.outer_iid, orders.outer_sku_id, orders.refund_id, orders.seller_type，orders.end_time, orders.order_from,orders.consign_time,orders.shipping_type,orders.logistics_company,orders.invoice_no，orders.is_daixiao
3.fields：orders（返回Order的所有内容）
4.fields:service_orders(返回service_order中所有内容)</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码。取值范围:大于零的整数;默认值:1。&lt;span style="color:red;font-weight: bold;"&gt;注：必须采用倒序的分页方式（从最后一页往回取）才能避免漏单问题。&lt;/span&gt;</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页条数。取值范围：1~100，默认值：40。&lt;span style="color:red;font-weight: bold;"&gt;建议使用40~50，可以提高成功率，减少超时数量&lt;/span&gt;。</desc>
</param>
<param>
<name>start_create</name>
<type>Date</type>
<required>required</required>
<desc>查询入库开始时间(修改时间跨度不能大于一天)。格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>交易状态，默认查询所有交易状态的数据，除了默认值外每次只能查询一种状态。 可选值 TRADE_NO_CREATE_PAY(没有创建支付宝交易) WAIT_BUYER_PAY(等待买家付款) WAIT_SELLER_SEND_GOODS(等待卖家发货,即:买家已付款) 
SELLER_CONSIGNED_PART（卖家部分发货） 
WAIT_BUYER_CONFIRM_GOODS(等待买家确认收货,即:卖家已发货) TRADE_BUYER_SIGNED(买家已签收,货到付款专用) TRADE_FINISHED(交易成功) TRADE_CLOSED(交易关闭) TRADE_CLOSED_BY_TAOBAO(交易被淘宝关闭) ALL_WAIT_PAY(包含：WAIT_BUYER_PAY、TRADE_NO_CREATE_PAY) ALL_CLOSED(包含：TRADE_CLOSED、TRADE_CLOSED_BY_TAOBAO)</desc>
</param>
<param>
<name>tag</name>
<type>String</type>
<required>optional</required>
<desc>卖家对交易的自定义分组标签，目前可选值为：time_card（点卡软件代充），fee_card（话费软件代充）</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>optional</required>
<desc>交易类型列表，同时查询多种交易类型可用逗号分隔。&lt;span style="color:red;font-weight: bold;"&gt;默认同时查询guarantee_trade, auto_delivery, ec, cod,step的5种交易类型的数据；查询所有交易类型的数据，需要设置下面全部可选值。&lt;/span&gt;
可选值：
fixed(一口价)
auction(拍卖)
step（分阶段付款，万人团，阶梯团订单）
guarantee_trade(一口价、拍卖)
independent_simple_trade(旺店入门版交易)
independent_shop_trade(旺店标准版交易)
auto_delivery(自动发货)
ec(直冲) cod(货到付款)
fenxiao(分销)
game_equipment(游戏装备)
shopex_trade(ShopEX交易)
netcn_trade(万网交易)
external_trade(统一外部交易)
instant_trade (即时到账)
b2c_cod(大商家货到付款)
hotel_trade(酒店类型交易)
super_market_trade(商超交易),
super_market_cod_trade(商超货到付款交易)
taohua(桃花网交易类型）
waimai(外卖交易类型）
nopaid（无付款订单）
eticket(电子凭证)
tmall_i18n（天猫国际）
注：guarantee_trade是一个组合查询条件，并不是一种交易类型，获取批量或单个订单中不会返回此种类型的订单。</desc>
</param>
<param>
<name>use_has_next</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否启用has_next的分页方式，如果指定true,则返回的结果中不包含总记录数，但是会新增一个是否存在下一页的的字段，&lt;span style="color:red;font-weight: bold;"&gt;通过此种方式获取增量交易，效率在原有的基础上有80%的提升&lt;/span&gt;。</desc>
</param>
</request>
<response>
<param>
<name>has_next</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否存在下一页</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到的交易信息总数</desc>
</param>
<param>
<name>trades</name>
<type>Trade</type>
<level>Object Array</level>
<desc>搜索到的交易信息列表，返回的Trade和Order中包含的具体信息为入参fields请求的字段信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.traderate.add</name>
<desc>新增单个评价(&lt;font color="red"&gt;注：在评价之前需要对订单成功的时间进行判定（end_time）,如果超过15天，不能再通过该接口进行评价&lt;/font&gt;)</desc>
<request>
<param>
<name>anony</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否匿名,卖家评不能匿名。可选值:true(匿名),false(非匿名)。注意：如果交易订单匿名，则评价也匿名</desc>
</param>
<param>
<name>content</name>
<type>String</type>
<required>optional</required>
<desc>评价内容,最大长度: 500个汉字 .注意：当评价结果为good时就不用输入评价内容.评价内容为neutral/bad的时候需要输入评价内容</desc>
</param>
<param>
<name>oid</name>
<type>Number</type>
<required>optional</required>
<desc>子订单ID</desc>
</param>
<param>
<name>result</name>
<type>String</type>
<required>required</required>
<desc>评价结果,可选值:good(好评),neutral(中评),bad(差评)</desc>
</param>
<param>
<name>role</name>
<type>String</type>
<required>required</required>
<desc>评价者角色,可选值:seller(卖家),buyer(买家)</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>交易ID</desc>
</param>
</request>
<response>
<param>
<name>trade_rate</name>
<type>TradeRate</type>
<level>Object</level>
<desc>返回tid、oid、create</desc>
</param>
</response>
</api>
<api>
<name>taobao.traderate.explain.add</name>
<desc>商城卖家给评价做出解释（买家追加评论后、评价超过30天的，都不能再做评价解释）</desc>
<request>
<param>
<name>oid</name>
<type>Number</type>
<required>required</required>
<desc>子订单ID</desc>
</param>
<param>
<name>reply</name>
<type>String</type>
<required>required</required>
<desc>评价解释内容,最大长度: 500个汉字</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>商城卖家给评价解释是否成功。</desc>
</param>
</response>
</api>
<api>
<name>taobao.traderate.list.add</name>
<desc>针对父子订单新增批量评价(&lt;font color="red"&gt;注：在评价之前需要对订单成功的时间进行判定（end_time）,如果超过15天，不用再通过该接口进行评价&lt;/font&gt;)</desc>
<request>
<param>
<name>anony</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否匿名，卖家评不能匿名。可选值:true(匿名),false(非匿名)。 注意：如果买家匿名购买，那么买家的评价默认匿名</desc>
</param>
<param>
<name>content</name>
<type>String</type>
<required>optional</required>
<desc>评价内容,最大长度: 500个汉字 .注意：当评价结果为good时就不用输入评价内容.评价内容为neutral/bad的时候需要输入评价内容</desc>
</param>
<param>
<name>result</name>
<type>String</type>
<required>required</required>
<desc>评价结果。可选值:good(好评),neutral(中评),bad(差评)</desc>
</param>
<param>
<name>role</name>
<type>String</type>
<required>required</required>
<desc>评价者角色。可选值:seller(卖家),buyer(买家)</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>交易ID</desc>
</param>
</request>
<response>
<param>
<name>trade_rate</name>
<type>TradeRate</type>
<level>Object</level>
<desc>返回的评论的信息，仅返回tid和created字段</desc>
</param>
</response>
</api>
<api>
<name>taobao.traderates.get</name>
<desc>搜索评价信息，只能获取距今180天内的评价记录(只支持查询卖家给出或得到的评价)。</desc>
<request>
<param>
<name>end_date</name>
<type>Date</type>
<required>optional</required>
<desc>评价结束时间。如果只输入结束时间，那么全部返回所有评价数据。</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表。可选值：TradeRate 结构中的所有字段，多个字段之间用“,”分隔</desc>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<required>optional</required>
<desc>商品的数字ID</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码。取值范围:大于零的整数最大限制为200; 默认值:1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>150</max_value>
<min_value>1</min_value>
<desc>每页获取条数。默认值40，最小值1，最大值150。&lt;br /&gt; 支持最大值为：150&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>rate_type</name>
<type>String</type>
<required>required</required>
<desc>评价类型。可选值:get(得到),give(给出)</desc>
</param>
<param>
<name>result</name>
<type>String</type>
<required>optional</required>
<desc>评价结果。可选值:good(好评),neutral(中评),bad(差评)</desc>
</param>
<param>
<name>role</name>
<type>String</type>
<required>required</required>
<desc>评价者角色即评价的发起方。可选值:seller(卖家),buyer(买家)。 当 give buyer 以买家身份给卖家的评价； 当 get seller 以买家身份得到卖家给的评价； 当 give seller 以卖家身份给买家的评价； 当 get buyer 以卖家身份得到买家给的评价。</desc>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<required>optional</required>
<desc>评价开始时。如果只输入开始时间，那么能返回开始时间之后的评价数据。</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>optional</required>
<desc>交易订单id，可以是父订单id号，也可以是子订单id号</desc>
</param>
<param>
<name>use_has_next</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否启用has_next的分页方式，如果指定true,则返回的结果中不包含总记录数，但是会新增一个是否存在下一页的的字段，通过此种方式获取评价信息，效率在原有的基础上有80%的提升。</desc>
</param>
</request>
<response>
<param>
<name>has_next</name>
<type>Boolean</type>
<level>Basic</level>
<desc>当使用use_has_next时返回信息，如果还有下一页则返回true</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到的评价总数。相同的查询时间段条件下，最大只能获取总共1500条评价记录。所以当评价大于等于1500时 ISV可以通过start_date及end_date来进行拆分，以保证可以查询到全部数据</desc>
</param>
<param>
<name>trade_rates</name>
<type>TradeRate</type>
<level>Object Array</level>
<desc>评价列表。返回的TradeRate包含的具体信息为入参fields请求的字段信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.areas.get</name>
<desc>查询标准地址区域代码信息。参考：http://www.stats.gov.cn/tjsj/tjbz/xzqhdm/201401/t20140116_501070.html</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表.可选值:Area 结构中的所有字段;多个字段之间用","分隔.如:id,type,name,parent_id,zip.</desc>
</param>
</request>
<response>
<param>
<name>areas</name>
<type>Area</type>
<level>Object Array</level>
<desc>地址区域信息列表.返回的Area包含的具体信息为入参fields请求的字段信息.</desc>
</param>
</response>
</api>
<api>
<name>taobao.delivery.template.add</name>
<desc>新增运费模板</desc>
<request>
<param>
<name>assumer</name>
<type>Number</type>
<required>required</required>
<desc>可选值：0、1 ，说明如下&lt;br&gt;0:表示买家承担服务费;&lt;br&gt;1:表示卖家承担服务费</desc>
</param>
<param>
<name>consign_area_id</name>
<type>Number</type>
<required>optional</required>
<desc>卖家发货地址区域ID 
&lt;br/&gt;&lt;br/&gt;&lt;font color=blue&gt;可以不填，如果没有填写取卖家默认发货地址的区域ID，如果需要输入必须用taobao.areas.get接口获取.或者参考：http://www.stats.gov.cn/tjbz/xzqhdm/t20080215_402462675.htm  
&lt;/font&gt; 
 
&lt;br/&gt;&lt;br/&gt;&lt;font color=red&gt;注意：填入该值时必须取您的发货地址最小区域级别ID，比如您的发货地址是：某省XX市xx区（县）时需要填入区(县)的ID，当然有些地方没有区或县可以直接填市级别的ID&lt;/font&gt;</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<max_length>50</max_length>
<desc>运费模板的名称，长度不能超过50个字节&lt;br /&gt; 支持最大长度为：50&lt;br /&gt; 支持的最大列表长度为：50</desc>
</param>
<param>
<name>template_add_fees</name>
<type>String</type>
<required>required</required>
<desc>增费：输入0.00-999.99（最多包含两位小数） 
 
&lt;br/&gt;&lt;br/&gt;&lt;font color=blue&gt;增费必须小于等于首费，但是当首费为0时增费可以大于首费&lt;/font&gt; 
 
 
&lt;br/&gt;&lt;br/&gt;&lt;font color=red&gt;输入的格式分号个数和template_types数量一致，逗号个数必须与template_dests以分号隔开之后一一对应的数量一致&lt;/font&gt;</desc>
</param>
<param>
<name>template_add_standards</name>
<type>String</type>
<required>required</required>
<desc>增费标准：当valuation(记价方式)为0时输入1-9999范围内的整数&lt;br/&gt;&lt;font color=red&gt;当valuation(记价方式)为1时输入0.1-9999.9范围内的小数只能包含以为小数（单位为千克）&lt;br/&gt;&lt;font color=blue&gt;当valuation(记价方式)为3时输入0.1-999.9范围内的数值，数值只能包含一位小数（单位为 立方米）
&lt;br/&gt;
&lt;br&gt;&lt;font color=red&gt;输入的格式分号个数和template_types数量一致，逗号个数必须与template_dests以分号隔开之后一一对应的数量一致&lt;/font&gt;</desc>
</param>
<param>
<name>template_dests</name>
<type>String</type>
<required>required</required>
<desc>邮费子项涉及的地区.结构: value1;value2;value3,value4
&lt;br&gt;如:1,110000;1,110000;1,310000;1,320000,330000。 aredId解释(1=全国,110000=北京,310000=上海,320000=江苏,330000=浙江)
如果template_types设置为post;ems;exmpress;cod则表示为平邮(post)指定默认地区(全国)和北京地区的运费;其他的类似以分号区分一一对应
&lt;br/&gt;可以用taobao.areas.get接口获取.或者参考：http://www.stats.gov.cn/tjbz/xzqhdm/t20080215_402462675.htm&lt;br/&gt;
&lt;br/&gt;&lt;font color=red&gt;每个运费方式设置涉及的地区中必须包含全国地区（areaId=1）表示默认运费,可以只设置默认运费&lt;/font&gt;
&lt;br&gt;&lt;font color=blue&gt;注意:为多个地区指定指定不同（首费标准、首费、增费标准、增费一项不一样就算不同）的运费以逗号","区分，
template_start_standards(首费标准)、template_start_fees(首费)、
template_add_standards(增费标准)、
template_add_fees(增费)必须与template_types分号数量相同。如果为需要为多个地区指定相同运费则地区之间用“|”隔开即可。&lt;/font&gt;
&lt;font color=red&gt;如果卖家没有传入发货地址则默认地址库的发货地址&lt;/font&gt;</desc>
</param>
<param>
<name>template_start_fees</name>
<type>String</type>
<required>required</required>
<desc>首费：输入0.00-999.99（最多包含两位小数）
&lt;br/&gt;&lt;font color=red&gt;输入的格式分号个数和template_types数量一致，逗号个数必须与template_dests以分号隔开之后一一对应的数量一致&lt;/font&gt;</desc>
</param>
<param>
<name>template_start_standards</name>
<type>String</type>
<required>required</required>
<desc>首费标准：当valuation(记价方式)为0时输入1-9999范围内的整数&lt;br/&gt;&lt;font color=red&gt;当valuation(记价方式)为1时输入0.1-9999.9范围内的小数只能包含以为小数（单位为千克）&lt;br/&gt;&lt;font color=blue&gt;当valuation(记价方式)为3时输入0.1-999.9范围内的数值，数值只能包含一位小数（单位为 立方米）
&lt;br/&gt;
&lt;font color=red&gt;输入的格式分号个数和template_types数量一致，逗号个数必须与template_dests以分号隔开之后一一对应的数量一致&lt;/font&gt;</desc>
</param>
<param>
<name>template_types</name>
<type>String</type>
<required>required</required>
<desc>运费方式:平邮 (post),快递公司(express),EMS (ems),货到付款(cod),物流宝保障速递(wlb),家装物流(furniture)结构:value1;value2;value3;value4 
如: post;express;ems;cod 
&lt;br/&gt;&lt;font color=red&gt;
注意:在添加多个运费方式时,字符串中使用 ";" 分号区分
。template_dests(指定地区)
template_start_standards(首费标准)、template_start_fees(首费)、template_add_standards(增费标准)、template_add_fees(增费)必须与template_types的分号数量相同. &lt;/font&gt;
&lt;br&gt;
&lt;font color=blue&gt;
注意：&lt;br/&gt;
1、post,ems,express三种运费方式必须填写一个&lt;br/&gt;
2、只有订购了货到付款用户可以填cod;只有家装物流用户可以填写furniture
只有订购了保障速递的用户可以填写bzsd,只有物流宝用户可以填写wlb&lt;br/&gt;
3、如果是货到付款用户当没有填写cod运送方式时，运费模板会默认继承express的费用为cod的费用&lt;br/&gt;
4、如果是保障速递户当没有填写bzsd运送方式时，运费模板会默认继承express的费用为bzsd的费用&lt;br/&gt;
5、由于3和4的原因所以当是货到付款用户或保障速递用户时如果没填写对应的运送方式express是必须填写的
&lt;/font&gt;</desc>
</param>
<param>
<name>valuation</name>
<type>Number</type>
<required>required</required>
<desc>可选值：0、1、3，说明如下。&lt;br&gt;0:表示按宝贝件数计算运费 &lt;br&gt;1:表示按宝贝重量计算运费
 &lt;br&gt;3:表示按宝贝体积计算运费</desc>
</param>
</request>
<response>
<param>
<name>delivery_template</name>
<type>DeliveryTemplate</type>
<level>Object</level>
<desc>模板对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.delivery.template.delete</name>
<desc>根据用户指定的模板ID删除指定的模板</desc>
<request>
<param>
<name>template_id</name>
<type>Number</type>
<required>required</required>
<desc>运费模板ID</desc>
</param>
</request>
<response>
<param>
<name>complete</name>
<type>Boolean</type>
<level>Basic</level>
<desc>表示删除成功还是失败</desc>
</param>
</response>
</api>
<api>
<name>taobao.delivery.template.get</name>
<desc>获取用户指定运费模板信息</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表。 &lt;br/&gt;  
&lt;B&gt; 
可选值:示例中的值;各字段之间用","隔开 
&lt;/B&gt; 
&lt;br/&gt;&lt;br/&gt;  
&lt;font color=blue&gt; 
template_id：查询模板ID &lt;br/&gt;  
template_name:查询模板名称 &lt;br/&gt;  
assumer：查询服务承担放 &lt;br/&gt;  
valuation:查询计价规则 &lt;br/&gt;  
supports:查询增值服务列表 &lt;br/&gt;  
created:查询模板创建时间 &lt;br/&gt;  
modified:查询修改时间&lt;br/&gt;  
consign_area_id:运费模板上设置的卖家发货地址最小级别ID&lt;br/&gt;  
address:卖家地址信息 
&lt;/font&gt; 
&lt;br/&gt;&lt;br/&gt;  
&lt;font color=bule&gt; 
query_cod:查询货到付款运费信息&lt;br/&gt;  
query_post:查询平邮运费信息 &lt;br/&gt;  
query_express:查询快递公司运费信息 &lt;br/&gt;  
query_ems:查询EMS运费信息&lt;br/&gt;  
query_bzsd:查询普通保障速递运费信息&lt;br/&gt;  
query_wlb:查询物流宝保障速递运费信息&lt;br/&gt;  
query_furniture:查询家装物流运费信息 
&lt;font color=blue&gt; 
&lt;br/&gt;&lt;br/&gt; 
&lt;font color=red&gt;不能有空格&lt;/font&gt;</desc>
</param>
<param>
<name>template_ids</name>
<type>Field List</type>
<required>required</required>
<desc>需要查询的运费模板ID列表</desc>
</param>
<param>
<name>user_nick</name>
<type>String</type>
<required>optional</required>
<desc>在没有登录的情况下根据淘宝用户昵称查询指定的模板</desc>
</param>
</request>
<response>
<param>
<name>delivery_templates</name>
<type>DeliveryTemplate</type>
<level>Object Array</level>
<desc>运费模板列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>获得到符合条件的结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.delivery.template.update</name>
<desc>修改运费模板</desc>
<request>
<param>
<name>assumer</name>
<type>Number</type>
<required>optional</required>
<desc>可选值：0,1 &lt;br&gt;  说明&lt;br&gt;0:表示买家承担服务费;&lt;br&gt;1:表示卖家承担服务费</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>optional</required>
<desc>模板名称，长度不能大于50个字节</desc>
</param>
<param>
<name>template_add_fees</name>
<type>String</type>
<required>required</required>
<desc>增费：输入0.00-999.99（最多包含两位小数）&lt;br/&gt;&lt;font color=blue&gt;增费可以为0&lt;/font&gt;&lt;br/&gt;&lt;font color=red&gt;输入的格式分号个数和template_types数量一致，逗号个数必须与template_dests以分号隔开之后一一对应的数量一致&lt;/font&gt;</desc>
</param>
<param>
<name>template_add_standards</name>
<type>String</type>
<required>required</required>
<desc>增费标准：当valuation(记价方式)为0时输入1-9999范围内的整数&lt;br&gt;&lt;font color=blue&gt;增费标准目前只能为1&lt;/font&gt;
&lt;br&gt;&lt;font color=red&gt;输入的格式分号个数和template_types数量一致，逗号个数必须与template_dests以分号隔开之后一一对应的数量一致&lt;/font&gt;</desc>
</param>
<param>
<name>template_dests</name>
<type>String</type>
<required>required</required>
<desc>邮费子项涉及的地区.结构: value1;value2;value3,value4
&lt;br&gt;如:1,110000;1,110000;1,310000;1,320000,330000。 aredId解释(1=全国,110000=北京,310000=上海,320000=江苏,330000=浙江)
如果template_types设置为post;ems;exmpress;cod则表示为平邮(post)指定默认地区(全国)和北京地区的运费;其他的类似以分号区分一一对应
&lt;br/&gt;可以用taobao.areas.get接口获取.或者参考：http://www.stats.gov.cn/tjbz/xzqhdm/t20080215_402462675.htm
&lt;br/&gt;&lt;font color=red&gt;每个运费方式设置的设涉及地区中必须包含全国地区（areaId=1）表示默认运费,可以只设置默认运费&lt;/font&gt;
&lt;br&gt;&lt;font color=blue&gt;注意:为多个地区指定指定不同（首费标准、首费、增费标准、增费一项不一样就算不同）的运费以逗号","区分，
template_start_standards(首费标准)、template_start_fees(首费)、
template_add_standards(增费标准)、
template_add_fees(增费)必须与template_types分号数量相同。如果为需要为多个地区指定相同运费则地区之间用“|”隔开即可。&lt;/font&gt;</desc>
</param>
<param>
<name>template_id</name>
<type>Number</type>
<required>required</required>
<desc>需要修改的模板对应的模板ID</desc>
</param>
<param>
<name>template_start_fees</name>
<type>String</type>
<required>required</required>
<desc>首费：输入0.01-999.99（最多包含两位小数） 
&lt;br/&gt;&lt;font color=blue&gt; 首费不能为0&lt;/font&gt;&lt;br&gt;&lt;font color=red&gt;输入的格式分号个数和template_types数量一致，逗号个数必须与template_dests以分号隔开之后一一对应的数量一致&lt;/font&gt;</desc>
</param>
<param>
<name>template_start_standards</name>
<type>String</type>
<required>required</required>
<desc>首费标准：当valuation(记价方式)为0时输入1-9999范围内的整数&lt;br&gt;&lt;font color=blue&gt;首费标准目前只能为1&lt;/br&gt;
&lt;br&gt;&lt;font color=red&gt;输入的格式分号个数和template_types数量一致，逗号个数必须与template_dests以分号隔开之后一一对应的数量一致&lt;/font&gt;</desc>
</param>
<param>
<name>template_types</name>
<type>String</type>
<required>required</required>
<desc>运费方式:平邮 (post),快递公司(express),EMS (ems),货到付款(cod)结构:value1;value2;value3;value4  
如: post;express;ems;cod  
&lt;br/&gt;&lt;font color=red&gt; 
注意:在添加多个运费方式时,字符串中使用 ";" 分号区分。template_dests(指定地区) template_start_standards(首费标准)、template_start_fees(首费)、template_add_standards(增费标准)、template_add_fees(增费)必须与template_types的分号数量相同.  
 &lt;/font&gt; 
&lt;br/&gt; 
&lt;font color=blue&gt; 
普通用户：post,ems,express三种运费方式必须填写一个，不能填写cod。 
货到付款用户：如果填写了cod运费方式，则post,ems,express三种运费方式也必须填写一个，如果没有填写cod则填写的运费方式中必须存在express&lt;/font&gt;</desc>
</param>
</request>
<response>
<param>
<name>complete</name>
<type>Boolean</type>
<level>Basic</level>
<desc>表示修改是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.delivery.templates.get</name>
<desc>根据用户ID获取用户下所有模板</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表。 &lt;br/&gt;  
&lt;B&gt; 
可选值:示例中的值;各字段之间用","隔开 
&lt;/B&gt; 
&lt;br/&gt;&lt;br/&gt;  
&lt;font color=blue&gt; 
template_id：查询模板ID &lt;br/&gt;  
template_name:查询模板名称 &lt;br/&gt;  
assumer：查询服务承担放 &lt;br/&gt;  
valuation:查询计价规则 &lt;br/&gt;  
supports:查询增值服务列表 &lt;br/&gt;  
created:查询模板创建时间 &lt;br/&gt;  
modified:查询修改时间&lt;br/&gt;  
consign_area_id:运费模板上设置的卖家发货地址最小级别ID&lt;br/&gt;  
address:卖家地址信息 
&lt;/font&gt; 
&lt;br/&gt;&lt;br/&gt;  
&lt;font color=bule&gt; 
query_cod:查询货到付款运费信息&lt;br/&gt;  
query_post:查询平邮运费信息 &lt;br/&gt;  
query_express:查询快递公司运费信息 &lt;br/&gt;  
query_ems:查询EMS运费信息&lt;br/&gt;  
query_bzsd:查询普通保障速递运费信息&lt;br/&gt;  
query_wlb:查询物流宝保障速递运费信息&lt;br/&gt;  
query_furniture:查询家装物流运费信息 
&lt;font color=blue&gt; 
&lt;br/&gt;&lt;br/&gt; 
&lt;font color=red&gt;不能有空格&lt;/font&gt;</desc>
</param>
</request>
<response>
<param>
<name>delivery_templates</name>
<type>DeliveryTemplate</type>
<level>Object Array</level>
<desc>运费模板列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>获得到符合条件的结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.address.add</name>
<desc>通过此接口新增卖家地址库,卖家最多可添加5条地址库,新增第一条卖家地址，将会自动设为默认地址库</desc>
<request>
<param>
<name>addr</name>
<type>String</type>
<required>required</required>
<desc>详细街道地址，不需要重复填写省/市/区</desc>
</param>
<param>
<name>cancel_def</name>
<type>Boolean</type>
<required>optional</required>
<desc>默认退货地址。&lt;br&gt; 
&lt;font color='red'&gt;选择此项(true)，将当前地址设为默认退货地址，撤消原默认退货地址&lt;/font&gt;</desc>
</param>
<param>
<name>city</name>
<type>String</type>
<required>required</required>
<desc>所在市</desc>
</param>
<param>
<name>contact_name</name>
<type>String</type>
<required>required</required>
<desc>联系人姓名 &lt;font color='red'&gt;长度不可超过20个字节&lt;/font&gt;</desc>
</param>
<param>
<name>country</name>
<type>String</type>
<required>optional</required>
<desc>区、县 
&lt;br&gt;&lt;font color='red'&gt;如果所在地区是海外的可以为空，否则为必参&lt;/font&gt;</desc>
</param>
<param>
<name>get_def</name>
<type>Boolean</type>
<required>optional</required>
<desc>默认取货地址。&lt;br&gt; 
&lt;font color='red'&gt;选择此项(true)，将当前地址设为默认取货地址，撤消原默认取货地址&lt;/font&gt;</desc>
</param>
<param>
<name>memo</name>
<type>String</type>
<required>optional</required>
<max_length>256</max_length>
<desc>备注,&lt;br&gt;&lt;font color='red'&gt;备注不能超过256字节&lt;/font&gt;&lt;br /&gt; 支持最大长度为：256&lt;br /&gt; 支持的最大列表长度为：256</desc>
</param>
<param>
<name>mobile_phone</name>
<type>String</type>
<required>special</required>
<desc>手机号码，手机与电话必需有一个 
&lt;br&gt;&lt;font color='red'&gt;手机号码不能超过20位&lt;/font&gt;</desc>
</param>
<param>
<name>phone</name>
<type>String</type>
<required>special</required>
<desc>电话号码,手机与电话必需有一个</desc>
</param>
<param>
<name>province</name>
<type>String</type>
<required>required</required>
<desc>所在省</desc>
</param>
<param>
<name>seller_company</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>公司名称,&lt;br&gt;&lt;font color="red"&gt;公司名称长能不能超过20字节&lt;/font&gt;&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>zip_code</name>
<type>String</type>
<required>optional</required>
<desc>地区邮政编码 
&lt;br&gt;&lt;font color='red'&gt;如果所在地区是海外的可以为空，否则为必参&lt;/font&gt;</desc>
</param>
</request>
<response>
<param>
<name>address_result</name>
<type>AddressResult</type>
<level>Object</level>
<desc>只返回修改日期modify_date</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.address.modify</name>
<desc>卖家地址库修改</desc>
<request>
<param>
<name>addr</name>
<type>String</type>
<required>required</required>
<desc>详细街道地址，不需要重复填写省/市/区</desc>
</param>
<param>
<name>cancel_def</name>
<type>Boolean</type>
<required>optional</required>
<desc>默认退货地址。&lt;br&gt; 
&lt;font color='red'&gt;选择此项(true)，将当前地址设为默认退货地址，撤消原默认退货地址&lt;/font&gt;</desc>
</param>
<param>
<name>city</name>
<type>String</type>
<required>required</required>
<desc>所在市</desc>
</param>
<param>
<name>contact_id</name>
<type>Number</type>
<required>required</required>
<desc>地址库ID</desc>
</param>
<param>
<name>contact_name</name>
<type>String</type>
<required>required</required>
<desc>联系人姓名 
&lt;font color='red'&gt;长度不可超过20个字节&lt;/font&gt;</desc>
</param>
<param>
<name>country</name>
<type>String</type>
<required>optional</required>
<desc>区、县 
&lt;br&gt;&lt;font color='red'&gt;如果所在地区是海外的可以为空，否则为必参&lt;/font&gt;</desc>
</param>
<param>
<name>get_def</name>
<type>Boolean</type>
<required>optional</required>
<desc>默认取货地址。&lt;br&gt; 
&lt;font color='red'&gt;选择此项(true)，将当前地址设为默认取货地址，撤消原默认取货地址&lt;/font&gt;</desc>
</param>
<param>
<name>memo</name>
<type>String</type>
<required>optional</required>
<desc>备注,&lt;br&gt;&lt;font color='red'&gt;备注不能超过256字节&lt;/font&gt;</desc>
</param>
<param>
<name>mobile_phone</name>
<type>String</type>
<required>special</required>
<desc>手机号码，手机与电话必需有一个 &lt;br&gt;&lt;font color='red'&gt;手机号码不能超过20位&lt;/font&gt;</desc>
</param>
<param>
<name>phone</name>
<type>String</type>
<required>special</required>
<desc>电话号码,手机与电话必需有一个</desc>
</param>
<param>
<name>province</name>
<type>String</type>
<required>required</required>
<desc>所在省</desc>
</param>
<param>
<name>seller_company</name>
<type>String</type>
<required>optional</required>
<desc>公司名称, 
&lt;br&gt;&lt;font color='red'&gt;公司名称长能不能超过20字节&lt;/font&gt;</desc>
</param>
<param>
<name>zip_code</name>
<type>String</type>
<required>optional</required>
<desc>地区邮政编码 
&lt;br&gt;&lt;font color='red'&gt;如果所在地区是海外的可以为空，否则为必参&lt;/font&gt;</desc>
</param>
</request>
<response>
<param>
<name>address_result</name>
<type>AddressResult</type>
<level>Object</level>
<desc>只返回修改时间modify_date</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.address.remove</name>
<desc>用此接口删除卖家地址库</desc>
<request>
<param>
<name>contact_id</name>
<type>Number</type>
<required>required</required>
<desc>地址库ID</desc>
</param>
</request>
<response>
<param>
<name>address_result</name>
<type>AddressResult</type>
<level>Object</level>
<desc>只返回修改日期modify_date</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.address.search</name>
<desc>通过此接口查询卖家地址库，</desc>
<request>
<param>
<name>rdef</name>
<type>String</type>
<required>optional</required>
<desc>可选，参数列表如下：&lt;br&gt;&lt;font color='red'&gt;
no_def:查询非默认地址&lt;br&gt;
get_def:查询默认取货地址&lt;br&gt;
cancel_def:查询默认退货地址&lt;br&gt;
缺省此参数时，查询所有当前用户的地址库
&lt;/font&gt;</desc>
</param>
</request>
<response>
<param>
<name>addresses</name>
<type>AddressResult</type>
<level>Object Array</level>
<desc>一组地址库数据，</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.companies.get</name>
<desc>查询淘宝网合作的物流公司信息，用于发货接口。</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表。可选值:LogisticCompany 结构中的所有字段;多个字段间用","逗号隔开. 
如:id,code,name,reg_mail_no 
&lt;br&gt;&lt;font color='red'&gt;说明：&lt;/font&gt; 
&lt;br&gt;id：物流公司ID 
&lt;br&gt;code：物流公司code 
&lt;br&gt;name：物流公司名称 
&lt;br&gt;reg_mail_no：物流公司对应的运单规则</desc>
</param>
<param>
<name>is_recommended</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否查询推荐物流公司.可选值:true,false.如果不提供此参数,将会返回所有支持电话联系的物流公司.</desc>
</param>
<param>
<name>order_mode</name>
<type>String</type>
<required>optional</required>
<desc>推荐物流公司的下单方式.可选值:offline(电话联系/自己联系),online(在线下单),all(即电话联系又在线下单). 此参数仅仅用于is_recommended 为ture时。就是说对于推荐物流公司才可用.如果不选择此参数将会返回推荐物流中支持电话联系的物流公司.</desc>
</param>
</request>
<response>
<param>
<name>logistics_companies</name>
<type>LogisticsCompany</type>
<level>Object Array</level>
<desc>物流公司信息。返回的LogisticCompany包含的具体信息为入参fields请求的字段信息。</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.consign.resend</name>
<desc>支持卖家发货后修改物流公司和运单号;支持在线下单和自己联系两种发货方式;使用条件：&lt;br&gt; 
1、必须是已发货订单，自己联系发货的必须24小时内才可修改；在线下单的，必须下单后物流公司未揽收成功前才可修改； 
2、自己联系只能切换为自己联系的公司，在线下单也只能切换为在线下单的物流公司。</desc>
<request>
<param>
<name>company_code</name>
<type>String</type>
<required>required</required>
<desc>物流公司代码.如"POST"代表中国邮政,"ZJS"代表宅急送。调用 taobao.logistics.companies.get 获取。
&lt;br&gt;&lt;font color='red'&gt;如果是货到付款订单，选择的物流公司必须支持货到付款发货方式&lt;/font&gt;</desc>
</param>
<param>
<name>feature</name>
<type>String</type>
<required>optional</required>
<desc>feature参数格式&lt;br&gt; 
范例: identCode=tid1:识别码1,识别码2|tid2:识别码3;machineCode=tid3:3C机器号A,3C机器号B&lt;br&gt; 
identCode为识别码的KEY,machineCode为3C的KEY,多个key之间用”;”分隔&lt;br&gt; 
“tid1:识别码1,识别码2|tid2:识别码3”为identCode对应的value。 
"|"不同商品间的分隔符。&lt;br&gt; 
例1商品和2商品，之间就用"|"分开。&lt;br&gt; 
TID就是商品代表的子订单号，对应taobao.trade.fullinfo.get 接口获得的oid字段。(通过OID可以唯一定位到当前商品上)&lt;br&gt; 
":"TID和具体传入参数间的分隔符。冒号前表示TID,之后代表该商品的参数属性。&lt;br&gt; 
"," 属性间分隔符。（对应商品数量，当存在一个商品的数量超过1个时，用逗号分开）。&lt;br&gt; 
具体:当订单中A商品的数量为2个，其中手机串号分别为"12345","67890"。&lt;br&gt; 
参数格式：identCode=TIDA:12345,67890。 
TIDA对应了A宝贝，冒号后用逗号分隔的"12345","67890".说明本订单A宝贝的数量为2，值分别为"12345","67890"。&lt;br&gt; 
当存在"|"时，就说明订单中存在多个商品，商品间用"|"分隔了开来。|"之后的内容含义同上。</desc>
</param>
<param>
<name>is_split</name>
<type>Number</type>
<required>optional</required>
<desc>表明是否是拆单，默认值0，1表示拆单</desc>
</param>
<param>
<name>out_sid</name>
<type>String</type>
<required>required</required>
<desc>运单号.具体一个物流公司的真实运单号码。淘宝官方物流会校验，请谨慎传入；</desc>
</param>
<param>
<name>seller_ip</name>
<type>String</type>
<required>optional</required>
<desc>商家的IP地址</desc>
</param>
<param>
<name>sub_tid</name>
<type>Number</type>
<required>optional</required>
<max_list_size>50</max_list_size>
<desc>拆单子订单列表，对应的数据是：子订单号列表。可以不传，但是如果传了则必须符合传递的规则。子订单必须是操作的物流订单的子订单的真子集！</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<min_value>1000</min_value>
<desc>淘宝交易ID&lt;br /&gt; 支持最小值为：1000</desc>
</param>
</request>
<response>
<param>
<name>shipping</name>
<type>Shipping</type>
<level>Object</level>
<desc>返回发货是否成功is_success</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.dummy.send</name>
<desc>用户调用该接口可实现无需物流（虚拟）发货,使用该接口发货，交易订单状态会直接变成卖家已发货</desc>
<request>
<param>
<name>feature</name>
<type>String</type>
<required>optional</required>
<desc>feature参数格式&lt;br&gt; 
范例: identCode=tid1:识别码1,识别码2|tid2:识别码3;machineCode=tid3:3C机器号A,3C机器号B&lt;br&gt; 
identCode为识别码的KEY,machineCode为3C的KEY,多个key之间用”;”分隔&lt;br&gt; 
“tid1:识别码1,识别码2|tid2:识别码3”为identCode对应的value。 
"|"不同商品间的分隔符。&lt;br&gt; 
例1商品和2商品，之间就用"|"分开。&lt;br&gt; 
TID就是商品代表的子订单号，对应taobao.trade.fullinfo.get 接口获得的oid字段。(通过OID可以唯一定位到当前商品上)&lt;br&gt; 
":"TID和具体传入参数间的分隔符。冒号前表示TID,之后代表该商品的参数属性。&lt;br&gt; 
"," 属性间分隔符。（对应商品数量，当存在一个商品的数量超过1个时，用逗号分开）。&lt;br&gt; 
具体:当订单中A商品的数量为2个，其中手机串号分别为"12345","67890"。&lt;br&gt; 
参数格式：identCode=TIDA:12345,67890。 
TIDA对应了A宝贝，冒号后用逗号分隔的"12345","67890".说明本订单A宝贝的数量为2，值分别为"12345","67890"。&lt;br&gt; 
当存在"|"时，就说明订单中存在多个商品，商品间用"|"分隔了开来。|"之后的内容含义同上。</desc>
</param>
<param>
<name>seller_ip</name>
<type>String</type>
<required>optional</required>
<desc>商家的IP地址</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>淘宝交易ID</desc>
</param>
</request>
<response>
<param>
<name>shipping</name>
<type>Shipping</type>
<level>Object</level>
<desc>返回发货是否成功is_success</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.offline.send</name>
<desc>用户调用该接口可实现自己联系发货（线下物流），使用该接口发货，交易订单状态会直接变成卖家已发货。不支持货到付款、在线下单类型的订单。</desc>
<request>
<param>
<name>cancel_id</name>
<type>Number</type>
<required>optional</required>
<desc>卖家联系人地址库ID，可以通过taobao.logistics.address.search接口查询到地址库ID。&lt;br&gt;&lt;font color='red'&gt;如果为空，取的卖家的默认退货地址&lt;/font&gt;&lt;br&gt;</desc>
</param>
<param>
<name>company_code</name>
<type>String</type>
<required>required</required>
<desc>物流公司代码.如"POST"就代表中国邮政,"ZJS"就代表宅急送.调用 taobao.logistics.companies.get 获取。非淘宝官方物流合作公司，填写具体的物流公司名称，如“顺丰”。</desc>
</param>
<param>
<name>feature</name>
<type>String</type>
<required>optional</required>
<desc>feature参数格式&lt;br&gt; 
范例: identCode=tid1:识别码1,识别码2|tid2:识别码3;machineCode=tid3:3C机器号A,3C机器号B&lt;br&gt; 
identCode为识别码的KEY,machineCode为3C的KEY,多个key之间用”;”分隔&lt;br&gt; 
“tid1:识别码1,识别码2|tid2:识别码3”为identCode对应的value。 
"|"不同商品间的分隔符。&lt;br&gt; 
例1商品和2商品，之间就用"|"分开。&lt;br&gt; 
TID就是商品代表的子订单号，对应taobao.trade.fullinfo.get 接口获得的oid字段。(通过OID可以唯一定位到当前商品上)&lt;br&gt; 
":"TID和具体传入参数间的分隔符。冒号前表示TID,之后代表该商品的参数属性。&lt;br&gt; 
"," 属性间分隔符。（对应商品数量，当存在一个商品的数量超过1个时，用逗号分开）。&lt;br&gt; 
具体:当订单中A商品的数量为2个，其中手机串号分别为"12345","67890"。&lt;br&gt; 
参数格式：identCode=TIDA:12345,67890。 
TIDA对应了A宝贝，冒号后用逗号分隔的"12345","67890".说明本订单A宝贝的数量为2，值分别为"12345","67890"。&lt;br&gt; 
当存在"|"时，就说明订单中存在多个商品，商品间用"|"分隔了开来。|"之后的内容含义同上。</desc>
</param>
<param>
<name>is_split</name>
<type>Number</type>
<required>optional</required>
<desc>表明是否是拆单
1表示拆单
0表示不拆单，默认值0</desc>
</param>
<param>
<name>out_sid</name>
<type>String</type>
<required>required</required>
<desc>运单号.具体一个物流公司的真实运单号码。淘宝官方物流会校验，请谨慎传入；若company_code中传入的代码非淘宝官方物流合作公司，此处运单号不校验。</desc>
</param>
<param>
<name>seller_ip</name>
<type>String</type>
<required>optional</required>
<desc>商家的IP地址</desc>
</param>
<param>
<name>sender_id</name>
<type>Number</type>
<required>optional</required>
<desc>卖家联系人地址库ID，可以通过taobao.logistics.address.search接口查询到地址库ID。&lt;font color='red'&gt;如果为空，取的卖家的默认取货地址&lt;/font&gt;</desc>
</param>
<param>
<name>sub_tid</name>
<type>Number</type>
<required>optional</required>
<max_list_size>50</max_list_size>
<desc>需要拆单发货的子订单集合，为空表示不做拆单发货。</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<min_value>1000</min_value>
<desc>淘宝交易ID&lt;br /&gt; 支持最小值为：1000</desc>
</param>
</request>
<response>
<param>
<name>shipping</name>
<type>Shipping</type>
<level>Object</level>
<desc>返回发货是否成功is_success</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.online.cancel</name>
<desc>调此接口取消发货的订单，重新选择物流公司发货。前提是物流公司未揽收货物。对未发货和已经被物流公司揽收的物流订单，是不能取消的。</desc>
<request>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>淘宝交易ID</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>成功与失败</desc>
</param>
<param>
<name>modify_time</name>
<type>Date</type>
<level>Basic</level>
<desc>修改时间</desc>
</param>
<param>
<name>recreated_order_id</name>
<type>Number</type>
<level>Basic</level>
<desc>重新创建物流订单id</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.online.confirm</name>
<desc>确认发货的目的是让交易流程继承走下去，确认发货后交易状态会由【买家已付款】变为【卖家已发货】，然后买家才可以确认收货，货款打入卖家账号。货到付款的订单除外</desc>
<request>
<param>
<name>is_split</name>
<type>Number</type>
<required>optional</required>
<desc>表明是否是拆单，默认值0，1表示拆单</desc>
</param>
<param>
<name>out_sid</name>
<type>String</type>
<required>required</required>
<desc>运单号.具体一个物流公司的真实运单号码。淘宝官方物流会校验，请谨慎传入；若company_code中传入的代码非淘宝官方物流合作公司，此处运单号不校验。&lt;br&gt;</desc>
</param>
<param>
<name>seller_ip</name>
<type>String</type>
<required>optional</required>
<desc>商家的IP地址</desc>
</param>
<param>
<name>sub_tid</name>
<type>Number</type>
<required>optional</required>
<max_list_size>50</max_list_size>
<desc>拆单子订单列表，对应的数据是：子订单号的列表。可以不传，但是如果传了则必须符合传递的规则。子订单必须是操作的物流订单的子订单的真子集！</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<min_value>1000</min_value>
<desc>淘宝交易ID&lt;br /&gt; 支持最小值为：1000</desc>
</param>
</request>
<response>
<param>
<name>shipping</name>
<type>Shipping</type>
<level>Object</level>
<desc>只返回is_success：是否成功。</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.online.send</name>
<desc>用户调用该接口可实现在线订单发货（支持货到付款） 
调用该接口实现在线下单发货，有两种情况：&lt;br&gt; 
&lt;font color='red'&gt;如果不输入运单号的情况：交易状态不会改变，需要调用taobao.logistics.online.confirm确认发货后交易状态才会变成卖家已发货。&lt;br&gt; 
如果输入运单号的情况发货：交易订单状态会直接变成卖家已发货 。&lt;/font&gt;</desc>
<request>
<param>
<name>cancel_id</name>
<type>Number</type>
<required>optional</required>
<desc>卖家联系人地址库ID，可以通过taobao.logistics.address.search接口查询到地址库ID。&lt;br&gt;&lt;font color='red'&gt;如果为空，取的卖家的默认退货地址&lt;/font&gt;&lt;br&gt;</desc>
</param>
<param>
<name>company_code</name>
<type>String</type>
<required>required</required>
<desc>物流公司代码.如"POST"就代表中国邮政,"ZJS"就代表宅急送.调用 taobao.logistics.companies.get 获取。 
&lt;br&gt;&lt;font color='red'&gt;如果是货到付款订单，选择的物流公司必须支持货到付款发货方式&lt;/font&gt;</desc>
</param>
<param>
<name>feature</name>
<type>String</type>
<required>optional</required>
<desc>feature参数格式&lt;br&gt; 
范例: identCode=tid1:识别码1,识别码2|tid2:识别码3;machineCode=tid3:3C机器号A,3C机器号B&lt;br&gt; 
identCode为识别码的KEY,machineCode为3C的KEY,多个key之间用”;”分隔&lt;br&gt; 
“tid1:识别码1,识别码2|tid2:识别码3”为identCode对应的value。 
"|"不同商品间的分隔符。&lt;br&gt; 
例1商品和2商品，之间就用"|"分开。&lt;br&gt; 
TID就是商品代表的子订单号，对应taobao.trade.fullinfo.get 接口获得的oid字段。(通过OID可以唯一定位到当前商品上)&lt;br&gt; 
":"TID和具体传入参数间的分隔符。冒号前表示TID,之后代表该商品的参数属性。&lt;br&gt; 
"," 属性间分隔符。（对应商品数量，当存在一个商品的数量超过1个时，用逗号分开）。&lt;br&gt; 
具体:当订单中A商品的数量为2个，其中手机串号分别为"12345","67890"。&lt;br&gt; 
参数格式：identCode=TIDA:12345,67890。 
TIDA对应了A宝贝，冒号后用逗号分隔的"12345","67890".说明本订单A宝贝的数量为2，值分别为"12345","67890"。&lt;br&gt; 
当存在"|"时，就说明订单中存在多个商品，商品间用"|"分隔了开来。|"之后的内容含义同上。</desc>
</param>
<param>
<name>is_split</name>
<type>Number</type>
<required>optional</required>
<desc>表明是否是拆单，默认值0，1表示拆单</desc>
</param>
<param>
<name>out_sid</name>
<type>String</type>
<required>optional</required>
<desc>运单号.具体一个物流公司的真实运单号码。淘宝官方物流会校验，请谨慎传入；</desc>
</param>
<param>
<name>seller_ip</name>
<type>String</type>
<required>optional</required>
<desc>商家的IP地址</desc>
</param>
<param>
<name>sender_id</name>
<type>Number</type>
<required>optional</required>
<desc>卖家联系人地址库ID，可以通过taobao.logistics.address.search接口查询到地址库ID。&lt;font color='red'&gt;如果为空，取的卖家的默认取货地址&lt;/font&gt;</desc>
</param>
<param>
<name>sub_tid</name>
<type>Number</type>
<required>optional</required>
<max_list_size>50</max_list_size>
<desc>拆单子订单列表，对应的数据是：子订单号的列表。可以不传，但是如果传了则必须符合传递的规则。子订单必须是操作的物流订单的子订单的真子集！</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<min_value>1000</min_value>
<desc>淘宝交易ID&lt;br /&gt; 支持最小值为：1000</desc>
</param>
</request>
<response>
<param>
<name>shipping</name>
<type>Shipping</type>
<level>Object</level>
<desc>返回发货是否成功is_success</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.orders.detail.get</name>
<desc>查询物流订单的详细信息，涉及用户隐私字段。（注：该API主要是提供给卖家查询物流订单使用，买家查询物流订单，建议使用taobao.logistics.trace.search）</desc>
<request>
<param>
<name>buyer_nick</name>
<type>String</type>
<required>optional</required>
<desc>买家昵称</desc>
</param>
<param>
<name>end_created</name>
<type>Date</type>
<required>optional</required>
<desc>创建时间结束.格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表.可选值:Shipping 物流数据结构中所有字段.fileds中可以指定返回以上任意一个或者多个字段,以","分隔.</desc>
</param>
<param>
<name>freight_payer</name>
<type>String</type>
<required>optional</required>
<desc>谁承担运费.可选值:buyer(买家),seller(卖家).如:buyer</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码.该字段没传 或 值&lt;1 ,则默认page_no为1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<desc>每页条数.该字段没传 或 值&lt;1 ，则默认page_size为40&lt;br /&gt; 支持最大值为：100</desc>
</param>
<param>
<name>receiver_name</name>
<type>String</type>
<required>optional</required>
<desc>收货人姓名</desc>
</param>
<param>
<name>seller_confirm</name>
<type>String</type>
<required>optional</required>
<desc>卖家是否发货.可选值:yes(是),no(否).如:yes.</desc>
</param>
<param>
<name>start_created</name>
<type>Date</type>
<required>optional</required>
<desc>创建时间开始.格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>物流状态.可查看数据结构 Shipping 中的status字段.</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>optional</required>
<desc>交易ID.如果加入tid参数的话,不用传其他的参数,但是仅会返回一条物流订单信息.</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>optional</required>
<desc>物流方式.可选值:post(平邮),express(快递),ems(EMS).如:post</desc>
</param>
</request>
<response>
<param>
<name>shippings</name>
<type>Shipping</type>
<level>Object Array</level>
<desc>获取的物流订单详情列表.返回的Shipping包含的具体信息为入参fields请求的字段信息.</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到的物流订单列表总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.orders.get</name>
<desc>批量查询物流订单。（注：该API主要是提供给卖家查询物流订单使用，买家查询物流订单，建议使用taobao.logistics.trace.search）</desc>
<request>
<param>
<name>buyer_nick</name>
<type>String</type>
<required>optional</required>
<desc>买家昵称</desc>
</param>
<param>
<name>end_created</name>
<type>Date</type>
<required>optional</required>
<desc>创建时间结束</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表.可选值:Shipping 物流数据结构中的以下字段: &lt;br&gt; 
tid,order_code,seller_nick,buyer_nick,delivery_start, delivery_end,out_sid,item_title,receiver_name, created,modified,status,type,freight_payer,seller_confirm,company_name,sub_tids,is_spilt；&lt;br&gt;多个字段之间用","分隔。如tid,seller_nick,buyer_nick,delivery_start。</desc>
</param>
<param>
<name>freight_payer</name>
<type>String</type>
<required>optional</required>
<desc>谁承担运费.可选值:buyer(买家),seller(卖家).如:buyer</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码.该字段没传 或 值&lt;1 ,则默认page_no为1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<desc>每页条数.该字段没传 或 值&lt;1 ,则默认page_size为40&lt;br /&gt; 支持最大值为：100</desc>
</param>
<param>
<name>receiver_name</name>
<type>String</type>
<required>optional</required>
<desc>收货人姓名</desc>
</param>
<param>
<name>seller_confirm</name>
<type>String</type>
<required>optional</required>
<desc>卖家是否发货.可选值:yes(是),no(否).如:yes</desc>
</param>
<param>
<name>start_created</name>
<type>Date</type>
<required>optional</required>
<desc>创建时间开始</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>物流状态.查看数据结构 Shipping 中的status字段.</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>optional</required>
<desc>交易ID.如果加入tid参数的话,不用传其他的参数,若传入tid：非拆单场景，仅会返回一条物流订单信息；拆单场景，会返回多条物流订单信息</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>optional</required>
<desc>物流方式.可选值:post(平邮),express(快递),ems(EMS).如:post</desc>
</param>
</request>
<response>
<param>
<name>shippings</name>
<type>Shipping</type>
<level>Object Array</level>
<desc>获取的物流订单详情列表  
返回的Shipping包含的具体信息为入参fields请求的字段信息</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到的物流订单列表总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.orderstore.push</name>
<desc>卖家使用自己的物流公司发货，可以通过本接口将订单的仓内信息推送到淘宝，淘宝保存这些仓内信息，并可在页面展示这些仓内信息。</desc>
<request>
<param>
<name>is_split</name>
<type>Number</type>
<required>optional</required>
<desc>表明是否是拆单，默认值0，1表示拆单</desc>
</param>
<param>
<name>occure_time</name>
<type>Date</type>
<required>required</required>
<desc>流转状态发生时间</desc>
</param>
<param>
<name>operate_detail</name>
<type>String</type>
<required>required</required>
<max_length>200</max_length>
<desc>仓内操作描述&lt;br /&gt; 支持最大长度为：200&lt;br /&gt; 支持的最大列表长度为：200</desc>
</param>
<param>
<name>operator_contact</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>快递业务员联系方式&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>operator_name</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>快递业务员名称&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>sub_tid</name>
<type>Number</type>
<required>optional</required>
<max_list_size>50</max_list_size>
<desc>拆单子订单列表，对应的数据是：子订单号的列表。可以不传，但是如果传了则必须符合传递的规则。子订单必须是操作的物流订单的子订单的真子集！</desc>
</param>
<param>
<name>trade_id</name>
<type>Number</type>
<required>required</required>
<desc>淘宝订单交易号</desc>
</param>
</request>
<response>
<param>
<name>shipping</name>
<type>Shipping</type>
<level>Object</level>
<desc>返回结果是否成功is_success</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.ordertrace.push</name>
<desc>卖家使用自己的物流公司发货，可以通过本接口将订单的流转信息推送到淘宝，淘宝保存这些流转信息，并可在页面展示这些流转信息。</desc>
<request>
<param>
<name>company_name</name>
<type>String</type>
<required>required</required>
<max_length>20</max_length>
<desc>物流公司名称&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>current_city</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>流转节点的当前城市&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>facility_name</name>
<type>String</type>
<required>optional</required>
<max_length>100</max_length>
<desc>网点名称&lt;br /&gt; 支持最大长度为：100&lt;br /&gt; 支持的最大列表长度为：100</desc>
</param>
<param>
<name>mail_no</name>
<type>String</type>
<required>required</required>
<desc>快递单号。各个快递公司的运单号格式不同。</desc>
</param>
<param>
<name>next_city</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>流转节点的下一个城市&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>node_description</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>描述当前节点的操作，操作是“揽收”、“派送”或“签收”。&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>occure_time</name>
<type>Date</type>
<required>required</required>
<desc>流转节点发生时间</desc>
</param>
<param>
<name>operate_detail</name>
<type>String</type>
<required>required</required>
<max_length>200</max_length>
<desc>流转节点的详细地址及操作描述&lt;br /&gt; 支持最大长度为：200&lt;br /&gt; 支持的最大列表长度为：200</desc>
</param>
<param>
<name>operator_contact</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>快递业务员联系方式，手机号码或电话。&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>operator_name</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>快递业务员名称&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
</request>
<response>
<param>
<name>shipping</name>
<type>Shipping</type>
<level>Object</level>
<desc>返回结果是否成功is_success</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.partners.get</name>
<desc>查询物流公司信息（可以查询目的地可不可达情况）</desc>
<request>
<param>
<name>goods_value</name>
<type>String</type>
<required>optional</required>
<desc>货物价格.只有当选择货到付款此参数才会有效</desc>
</param>
<param>
<name>is_need_carriage</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否需要揽收资费信息，默认false。在此值为false时，返回内容中将无carriage。在未设置source_id或target_id的情况下，无法查询揽收资费信息。自己联系无揽收资费记录。</desc>
</param>
<param>
<name>service_type</name>
<type>String</type>
<required>required</required>
<desc>服务类型，根据此参数可查出提供相应服务类型的物流公司信息(物流公司状态正常)，可选值：cod(货到付款)、online(在线下单)、 offline(自己联系)、limit(限时物流)。然后再根据source_id,target_id,goods_value这三个条件来过滤物流公司. 目前输入自己联系服务类型将会返回空，因为自己联系并没有具体的服务信息，所以不会有记录。</desc>
</param>
<param>
<name>source_id</name>
<type>String</type>
<required>optional</required>
<desc>物流公司揽货地地区码（必须是区、县一级的）.参考:http://www.stats.gov.cn/tjbz/xzqhdm/t20100623_402652267.htm  或者调用 taobao.areas.get 获取</desc>
</param>
<param>
<name>target_id</name>
<type>String</type>
<required>optional</required>
<desc>物流公司派送地地区码（必须是区、县一级的）.参考:http://www.stats.gov.cn/tjbz/xzqhdm/t20100623_402652267.htm  或者调用 taobao.areas.get 获取</desc>
</param>
</request>
<response>
<param>
<name>logistics_partners</name>
<type>LogisticsPartner</type>
<level>Object Array</level>
<desc>物流公司信息。</desc>
</param>
</response>
</api>
<api>
<name>taobao.logistics.trace.search</name>
<desc>用户根据淘宝交易号查询物流流转信息，如2010-8-10 15：23：00到达杭州集散地。 
此接口的返回信息都由物流公司提供。（备注：使用线下发货（offline.send）的运单，不支持运单状态的实时跟踪，只要一发货，状态就会变为&lt;status&gt;对方已签收&lt;/status&gt;，该字段仅对线上发货（online.send）的运单有效。）</desc>
<request>
<param>
<name>is_split</name>
<type>Number</type>
<required>optional</required>
<desc>表明是否是拆单，默认值0，1表示拆单</desc>
</param>
<param>
<name>seller_nick</name>
<type>String</type>
<required>required</required>
<desc>卖家昵称</desc>
</param>
<param>
<name>sub_tid</name>
<type>Number</type>
<required>optional</required>
<max_list_size>50</max_list_size>
<desc>拆单子订单列表，对应的数据是：子订单号的列表。可以不传，但是如果传了则必须符合传递的规则。子订单必须是操作的物流订单的子订单的真子集</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>required</required>
<desc>淘宝交易号，请勿传非淘宝交易号</desc>
</param>
</request>
<response>
<param>
<name>company_name</name>
<type>String</type>
<level>Basic</level>
<desc>物流公司名称</desc>
</param>
<param>
<name>out_sid</name>
<type>String</type>
<level>Basic</level>
<desc>运单号</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<level>Basic</level>
<desc>订单的物流状态（仅支持线上发货online订单，线下发货offline发出后直接变为已签收）
* 等候发送给物流公司
*已提交给物流公司,等待物流公司接单
*已经确认消息接收，等待物流公司接单
*物流公司已接单
*物流公司不接单
*物流公司揽收失败
*物流公司揽收成功
*签收失败
*对方已签收
*对方拒绝签收</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<desc>交易号</desc>
</param>
<param>
<name>trace_list</name>
<type>TransitStepInfo</type>
<level>Object Array</level>
<desc>流转信息列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.sellercats.list.add</name>
<desc>此API添加卖家店铺内自定义类目  
父类目parent_cid值等于0：表示此类目为店铺下的一级类目，值不等于0：表示此类目有父类目  
注：因为缓存的关系,添加的新类目需8个小时后才可以在淘宝页面上正常显示，但是不影响在该类目下商品发布</desc>
<request>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<desc>卖家自定义类目名称。不超过20个字符</desc>
</param>
<param>
<name>parent_cid</name>
<type>Number</type>
<required>optional</required>
<desc>父类目编号，如果类目为店铺下的一级类目：值等于0，如果类目为子类目，调用获取taobao.sellercats.list.get父类目编号</desc>
</param>
<param>
<name>pict_url</name>
<type>String</type>
<required>optional</required>
<desc>链接图片URL地址。(绝对地址，格式：http://host/image_path)</desc>
</param>
<param>
<name>sort_order</name>
<type>Number</type>
<required>optional</required>
<desc>该类目在页面上的排序位置,取值范围:大于零的整数</desc>
</param>
</request>
<response>
<param>
<name>seller_cat</name>
<type>SellerCat</type>
<level>Object</level>
<desc>返回seller_cat数据结构中的：cid,created</desc>
</param>
</response>
</api>
<api>
<name>taobao.sellercats.list.get</name>
<desc>此API获取当前卖家店铺在淘宝前端被展示的浏览导航类目（面向买家）</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<desc>卖家昵称</desc>
</param>
</request>
<response>
<param>
<name>seller_cats</name>
<type>SellerCat</type>
<level>Object Array</level>
<desc>卖家自定义类目</desc>
</param>
</response>
</api>
<api>
<name>taobao.sellercats.list.update</name>
<desc>此API更新卖家店铺内自定义类目  
注：因为缓存的关系，添加的新类目需8个小时后才可以在淘宝页面上正常显示，但是不影响在该类目下商品发布</desc>
<request>
<param>
<name>cid</name>
<type>Number</type>
<required>required</required>
<desc>卖家自定义类目编号</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>optional</required>
<desc>卖家自定义类目名称。不超过20个字符</desc>
</param>
<param>
<name>pict_url</name>
<type>String</type>
<required>optional</required>
<desc>链接图片URL地址</desc>
</param>
<param>
<name>sort_order</name>
<type>Number</type>
<required>optional</required>
<desc>该类目在页面上的排序位置,取值范围:大于零的整数</desc>
</param>
</request>
<response>
<param>
<name>seller_cat</name>
<type>SellerCat</type>
<level>Object</level>
<desc>返回sellercat数据结构中的：cid,modified</desc>
</param>
</response>
</api>
<api>
<name>taobao.shop.get</name>
<desc>获取卖家店铺的基本信息</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表。可选值：Shop 结构中的所有字段；多个字段之间用逗号(,)分隔</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<desc>卖家昵称</desc>
</param>
</request>
<response>
<param>
<name>shop</name>
<type>Shop</type>
<level>Object</level>
<desc>店铺信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.shop.remainshowcase.get</name>
<desc>获取卖家店铺剩余橱窗数量，已用橱窗数量，总橱窗数量</desc>
<response>
<param>
<name>shop</name>
<type>Shop</type>
<level>Object</level>
<desc>支持返回剩余橱窗数量，已用橱窗数量，总橱窗数量</desc>
</param>
</response>
</api>
<api>
<name>taobao.shop.update</name>
<desc>目前只支持标题、公告和描述的更新</desc>
<request>
<param>
<name>bulletin</name>
<type>String</type>
<required>special</required>
<desc>店铺公告。不超过1024个字符</desc>
</param>
<param>
<name>desc</name>
<type>String</type>
<required>special</required>
<desc>店铺描述。10～2000个字符以内</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>special</required>
<desc>店铺标题。不超过30个字符；过滤敏感词，如淘咖啡、阿里巴巴等。title, bulletin和desc至少必须传一个</desc>
</param>
</request>
<response>
<param>
<name>shop</name>
<type>Shop</type>
<level>Object</level>
<desc>店铺信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.shopcats.list.get</name>
<desc>获取淘宝面向买家的浏览导航类目（跟后台卖家商品管理的类目有差异）</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>optional</required>
<desc>需要返回的字段列表，见ShopCat，默认返回：cid,parent_cid,name,is_parent</desc>
</param>
</request>
<response>
<param>
<name>shop_cats</name>
<type>ShopCat</type>
<level>Object Array</level>
<desc>店铺类目列表信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.eservice.accountstatus.get</name>
<desc>查询E客服账号的操作记录。如：登录，下线，挂起等。</desc>
<request>
<param>
<name>btime</name>
<type>String</type>
<required>required</required>
<max_length>19</max_length>
<desc>的起始时间。&lt;/br&gt; 
格式为： YYYY-mm-dd_HH:MM:SS &lt;/br&gt; 
注：&lt;/br&gt; 
1. 查询时间必须在30天之内。 
2. 起始时间和结束时间间隔不超过7天。&lt;br /&gt; 支持最大长度为：19&lt;br /&gt; 支持的最大列表长度为：19</desc>
</param>
<param>
<name>etime</name>
<type>String</type>
<required>required</required>
<max_length>19</max_length>
<desc>结束时间 。 &lt;/br&gt; 
格式为：YYYY-mm-dd_HH:MM:SS &lt;/br&gt; 
注：&lt;/br&gt; 
1. 查询时间必须在30天之内。 
2. 起始时间和结束时间间隔不超过7天。&lt;br /&gt; 支持最大长度为：19&lt;br /&gt; 支持的最大列表长度为：19</desc>
</param>
<param>
<name>uid</name>
<type>String</type>
<required>required</required>
<max_length>1920</max_length>
<max_list_size>30</max_list_size>
<desc>查询账号（序列）。 需要带前缀（如cntaobao）。&lt;/br&gt; 
 
注： &lt;/br&gt; 
1. uid中所有账号必须为授权店铺的店铺内账号。&lt;/br&gt; 
2. 如果传入多个账号，账号与账号之间以","分割。最多30个账号。每个账号的最大长度是64。&lt;/br&gt; 
3. 由于后端依然是顺序请求，所以该接口的响应时长是会随uid的数量线性增长，即uid数量越多，调用时间越长。请合理使用&lt;br /&gt; 支持最大长度为：1920&lt;br /&gt; 支持的最大列表长度为：1920</desc>
</param>
</request>
<response>
<param>
<name>account_infos</name>
<type>AccountInfo</type>
<level>Object Array</level>
<desc>账号操作记录列表。</desc>
</param>
<param>
<name>ret_code</name>
<type>Number</type>
<level>Basic</level>
<desc>接口调用返回码。 0：成功。100：部分成功。</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.eservice.avgwaittime.get</name>
<desc>根据客服ID和日期，获取该客服"当日接待的所有客户的平均等待时长"。  &lt;br/&gt; 
备注：  &lt;br/&gt; 
1、如果是操作者ID=被查者ID，返回被查者ID的"当日接待的所有客户的平均等待时长"。  &lt;br/&gt; 
2、如果操作者是组管理员，他可以查询他的组中的所有子帐号的"当日接待的所有客户的平均等待时长"。service_staff_id为所有子帐号，用 "," 隔开 &lt;br/&gt; 
3、如果操作者是主账户，他可以查询所有子帐号的"当日接待的所有客户的平均等待时长"。  service_staff_id为所有子帐号，用 "," 隔开&lt;br/&gt; 
 4、被查者ID可以是多个，用 "," 隔开，id数不能超过30。  &lt;br/&gt; 
 5、开始时间与结束时间之间的间隔不能超过7天  &lt;br/&gt; 
 6、不能查询90天以前的数据  &lt;br/&gt; 
 7、不能查询当天的记录</desc>
<request>
<param>
<name>end_date</name>
<type>Date</type>
<required>required</required>
<desc>结束时间</desc>
</param>
<param>
<name>service_staff_id</name>
<type>String</type>
<required>required</required>
<max_length>1900</max_length>
<desc>客服人员id：cntaobao+淘宝nick，例如cntaobaotest&lt;br /&gt; 支持最大长度为：1900&lt;br /&gt; 支持的最大列表长度为：1900</desc>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<required>required</required>
<desc>开始时间</desc>
</param>
</request>
<response>
<param>
<name>waiting_time_list_on_days</name>
<type>WaitingTimesOnDay</type>
<level>Object Array</level>
<desc>平均等待时长</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.eservice.evals.get</name>
<desc>根据用户id查询用户对应的评价详细情况， 
主账号id可以查询店铺内子账号的评价 
组管理员可以查询组内账号的评价 
非管理员的子账号可以查自己的评价</desc>
<request>
<param>
<name>end_date</name>
<type>Date</type>
<required>required</required>
<desc>结束时间</desc>
</param>
<param>
<name>service_staff_id</name>
<type>String</type>
<required>required</required>
<max_list_size>30</max_list_size>
<desc>想要查询的账号列表</desc>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<required>required</required>
<desc>开始时间</desc>
</param>
</request>
<response>
<param>
<name>result_code</name>
<type>Number</type>
<level>Basic</level>
<desc>0表示成功</desc>
</param>
<param>
<name>result_count</name>
<type>Number</type>
<level>Basic</level>
<desc>总条数</desc>
</param>
<param>
<name>staff_eval_details</name>
<type>EvalDetail</type>
<level>Object Array</level>
<desc>评价具体数据</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.eservice.evaluation.get</name>
<desc>根据操作者ID，返回被查者ID指定日期内每个帐号每日的"客服评价统计" 
 
备注：1、如果是操作者ID=被查者ID，返回被查者ID的"客服评价统计"。 
 
    2、如果操作者是组管理员，他可以查询他的组中的所有子帐号的"客服评价统计"。 
 
    3、如果操作者是主账户，他可以查询所有子帐号的"客服评价统计"。 
    4、被查者ID可以是多个，用 "," 隔开，id数不能超过30。 
    5、开始时间与结束时间之间的间隔不能超过7天 
    6、不能查询90天以前的数据 
    7、不能查询当天的记录</desc>
<request>
<param>
<name>end_date</name>
<type>Date</type>
<required>required</required>
<desc>查询结束日期</desc>
</param>
<param>
<name>service_staff_id</name>
<type>String</type>
<required>required</required>
<max_length>1900</max_length>
<desc>客服人员id：cntaobao+淘宝nick，例如cntaobaotest&lt;br /&gt; 支持最大长度为：1900&lt;br /&gt; 支持的最大列表长度为：1900</desc>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<required>required</required>
<desc>查询开始日期</desc>
</param>
</request>
<response>
<param>
<name>staff_eval_stat_on_days</name>
<type>StaffEvalStatOnDay</type>
<level>Object Array</level>
<desc>客服平均统计列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.eservice.groupmember.get</name>
<desc>用某个组管理员账号查询，返回该组组名、和该组所有组成员ID（E客服的分流设置）。 
 
用旺旺主帐号查询，返回所有组的组名和该组所有组成员ID。 
 
返回的组成员ID可以是多个，用 "," 隔开。 
 
被查者ID只能传入一个。 
 
组成员中排名最靠前的ID是组管理员ID</desc>
<request>
<param>
<name>manager_id</name>
<type>String</type>
<required>required</required>
<max_length>128</max_length>
<desc>主帐号ID：cntaobao+淘宝nick，例如cntaobaotest&lt;br /&gt; 支持最大长度为：128&lt;br /&gt; 支持的最大列表长度为：128</desc>
</param>
</request>
<response>
<param>
<name>group_member_list</name>
<type>GroupMember</type>
<level>Object Array</level>
<desc>组及其成员列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.eservice.loginlogs.get</name>
<desc>通过用户id查询用户自己或者子账户的登录日志： 
主账号可以查询自己和店铺子账户的登录日志（查询时需要输入子账号，多个用，隔开） 
组管理员可以查询自己和组内子账号的登录日志（查询时需要输入子账号，多个用，隔开） 
非组管理员的子账户只能查询自己的登录日志 
注：目前sdk只能支持到body内容的返回，body内数据结构的解析需要开发者自己写代码</desc>
<request>
<param>
<name>end_date</name>
<type>Date</type>
<required>required</required>
<desc>查询登录日志的结束时间，必须按示例的格式，否则会返回错误</desc>
</param>
<param>
<name>service_staff_id</name>
<type>String</type>
<required>required</required>
<max_list_size>30</max_list_size>
<desc>需要查询登录日志的账号列表</desc>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<required>required</required>
<desc>查询登录日志的开始日期，必须按示例的格式，否则会返回错误</desc>
</param>
</request>
<response>
<param>
<name>count</name>
<type>Number</type>
<level>Basic</level>
<desc>在指定时间段登录日志的条数</desc>
</param>
<param>
<name>loginlogs</name>
<type>LoginLog</type>
<level>Object Array</level>
<desc>登录日志具体信息</desc>
</param>
<param>
<name>user_id</name>
<type>String</type>
<level>Basic</level>
<desc>被查询的用户id</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.eservice.newevals.get</name>
<desc>查询评价详细数据</desc>
<request>
<param>
<name>btime</name>
<type>String</type>
<required>required</required>
<desc>查询登录日志的开始日期，必须按示例的格式，否则会返回错误； 
开始时间不能在当前时间30天前，开始时间和结束时间的间隔不能超过7天； 
开始时间不能超过当前系统时间</desc>
</param>
<param>
<name>etime</name>
<type>String</type>
<required>required</required>
<desc>查询登录日志的结束时间，必须按示例的格式，否则会返回错误； 
结束时间不能小于开始时间，结束时间和开始时间的间隔不能超过7天</desc>
</param>
<param>
<name>query_ids</name>
<type>String</type>
<required>required</required>
<max_list_size>30</max_list_size>
<desc>需要查询登录日志的账号列表，多个id之间用逗号隔开，每次查询的id数不能超过30个</desc>
</param>
</request>
<response>
<param>
<name>result_code</name>
<type>Number</type>
<level>Basic</level>
<desc>0表示成功</desc>
</param>
<param>
<name>result_count</name>
<type>Number</type>
<level>Basic</level>
<desc>总条数</desc>
</param>
<param>
<name>staff_eval_details</name>
<type>EvalDetail</type>
<level>Object Array</level>
<desc>评价具体数据</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.eservice.noreplynum.get</name>
<desc>根据操作者ID，返回被查者ID指定日期内每个帐号每日的"未回复情况" 
 
备注：1、如果是操作者ID=被查者ID，返回被查者ID的"未回复情况"（未回复人数、未回复的ID）。 
 
    2、如果操作者是组管理员，他可以查询他的组中的所有子帐号的"未回复情况"。 
 
    3、如果操作者是主账户，他可以查询所有子帐号的"未回复情况"。 
    4、被查者ID可以是多个，用 "," 隔开，id数不能超过30。 
    5、开始时间与结束时间之间的间隔不能超过7天 
    6、不能查询90天以前的数据 
    7、不能查询当天的记录</desc>
<request>
<param>
<name>end_date</name>
<type>Date</type>
<required>required</required>
<desc>结束日期</desc>
</param>
<param>
<name>service_staff_id</name>
<type>String</type>
<required>required</required>
<max_length>1900</max_length>
<desc>客服人员id：cntaobao+淘宝nick，例如cntaobaotest&lt;br /&gt; 支持最大长度为：1900&lt;br /&gt; 支持的最大列表长度为：1900</desc>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<required>required</required>
<desc>开始日期</desc>
</param>
</request>
<response>
<param>
<name>non_reply_stat_on_days</name>
<type>NonReplyStatOnDay</type>
<level>Object Array</level>
<desc>未回复统计列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.eservice.onlinetime.get</name>
<desc>描述：根据客服ID和日期，获取该客服"当日在线时长"。 
 
备注：1、如果是操作者ID=被查者ID，返回被查者ID的"当日在线时长"。 
 
    2、如果操作者是组管理员，他可以查询他的组中的所有子帐号的"当日在线时长"。 
 
    3、如果操作者是主账户，他可以查询所有子帐号的"当日在线时长"。 
    4、被查者ID可以是多个，用 "," 隔开，id数不能超过30。 
    5、日累计在线时长定义：当日该用户累计的旺旺在线时长 
 
    6、开始时间与结束时间之间的间隔不能超过7天 
    7、不能查询90天以前的数据 
    8、不能查询当天的记录</desc>
<request>
<param>
<name>end_date</name>
<type>Date</type>
<required>required</required>
<desc>结束日期</desc>
</param>
<param>
<name>service_staff_id</name>
<type>String</type>
<required>required</required>
<desc>客服人员id：cntaobao+淘宝nick，例如cntaobaotest</desc>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<required>required</required>
<desc>开始日期</desc>
</param>
</request>
<response>
<param>
<name>online_times_list_on_days</name>
<type>OnlineTimesOnDay</type>
<level>Object Array</level>
<desc>客服在线时长（按天统计，排列）</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.eservice.receivenum.get</name>
<desc>根据操作者ID，返回被查者ID指定时间段内每个帐号的"已接待人数"&lt;br/&gt; 
备注：&lt;br/&gt; 
1、如果是操作者ID=被查者ID，返回被查者ID的"已接待人数"。&lt;br/&gt; 
2、如果操作者是组管理员，他可以查询他的组中的所有子帐号的"已接待人数"。&lt;br/&gt; 
3、如果操作者是主账户，他可以查询所有子帐号的"已接待人数"。&lt;br/&gt; 
（注意：这里说的是授权是主帐号，可以查询所有子帐号的数据，具体要查询哪些子账号的数据，需要在service_staff_id具体指定，而不是service_staff_id直接输入主帐号）&lt;br/&gt; 
 4、被查者ID可以是多个，用 "," 隔开，id数不能超过30。&lt;br/&gt; 
 5、规则：某客服在1天内和同一个客户交流了多次，已回复人数算1。&lt;br/&gt; 
6、"已接待人数"定义：买家、卖家彼此发过至少1条消息 ，不论谁先发都可以。&lt;br/&gt; 
  7、被查者ID可以是多个，用 "," 隔开，id数不能超过30。&lt;br/&gt; 
  8、开始时间与结束时间之间的间隔不能超过7天&lt;br/&gt; 
  9、不能查询90天以前的数据&lt;br/&gt; 
  10、不能查询当天的记录&lt;br/&gt; 
   11、查询日期精确到日&lt;br/&gt;</desc>
<request>
<param>
<name>end_date</name>
<type>Date</type>
<required>required</required>
<desc>查询接待人数的结束日期 时间精确到日 时分秒可以直接传00:00:00</desc>
</param>
<param>
<name>service_staff_id</name>
<type>String</type>
<required>required</required>
<max_length>1900</max_length>
<desc>客服人员id：cntaobao+淘宝nick，例如cntaobaotest&lt;br /&gt; 支持最大长度为：1900&lt;br /&gt; 支持的最大列表长度为：1900</desc>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<required>required</required>
<desc>查询接待人数的开始日期 时间精确到日 时分秒可直接传 00:00:00</desc>
</param>
</request>
<response>
<param>
<name>reply_stat_list_on_days</name>
<type>ReplyStatOnDay</type>
<level>Object Array</level>
<desc>客服回复列表，按天统计，排列</desc>
</param>
</response>
</api>
<api>
<name>taobao.wangwang.eservice.streamweigths.get</name>
<desc>获取当前登录用户自己的店铺内的分流权重设置，只支持xml 返回。</desc>
<response>
<param>
<name>result_code</name>
<type>Number</type>
<level>Basic</level>
<desc>0表示返回正确</desc>
</param>
<param>
<name>result_count</name>
<type>Number</type>
<level>Basic</level>
<desc>返回数据条数</desc>
</param>
<param>
<name>staff_stream_weights</name>
<type>StreamWeight</type>
<level>Object Array</level>
<desc>分流权重数据</desc>
</param>
<param>
<name>total_weight</name>
<type>Number</type>
<level>Basic</level>
<desc>返回数据的总权重，返回数据为空的时候没有这个数字</desc>
</param>
</response>
</api>
<api>
<name>alibaba.geoip.get</name>
<desc>API提供通过IP地址查询对应的国家、省、市、运营商等信息的服务</desc>
<request>
<param>
<name>ip</name>
<type>String</type>
<required>required</required>
<desc>要查询的IP地址,与language一起使用，与iplist二选一使用，提供单个IP查询</desc>
</param>
<param>
<name>language</name>
<type>String</type>
<required>required</required>
<desc>返回结果的文字语言，cn中文；en英文</desc>
</param>
</request>
<response>
<param>
<name>city</name>
<type>String</type>
<level>Basic</level>
<desc>城市名称</desc>
</param>
<param>
<name>cityid</name>
<type>String</type>
<level>Basic</level>
<desc>城市id</desc>
</param>
<param>
<name>country</name>
<type>String</type>
<level>Basic</level>
<desc>国家</desc>
</param>
<param>
<name>countryid</name>
<type>String</type>
<level>Basic</level>
<desc>国家编码</desc>
</param>
<param>
<name>county</name>
<type>String</type>
<level>Basic</level>
<desc>县</desc>
</param>
<param>
<name>countyid</name>
<type>String</type>
<level>Basic</level>
<desc>县ID</desc>
</param>
<param>
<name>ip</name>
<type>String</type>
<level>Basic</level>
<desc>IP地址字符串</desc>
</param>
<param>
<name>isp</name>
<type>String</type>
<level>Basic</level>
<desc>运营商名称</desc>
</param>
<param>
<name>ispid</name>
<type>String</type>
<level>Basic</level>
<desc>运营商id</desc>
</param>
<param>
<name>lang</name>
<type>String</type>
<level>Basic</level>
<desc>语言</desc>
</param>
<param>
<name>latitude</name>
<type>String</type>
<level>Basic</level>
<desc>经度</desc>
</param>
<param>
<name>lip</name>
<type>Number</type>
<level>Basic</level>
<desc>IP地址的整数值</desc>
</param>
<param>
<name>longitude</name>
<type>String</type>
<level>Basic</level>
<desc>纬度</desc>
</param>
<param>
<name>region</name>
<type>String</type>
<level>Basic</level>
<desc>地区名称</desc>
</param>
<param>
<name>regionid</name>
<type>String</type>
<level>Basic</level>
<desc>地区编码</desc>
</param>
</response>
</api>
<api>
<name>taobao.appip.get</name>
<desc>获取ISV发起请求服务器IP</desc>
<response>
<param>
<name>ip</name>
<type>String</type>
<level>Basic</level>
<desc>ISV发起请求服务器IP</desc>
</param>
</response>
</api>
<api>
<name>taobao.feedback.add</name>
<desc>添加用户反馈信息</desc>
<request>
<param>
<name>info</name>
<type>String</type>
<required>required</required>
<desc>具体反馈的信息，一个json构成的字符串</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>required</required>
<desc>反馈信息的类型，例如是同步服务的或者其他系统的</desc>
</param>
</request>
<response>
<param>
<name>result</name>
<type>Date</type>
<level>Basic</level>
<desc>返回记录的时间</desc>
</param>
</response>
</api>
<api>
<name>taobao.kfc.keyword.search</name>
<desc>对输入的文本信息进行禁忌关键词匹配，返回匹配的结果</desc>
<request>
<param>
<name>apply</name>
<type>String</type>
<required>optional</required>
<desc>应用点，分为一级应用点、二级应用点。其中一级应用点通常是指某一个系统或产品，比如淘宝的商品应用（taobao_auction）；二级应用点，是指一级应用点下的具体的分类，比如商品标题(title)、商品描述(content)。不同的二级应用可以设置不同关键词。 
 
这里的apply参数是由一级应用点与二级应用点合起来的字符（一级应用点+"."+二级应用点），如taobao_auction.title。 
 
 
通常apply参数是不需要传递的。如有特殊需求（比如特殊的过滤需求，需要自己维护一套自己词库），需传递此参数。</desc>
</param>
<param>
<name>content</name>
<type>String</type>
<required>required</required>
<desc>需要过滤的文本信息</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>发布信息的淘宝会员名，可以不传</desc>
</param>
</request>
<response>
<param>
<name>kfc_search_result</name>
<type>KfcSearchResult</type>
<level>Object</level>
<desc>KFC关键词匹配返回的结果信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.time.get</name>
<desc>获取淘宝系统当前时间</desc>
<response>
<param>
<name>time</name>
<type>Date</type>
<level>Basic</level>
<desc>淘宝系统当前时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
</response>
</api>
<api>
<name>taobao.topats.result.get</name>
<desc>获取异步任务结果。 
&lt;br/&gt;异步API使用方法，请查看：&lt;a href="http://open.taobao.com/doc/detail.htm?id=30"&gt;异步API使用说明&lt;/a&gt; 
&lt;br/&gt;1. 只能获取AppKey自身创建的异步任务结果 
&lt;br/&gt;2. 如果任务状态为done，则返回任务结果（如taobao.topats.trades.fullinfo.get）或下载地址（如taobao.topats.trades.sold.get） 
&lt;br/&gt;3. 任务结果下载地址只能使用一次，需要重复下载可重新调用此接口获取下载地址</desc>
<request>
<param>
<name>task_id</name>
<type>Number</type>
<required>required</required>
<desc>任务id号，创建任务时返回的task_id</desc>
</param>
</request>
<response>
<param>
<name>task</name>
<type>Task</type>
<level>Object</level>
<desc>任务结果信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.topats.task.delete</name>
<desc>可用于取消已经创建的异步任务。&lt;/br&gt; 
条件限制：&lt;/br&gt; 
1)一次只可以取消一个任务&lt;/br&gt; 
2）只能取消自己创建的任务</desc>
<request>
<param>
<name>task_id</name>
<type>Number</type>
<required>required</required>
<desc>需要取消的任务ID</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>表示操作是否成功，是为true，否为false。</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.account.balance.get</name>
<desc>获取实时余额，”元”为单位</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>balance</name>
<type>Price</type>
<level>Basic</level>
<desc>实时余额，”元”为单位</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.adgroup.add</name>
<desc>创建一个推广组</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划Id</desc>
</param>
<param>
<name>default_price</name>
<type>Number</type>
<required>required</required>
<min_value>5</min_value>
<desc>推广组默认出价，单位为分，不能小于5 不能大于日最高限额&lt;br /&gt; 支持最小值为：5</desc>
</param>
<param>
<name>img_url</name>
<type>String</type>
<required>required</required>
<desc>创意图片地址，必须是商品的图片之一</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>商品Id</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>required</required>
<max_length>40</max_length>
<desc>创意标题，最多20个汉字&lt;br /&gt; 支持最大长度为：40&lt;br /&gt; 支持的最大列表长度为：40</desc>
</param>
</request>
<response>
<param>
<name>adgroup</name>
<type>ADGroup</type>
<level>Object</level>
<desc>新增加的推广组</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.adgroup.adgroupcatmatchs.get</name>
<desc>根据一组推广组id获取推广组类目出价列表,</desc>
<request>
<param>
<name>adgroup_ids</name>
<type>Number</type>
<required>required</required>
<max_list_size>200</max_list_size>
<desc>推广组Id列表</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>adgroup_catmatch_list</name>
<type>ADGroupCatmatch</type>
<level>Object Array</level>
<desc>类目出价列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.adgroup.campcatmatchs.get</name>
<desc>根据一个推广计划的id获取一页推广组类目出价列表</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划Id</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码，从1开始</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_length>200</max_length>
<desc>页尺寸，最大200&lt;br /&gt; 支持的最大列表长度为：200</desc>
</param>
</request>
<response>
<param>
<name>adgroupcatmatchs</name>
<type>ADGroupCatMatchPage</type>
<level>Object</level>
<desc>一页推广组类目出价列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.adgroup.catmatch.get</name>
<desc>取得一个推广组的类目出价</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>required</required>
<desc>推广组Id</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>adgroupcatmatch</name>
<type>ADGroupCatmatch</type>
<level>Object</level>
<desc>推广组的类目出价对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.adgroup.catmatch.update</name>
<desc>更新一个推广组的类目出价，可以设置类目出价、是否使用默认出价、是否打开类目出价</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>required</required>
<desc>推广组Id</desc>
</param>
<param>
<name>catmatch_id</name>
<type>Number</type>
<required>required</required>
<desc>类目出价Id</desc>
</param>
<param>
<name>max_price</name>
<type>Number</type>
<required>required</required>
<min_value>5</min_value>
<desc>类目出价，单位为分，不能小于5。如果use_default_price字段为使用默认出价，则此max_price字段所传入的值不起作用。商品将会使用默认出价。&lt;br /&gt; 支持最小值为：5</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>online_status</name>
<type>String</type>
<required>required</required>
<desc>是否启用类目出价； offline-不启用 online-启用,如果此字段状态为offline时，则max_price,use_default_price字段值不起作用</desc>
</param>
<param>
<name>use_default_price</name>
<type>Boolean</type>
<required>required</required>
<desc>是否使用推广组默认出价false为不使用，true为使用</desc>
</param>
</request>
<response>
<param>
<name>adgroupcatmatch</name>
<type>ADGroupCatmatch</type>
<level>Object</level>
<desc>推广组的类目出价对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.adgroup.catmatchforecast.get</name>
<desc>获取指定推广组下给定出价的类目出价预估信息;</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>required</required>
<desc>推广组ID</desc>
</param>
<param>
<name>catmatch_price</name>
<type>Number</type>
<required>required</required>
<desc>类目出价,出价范围在5-9999之间,单位分</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>adgroup_catmatch_forecast</name>
<type>ADGroupCatMatchForecast</type>
<level>Object</level>
<desc>类目出价预估结果信息 预测数据皆为估算结果，以实际发生为准</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.adgroup.changedcatmatchs.get</name>
<desc>分页获取修改过的推广组类目出价ID , 推广组ID，修改时间</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>返回的第几页数据，默认为1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_length>1000</max_length>
<desc>返回的每页数据量大小,默认200最大1000&lt;br /&gt; 支持的最大列表长度为：1000</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>得到此时间点之后的数据，不能大于一个月</desc>
</param>
</request>
<response>
<param>
<name>changed_catmatchs</name>
<type>ADGroupCatMatchPage</type>
<level>Object</level>
<desc>一页类目出价对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.adgroup.delete</name>
<desc>删除一个推广组</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>required</required>
<desc>推广组Id</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>adgroup</name>
<type>ADGroup</type>
<level>Object</level>
<desc>被删除的推广组</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.adgroup.nonsearchprices.update</name>
<desc>修改通投出价</desc>
<request>
<param>
<name>adgroupid_price_json</name>
<type>String</type>
<required>required</required>
<desc>推广组id，通投位置价格，是否使用默认出价json 数组字符串，数组个数最多200个. 
json数组中的key必须和对应实体ADGroup中的属性字段保持一致，否则对应的实体对象属性获取不到相应的值， 
adgroupId,isNonsearchDefaultPrice不能为空。nonsearchMaxPrice是整数，以“分”为单位，不能小于5，不能大于日限额,不能大于9999分。 启用非搜索默认出价时nonsearchMaxPrice为0</desc>
</param>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划ID</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>adgroup_list</name>
<type>ADGroup</type>
<level>Object Array</level>
<desc>推广组列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.adgroup.nonsearchstates.update</name>
<desc>更改通投状态（暂停或启动）</desc>
<request>
<param>
<name>adgroupid_nonsearchstate_json</name>
<type>String</type>
<required>required</required>
<desc>推广组ID通投状态json数组字符串，数组个数最多200个。json数组中的key必须和对应实体ADGroup 中的属性字段保持一致，否则对应的实体对象属性获取不到相应的值推广组ID,通投状态不传默认为1</desc>
</param>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划ID</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>adgroup_list</name>
<type>ADGroup</type>
<level>Object Array</level>
<desc>推广组列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.adgroup.onlineitemsvon.get</name>
<desc>获取用户上架在线销售的全部宝贝</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>order_by</name>
<type>Boolean</type>
<required>optional</required>
<desc>排序，true:降序， false:升序</desc>
</param>
<param>
<name>order_field</name>
<type>String</type>
<required>optional</required>
<desc>排序字段，starts：按开始时间排序bidCount:按销量排序</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<max_value>50</max_value>
<desc>页码，从1开始,最大50。最大只能获取1W个宝贝&lt;br /&gt; 支持最大值为：50</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>200</max_value>
<desc>页尺寸，最大200&lt;br /&gt; 支持最大值为：200</desc>
</param>
</request>
<response>
<param>
<name>page_item</name>
<type>SubwayItemPartition</type>
<level>Object</level>
<desc>带分页的淘宝商品</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.adgroup.update</name>
<desc>更新一个推广组的信息，可以设置默认出价、是否上线、非搜索出价、非搜索是否使用默认出价</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>required</required>
<desc>推广组Id</desc>
</param>
<param>
<name>default_price</name>
<type>Number</type>
<required>special</required>
<min_value>5</min_value>
<desc>默认出价，单位是分，不能小于5&lt;br /&gt; 支持最小值为：5</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>nonsearch_max_price</name>
<type>Number</type>
<required>special</required>
<min_value>5</min_value>
<desc>非搜索出价，单位是分，不能小于5，如果use_nonseatch_default_price为使用默认出价，则此nonsearch_max_price字段传入的数据不起作用，商品将使用默认非搜索出价&lt;br /&gt; 支持最小值为：5</desc>
</param>
<param>
<name>online_status</name>
<type>String</type>
<required>special</required>
<desc>用户设置的上下线状态 offline-下线(暂停竞价)； online-上线；默认为online</desc>
</param>
<param>
<name>use_nonsearch_default_price</name>
<type>Boolean</type>
<required>special</required>
<desc>非搜索是否使用默认出价，false-不用；true-使用；默认为true;</desc>
</param>
</request>
<response>
<param>
<name>adgroup</name>
<type>ADGroup</type>
<level>Object</level>
<desc>被修改的推广组</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.adgroupids.changed.get</name>
<desc>获取修改的推广组ID</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>返回的第几页数据，默认为1&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>1000</max_value>
<min_value>1</min_value>
<desc>返回的每页数据量大小,默认200最大1000&lt;br /&gt; 支持最大值为：1000&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>得到此时间点之后的数据，不能大于一个月</desc>
</param>
</request>
<response>
<param>
<name>changed_adgroupids</name>
<type>Number</type>
<level>Basic Array</level>
<desc>推广组ID列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.adgroupids.deleted.get</name>
<desc>获取删除的推广组ID</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>返回的第几页数据，默认为1&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>1000</max_value>
<min_value>1</min_value>
<desc>返回的每页数据量大小,默认200最大1000&lt;br /&gt; 支持最大值为：1000&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>得到此时间点之后的数据，不能大于一个月</desc>
</param>
</request>
<response>
<param>
<name>deleted_adgroup_ids</name>
<type>Number</type>
<level>Basic Array</level>
<desc>推广组ID列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.adgroups.changed.get</name>
<desc>分页获取修改的推广组ID和修改时间</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>返回的第几页数据，默认为1&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>1000</max_value>
<min_value>1</min_value>
<desc>返回的每页数据量大小,默认200最大1000&lt;br /&gt; 支持最大值为：1000&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>得到此时间点之后的数据，不能大于一个月</desc>
</param>
</request>
<response>
<param>
<name>adgroups</name>
<type>ADGroupPage</type>
<level>Object</level>
<desc>推广组分页对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.adgroups.item.exist</name>
<desc>判断在一个推广计划中是否已经推广了一个商品</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划Id</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>商品Id</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>exist</name>
<type>Boolean</type>
<level>Basic</level>
<desc>true表示已经被推广，false表示没有被推广</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.adgroupsbyadgroupids.get</name>
<desc>批量得到推广组</desc>
<request>
<param>
<name>adgroup_ids</name>
<type>Number</type>
<required>special</required>
<max_list_size>200</max_list_size>
<desc>推广组Id列表</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>required</required>
<min_value>1</min_value>
<desc>页码，从1开始&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>required</required>
<max_value>200</max_value>
<min_value>1</min_value>
<desc>页尺寸，最大200，如果入参adgroup_ids有传入值，则page_size和page_no值不起作用。如果adgrpup_ids为空而campaign_id有值，此时page_size和page_no值才是返回的页数据大小和页码&lt;br /&gt; 支持最大值为：200&lt;br /&gt; 支持最小值为：1</desc>
</param>
</request>
<response>
<param>
<name>adgroups</name>
<type>ADGroupPage</type>
<level>Object</level>
<desc>返回的推广组分页对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.adgroupsbycampaignid.get</name>
<desc>批量得到推广计划下的推广组</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>special</required>
<desc>推广计划Id</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>required</required>
<min_value>1</min_value>
<desc>页码，从1开始&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>required</required>
<max_value>200</max_value>
<min_value>1</min_value>
<desc>页尺寸，最大200，如果入参adgroup_ids有传入值，则page_size和page_no值不起作用。如果adgrpup_ids为空而campaign_id有值，此时page_size和page_no值才是返回的页数据大小和页码&lt;br /&gt; 支持最大值为：200&lt;br /&gt; 支持最小值为：1</desc>
</param>
</request>
<response>
<param>
<name>adgroups</name>
<type>ADGroupPage</type>
<level>Object</level>
<desc>返回的推广组分页对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.campaign.add</name>
<desc>创建一个推广计划</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>required</required>
<max_length>20</max_length>
<desc>推广计划名称，不能多余20个汉字，不能和客户其他推广计划同名。&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
</request>
<response>
<param>
<name>campaign</name>
<type>Campaign</type>
<level>Object</level>
<desc>创建的推广计划</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.campaign.area.get</name>
<desc>取得一个推广计划的投放地域设置</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划Id</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>campaign_area</name>
<type>CampaignArea</type>
<level>Object</level>
<desc>推广计划的投放地域配置</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.campaign.area.update</name>
<desc>更新一个推广计划的投放地域</desc>
<request>
<param>
<name>area</name>
<type>String</type>
<required>required</required>
<desc>值为：“all”；或者用“,”分割的数字，数字必须是直通车全国省市列表的AreaID；</desc>
</param>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划Id</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>campaign_area</name>
<type>CampaignArea</type>
<level>Object</level>
<desc>修改后的推广计划投放地域</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.campaign.areaoptions.get</name>
<desc>取得推广计划的可设置投放地域列表</desc>
<response>
<param>
<name>area_options</name>
<type>AreaOption</type>
<level>Object Array</level>
<desc>推广计划所有可设置的投放地域</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.campaign.budget.get</name>
<desc>取得一个推广计划的日限额</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划Id</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>campaign_budget</name>
<type>CampaignBudget</type>
<level>Object</level>
<desc>推广计划日限额</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.campaign.budget.update</name>
<desc>更新一个推广计划的日限额</desc>
<request>
<param>
<name>budget</name>
<type>Number</type>
<required>optional</required>
<max_value>99999</max_value>
<min_value>30</min_value>
<desc>如果为空则取消限额；否则必须为整数，单位是元，不得小于30；&lt;br /&gt; 支持最大值为：99999&lt;br /&gt; 支持最小值为：30</desc>
</param>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划Id</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>use_smooth</name>
<type>Boolean</type>
<required>required</required>
<desc>是否平滑消耗：false-否，true-是</desc>
</param>
</request>
<response>
<param>
<name>campaign_budget</name>
<type>CampaignBudget</type>
<level>Object</level>
<desc>修改后的推广计划日限额</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.campaign.channeloptions.get</name>
<desc>取得推广计划的可设置投放频道列表</desc>
<response>
<param>
<name>channel_options</name>
<type>ChannelOption</type>
<level>Object Array</level>
<desc>所有推广计划可投放的频道</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.campaign.platform.get</name>
<desc>取得一个推广计划的投放平台设置</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划Id</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>campaign_platform</name>
<type>CampaignPlatform</type>
<level>Object</level>
<desc>取得的推广计划的投放平台设置</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.campaign.platform.update</name>
<desc>更新一个推广计划的平台设置</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划Id</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>nonsearch_channels</name>
<type>Number</type>
<required>optional</required>
<max_list_size>10</max_list_size>
<max_value>128</max_value>
<min_value>0</min_value>
<desc>非搜索投放频道代码数组，频道代码必须是直通车非搜索类频道列表中的值。&lt;br /&gt; 支持最大值为：128&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>outside_discount</name>
<type>Number</type>
<required>required</required>
<max_value>200</max_value>
<min_value>1</min_value>
<desc>溢价的百分比，必须是大于等于 1小于等于200的整数&lt;br /&gt; 支持最大值为：200&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>search_channels</name>
<type>Number</type>
<required>required</required>
<max_list_size>10</max_list_size>
<max_value>128</max_value>
<min_value>0</min_value>
<desc>搜索投放频道代码数组，频道代码必须是直通车搜索类频道列表中的值，必须包含淘宝内网。&lt;br /&gt; 支持最大值为：128&lt;br /&gt; 支持最小值为：0</desc>
</param>
</request>
<response>
<param>
<name>campaign_platform</name>
<type>CampaignPlatform</type>
<level>Object</level>
<desc>修改后的推广计划投放平台设置</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.campaign.schedule.get</name>
<desc>取得一个推广计划的分时折扣设置</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划Id</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>campaign_schedule</name>
<type>CampaignSchedule</type>
<level>Object</level>
<desc>修改后的推广计划分时折扣</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.campaign.schedule.update</name>
<desc>更新一个推广计划的分时折扣设置</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划Id</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>schedule</name>
<type>String</type>
<required>required</required>
<desc>值为：“all”；或者用“;”分割的每天的设置字符串，该字符串为用“,”分割的时段折扣字符串，格式为：起始时间-结束时间:折扣，其中时间是24小时格式记录，折扣是1-150整数，表示折扣百分比；</desc>
</param>
</request>
<response>
<param>
<name>campaign_schedule</name>
<type>CampaignSchedule</type>
<level>Object</level>
<desc>修改后的推广计划分时折扣</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.campaign.update</name>
<desc>更新一个推广计划，可以设置推广计划名字，修改推广计划上下线状态。</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划Id</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>online_status</name>
<type>String</type>
<required>required</required>
<desc>用户设置的上下限状态；offline-下线；online-上线；</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>required</required>
<max_length>40</max_length>
<desc>推广计划名称，不能多余40个字符，不能和客户其他推广计划同名。&lt;br /&gt; 支持最大长度为：40&lt;br /&gt; 支持的最大列表长度为：40</desc>
</param>
</request>
<response>
<param>
<name>campaign</name>
<type>Campaign</type>
<level>Object</level>
<desc>修改后的推广计划</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.campaigns.get</name>
<desc>取得一个客户的推广计划；</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>campaigns</name>
<type>Campaign</type>
<level>Object Array</level>
<desc>推广计划列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.catmatchids.changed.get</name>
<desc>获取更改过的类目出价ID</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>返回的第几页数据，默认为1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>返回的每页数据量大小,默认200最大1000</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>得到此时间点之后的数据，不能大于一个月</desc>
</param>
</request>
<response>
<param>
<name>changed_catmatch_ids</name>
<type>Number</type>
<level>Basic Array</level>
<desc>类目出价ID列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.catmatchids.deleted.get</name>
<desc>获取删除的类目出价ID</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>返回的第几页数据，默认为1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>返回的每页数据量大小,默认200最大1000</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>得到此时间点之后的数据，不能大于一个月</desc>
</param>
</request>
<response>
<param>
<name>deleted_catmatch_ids</name>
<type>Number</type>
<level>Basic Array</level>
<desc>类目出价ID列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.creative.add</name>
<desc>创建一个创意</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>required</required>
<desc>推广组Id</desc>
</param>
<param>
<name>img_url</name>
<type>String</type>
<required>required</required>
<desc>创意图片地址，必须是推广组对应商品的图片之一</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>required</required>
<max_length>40</max_length>
<desc>创意标题，最多20个汉字&lt;br /&gt; 支持最大长度为：40&lt;br /&gt; 支持的最大列表长度为：40</desc>
</param>
</request>
<response>
<param>
<name>creative</name>
<type>Creative</type>
<level>Object</level>
<desc>新增加的创意对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.creative.delete</name>
<desc>删除一个创意</desc>
<request>
<param>
<name>creative_id</name>
<type>Number</type>
<required>required</required>
<desc>创意Id</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>creative</name>
<type>Creative</type>
<level>Object</level>
<desc>被删除的创意对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.creative.update</name>
<desc>更新一个创意的信息，可以设置创意标题、创意图片</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>required</required>
<desc>推广组Id</desc>
</param>
<param>
<name>creative_id</name>
<type>Number</type>
<required>required</required>
<desc>创意Id</desc>
</param>
<param>
<name>img_url</name>
<type>String</type>
<required>required</required>
<desc>创意图片地址，必须是推广组对应商品的图片之一</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>required</required>
<max_length>40</max_length>
<desc>创意标题，最多20个汉字&lt;br /&gt; 支持最大长度为：40&lt;br /&gt; 支持的最大列表长度为：40</desc>
</param>
</request>
<response>
<param>
<name>creativerecord</name>
<type>CreativeRecord</type>
<level>Object</level>
<desc>创意修改记录对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.creativeids.changed.get</name>
<desc>获取修改的创意ID</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>返回的第几页数据，默认为1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>1000</max_value>
<min_value>1</min_value>
<desc>返回的每页数据量大小,默认200最大1000&lt;br /&gt; 支持最大值为：1000&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>得到此时间点之后的数据，不能大于一个月</desc>
</param>
</request>
<response>
<param>
<name>changed_creative_ids</name>
<type>Number</type>
<level>Basic Array</level>
<desc>创意ID列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.creativeids.deleted.get</name>
<desc>获取删除的创意ID</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>返回的第几页数据，默认为1&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>1000</max_value>
<min_value>1</min_value>
<desc>返回的每页数据量大小,默认200最大1000&lt;br /&gt; 支持最大值为：1000&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>得到这个时间点之后的数据，不能大于一个月</desc>
</param>
</request>
<response>
<param>
<name>deleted_creative_ids</name>
<type>Number</type>
<level>Basic Array</level>
<desc>创意ID列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.creatives.changed.get</name>
<desc>分页获取修改过的广告创意ID和修改时间</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>返回的第几页数据，默认为1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>1000</max_value>
<min_value>1</min_value>
<desc>返回的每页数据量大小,默认200最大1000&lt;br /&gt; 支持最大值为：1000&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>得到此时间点之后的数据，不能大于一个月</desc>
</param>
</request>
<response>
<param>
<name>creatives</name>
<type>CreativePage</type>
<level>Object</level>
<desc>广告创意分页对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.creatives.get</name>
<desc>取得一个推广组的所有创意或者根据一个创意Id列表取得一组创意； 
如果同时提供了推广组Id和创意id列表，则优先使用推广组Id；</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>special</required>
<desc>推广组Id</desc>
</param>
<param>
<name>creative_ids</name>
<type>Number</type>
<required>special</required>
<max_list_size>200</max_list_size>
<desc>创意Id数组，最多200个</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>creatives</name>
<type>Creative</type>
<level>Object Array</level>
<desc>创意对象列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.creatives.record.get</name>
<desc>根据一个创意Id列表取得创意对应的修改记录</desc>
<request>
<param>
<name>creative_ids</name>
<type>Number</type>
<required>required</required>
<max_list_size>200</max_list_size>
<desc>创意Id数组，最多200个</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>creativerecords</name>
<type>CreativeRecord</type>
<level>Object Array</level>
<desc>创意修改对象列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.customers.authorized.get</name>
<desc>取得当前登录用户的授权账户列表</desc>
<response>
<param>
<name>nicks</name>
<type>String</type>
<level>Basic Array</level>
<desc>授权当前登录账户为代理账户的昵称列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.insight.cats.get</name>
<desc>获取类目信息</desc>
<request>
<param>
<name>category_ids</name>
<type>String</type>
<required>required</required>
<max_list_size>200</max_list_size>
<desc>查询类目id数组，最大长度200</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>in_category_tops</name>
<type>INCategoryTop</type>
<level>Object Array</level>
<desc>类目对象列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.insight.catsanalysis.get</name>
<desc>类目分析数据查询</desc>
<request>
<param>
<name>category_ids</name>
<type>String</type>
<required>required</required>
<max_list_size>200</max_list_size>
<desc>查询类目id数组，最大长度200</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>stu</name>
<type>String</type>
<required>required</required>
<desc>结果过滤。 
AREA：返回地域占比； 
SOURCE：返回来源占比； 
HPRICE：返回竞价分布。 
stu只能是AREA、SOURCE或HPRICE中的一个</desc>
</param>
</request>
<response>
<param>
<name>in_category_analyses</name>
<type>INCategoryAnalysis</type>
<level>Object Array</level>
<desc>词分析数据列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.insight.catsbase.get</name>
<desc>类目基础数据查询</desc>
<request>
<param>
<name>category_ids</name>
<type>String</type>
<required>required</required>
<max_list_size>200</max_list_size>
<desc>查询类目id数组，最大长度200</desc>
</param>
<param>
<name>filter</name>
<type>String</type>
<required>required</required>
<desc>结果过滤。PV：返回展现量；CLICK：返回点击量；AVGCPC：返回平均出价；COMPETITION ：返回竞争宝贝数;CTR 点击率。filter可由,组合</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>time</name>
<type>String</type>
<required>required</required>
<desc>时间格式(DAY: 最近一天； WEEK：最近一周。MONTH：最近一个月。3MONTH：最近三个月)</desc>
</param>
</request>
<response>
<param>
<name>in_category_bases</name>
<type>INCategoryBase</type>
<level>Object Array</level>
<desc>类目基础数据列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.insight.catsforecast.get</name>
<desc>类目属性预测</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>words</name>
<type>String</type>
<required>required</required>
<max_list_size>200</max_list_size>
<desc>查询词数组，最大长度200</desc>
</param>
</request>
<response>
<param>
<name>in_category_tops</name>
<type>INCategoryTop</type>
<level>Object Array</level>
<desc>类目对象列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.insight.catsrelatedword.get</name>
<desc>类目相关词查询</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>result_num</name>
<type>Number</type>
<required>required</required>
<max_value>10</max_value>
<min_value>1</min_value>
<desc>最大返回数量(1-10)&lt;br /&gt; 支持最大值为：10&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>words</name>
<type>String</type>
<required>required</required>
<max_list_size>200</max_list_size>
<desc>查询词数组，最大长度200</desc>
</param>
</request>
<response>
<param>
<name>related_words</name>
<type>String</type>
<level>Basic Array</level>
<desc>类目相关词对象列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.insight.catstopword.get</name>
<desc>类目TOP词查询</desc>
<request>
<param>
<name>category_ids</name>
<type>String</type>
<required>required</required>
<max_list_size>200</max_list_size>
<desc>类目id数组，最大长度200</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>result_num</name>
<type>Number</type>
<required>required</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>最大返回数量(1-100)&lt;br /&gt; 支持最大值为：100&lt;br /&gt; 支持最小值为：1</desc>
</param>
</request>
<response>
<param>
<name>top_words</name>
<type>String</type>
<level>Basic Array</level>
<desc>类目TOP词查询</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.insight.toplevelcats.get</name>
<desc>获取一级类目</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>in_category_tops</name>
<type>INCategoryTop</type>
<level>Object Array</level>
<desc>得到一级类目</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.insight.wordsanalysis.get</name>
<desc>词分析数据查询</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>stu</name>
<type>String</type>
<required>required</required>
<desc>结果过滤。 
AREA：  返回地域占比； 
SOURCE：返回来源占比； 
HPRICE：返回竞价分布。 
stu只能是AREA、SOURCE或HPRICE中的一个</desc>
</param>
<param>
<name>words</name>
<type>String</type>
<required>required</required>
<max_list_size>200</max_list_size>
<desc>查询词组，最大长度200</desc>
</param>
</request>
<response>
<param>
<name>in_word_analyses</name>
<type>INWordAnalysis</type>
<level>Object Array</level>
<desc>词分析列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.insight.wordsbase.get</name>
<desc>词基础数据查询</desc>
<request>
<param>
<name>filter</name>
<type>String</type>
<required>required</required>
<desc>结果过滤。PV：返回展现量；CLICK：返回点击量；AVGCPC：返回平均出价；COMPETITION ：返回竞争宝贝数;CTR 点击率。filter可由,组合</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>time</name>
<type>String</type>
<required>required</required>
<desc>时间格式(DAY: 最近一天； WEEK：最近一周。MONTH：最近一个月。3MONTH：最近三个月)</desc>
</param>
<param>
<name>words</name>
<type>String</type>
<required>required</required>
<max_list_size>170</max_list_size>
<desc>查询词组，最大长度170</desc>
</param>
</request>
<response>
<param>
<name>in_word_bases</name>
<type>INWordBase</type>
<level>Object Array</level>
<desc>词基础数据对象列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.insight.wordscats.get</name>
<desc>词和类目查询</desc>
<request>
<param>
<name>filter</name>
<type>String</type>
<required>required</required>
<desc>结果过滤。PV：返回展现量；CLICK：返回点击量；AVGCPC：返回平均出价；COMPETITION ：返回竞争宝贝数;CTR 点击率。filter可由,组合</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>word_categories</name>
<type>String</type>
<required>required</required>
<max_list_size>200</max_list_size>
<desc>查询词和类目数组，最大长度200，每一个数组元素都是词+类目，以”^^”分割如下： 
词^^类目</desc>
</param>
</request>
<response>
<param>
<name>in_word_categories</name>
<type>INWordCategory</type>
<level>Object Array</level>
<desc>词和类目基础信息对象列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.keyword.keywordforecast.get</name>
<desc>根据词ID和给定的出价获取词的预估信息</desc>
<request>
<param>
<name>bidword_price</name>
<type>Number</type>
<required>required</required>
<desc>词的出价,范围在5-9999之间,单位分</desc>
</param>
<param>
<name>keyword_id</name>
<type>Number</type>
<required>required</required>
<desc>词ID</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>经典名表行</desc>
</param>
</request>
<response>
<param>
<name>keyword_forecast</name>
<type>KeywordForecast</type>
<level>Object</level>
<desc>词预估结果信息 
 
预测数据皆为估算结果，以实际发生为准</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.keyword.rankingforecast.get</name>
<desc>获取词的预估信息</desc>
<request>
<param>
<name>keyword_ids</name>
<type>Number</type>
<required>required</required>
<max_list_size>1</max_list_size>
<desc>关键词Id列表，最多支持1个</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>经典名表行</desc>
</param>
</request>
<response>
<param>
<name>keyword_ranking_forecast</name>
<type>Rankingforecast</type>
<level>Object Array</level>
<desc>词预估结果信息 
 
预测数据皆为估算结果，以实际发生为准</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.keywordids.changed.get</name>
<desc>获取修改的词ID</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>返回的第几页数据，默认为1&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>1000</max_value>
<min_value>1</min_value>
<desc>返回的每页数据量大小,默认200最大1000&lt;br /&gt; 支持最大值为：1000&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>得到此时间点之后的数据，不能大于一个月</desc>
</param>
</request>
<response>
<param>
<name>changed_keyword_ids</name>
<type>Number</type>
<level>Basic Array</level>
<desc>词的ID列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.keywordids.deleted.get</name>
<desc>获取删除的词ID</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>返回的第几页数据，默认为1&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>1000</max_value>
<min_value>1</min_value>
<desc>返回的每页数据量大小,默认200最大1000&lt;br /&gt; 支持最大值为：1000&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>得到此时间点之后的数据，不能大于一个月</desc>
</param>
</request>
<response>
<param>
<name>deleted_keyword_ids</name>
<type>Number</type>
<level>Basic Array</level>
<desc>词ID列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.keywords.changed.get</name>
<desc>分页获取修改过的关键词ID、宝贝id、修改时间</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>返回的第几页数据，默认为1&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>1000</max_value>
<min_value>1</min_value>
<desc>返回的每页数据量大小,默认200最大1000&lt;br /&gt; 支持最大值为：1000&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>得到此时间点之后的数据，不能大于一个月</desc>
</param>
</request>
<response>
<param>
<name>keywords</name>
<type>KeywordPage</type>
<level>Object</level>
<desc>关键词分页对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.keywords.delete</name>
<desc>删除一批关键词</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划Id</desc>
</param>
<param>
<name>keyword_ids</name>
<type>Number</type>
<required>required</required>
<max_list_size>100</max_list_size>
<desc>关键词Id数组，最多100个</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>keywords</name>
<type>Keyword</type>
<level>Object Array</level>
<desc>成功删除的关键词列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.keywords.pricevon.set</name>
<desc>设置一批关键词的出价</desc>
<request>
<param>
<name>keywordid_prices</name>
<type>String</type>
<required>required</required>
<desc>关键词ID，出价和匹配方式json字符串，keywordId:词ID，整数。maxPrice：价格，是整数，以“分”为单位，不能小于5，不能大于日限额,当使用默认出价时必须将这个值设置为0。; isDefaultPrice：是否使用默认出价，只能是0，1(0代表不使用，1代表使用)。matchscope只能是1,2,4（1代表精确匹配，2代表子串匹配，4代表广泛匹配）</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>keywords</name>
<type>Keyword</type>
<level>Object Array</level>
<desc>成功设置关键词价格的关键词列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.keywords.qscore.get</name>
<desc>取得一个推广组的所有关键词的质量得分列表</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>required</required>
<desc>推广组Id</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>keyword_qscore_list</name>
<type>KeywordQscore</type>
<level>Object Array</level>
<desc>取得的关键词质量得分列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.keywords.recommend.get</name>
<desc>取得一个推广组的推荐关键词列表</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>required</required>
<desc>推广组ID</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>order_by</name>
<type>String</type>
<required>optional</required>
<desc>排序方式:  
搜索量 search_volume  
市场平均价格 average_price  
相关度 relevance  
不排序 non  
默认为 non</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>required</required>
<min_value>1</min_value>
<desc>返回的第几页数据，默认为1&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>required</required>
<max_value>200</max_value>
<min_value>1</min_value>
<desc>返回的每页数据量大小,最大200&lt;br /&gt; 支持最大值为：200&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>pertinence</name>
<type>String</type>
<required>optional</required>
<desc>相关度</desc>
</param>
<param>
<name>search</name>
<type>Number</type>
<required>optional</required>
<desc>搜索量,设置此值后返回的就是大于此搜索量的词列表</desc>
</param>
</request>
<response>
<param>
<name>recommend_words</name>
<type>RecommendWordPage</type>
<level>Object</level>
<desc>推荐词分页对象，当输入的页码大于最大数值时，将返回最大的page_no值，并且结果中的数据列表为空值</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.keywordsbyadgroupid.get</name>
<desc>取得一个推广组的所有关键词</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>special</required>
<desc>推广组Id</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>keywords</name>
<type>Keyword</type>
<level>Object Array</level>
<desc>取得的关键词列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.keywordsbykeywordids.get</name>
<desc>根据一个关键词Id列表取得一组关键词</desc>
<request>
<param>
<name>keyword_ids</name>
<type>Number</type>
<required>special</required>
<max_list_size>200</max_list_size>
<desc>关键词Id数组，最多200个；</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>keywords</name>
<type>Keyword</type>
<level>Object Array</level>
<desc>取得的关键词列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.keywordscat.qscore.get</name>
<desc>取得一个推广组的所有关键词和类目出价的质量得分列表</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>required</required>
<desc>推广组Id</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>qscore</name>
<type>Qscore</type>
<level>Object</level>
<desc>类目出价和词的质量得分对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.keywordsvon.add</name>
<desc>创建一批关键词</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>required</required>
<desc>推广组id</desc>
</param>
<param>
<name>keyword_prices</name>
<type>String</type>
<required>required</required>
<desc>关键词，出价和匹配方式json字符串，word:词，不能有一些特殊字符。maxPrice：价格，是整数，以“分”为单位，不能小于5，不能大于日限额,当使用默认出价时必须将这个值设置为0。; isDefaultPrice：是否使用默认出价，只能是0，1(0代表不使用，1代表使用)。matchscope只能是1,2,4（1代表精确匹配，2代表子串匹配，4代表广泛匹配）。</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>keywords</name>
<type>Keyword</type>
<level>Object Array</level>
<desc>关键词列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.login.authsign.get</name>
<desc>获取登陆权限签名</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>subway_token</name>
<type>String</type>
<level>Basic</level>
<desc>登陆签名</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.nonsearch.adgroupplaces.add</name>
<desc>批量推广组添加定向推广投放位置，出价使用默认出价</desc>
<request>
<param>
<name>adgroup_places_json</name>
<type>String</type>
<required>required</required>
<desc>宝贝id投放位置id json数组字符串，数组个数最多200个。其中json数组中的key必须和对应实体AdGroupPlace中的属性字段保持一致，否则对应的实体对象属性获取不到相应的值</desc>
</param>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>12345</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>adgroup_place_list</name>
<type>ADGroupPlace</type>
<level>Object Array</level>
<desc>推广组定向推广位置列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.nonsearch.adgroupplaces.delete</name>
<desc>批量删除推广组定向推广投放位置</desc>
<request>
<param>
<name>adgroup_places_json</name>
<type>String</type>
<required>required</required>
<desc>推广组id，投放位置id  json数组字符串，数组个数最多200个。其中json数组中的key必须和对应实体AdGroupPlace中的属性字段保持一致，否则对应的实体对象属性获取不到相应的值</desc>
</param>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划ID</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>adgroup_place_list</name>
<type>ADGroupPlace</type>
<level>Object Array</level>
<desc>推广组定向推广投放位置列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.nonsearch.adgroupplaces.get</name>
<desc>根据指定推广计划下推广组列表获取相应推广组投放位置包括通投位置和单独出价位置</desc>
<request>
<param>
<name>adgroup_ids</name>
<type>Number</type>
<required>required</required>
<max_list_size>200</max_list_size>
<desc>推广组ID数组</desc>
</param>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划ID</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>adgroup_place_list</name>
<type>ADGroupPlace</type>
<level>Object Array</level>
<desc>推广组定向推广位置关系列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.nonsearch.adgroupplaces.update</name>
<desc>批量修改推广组定向推广投放位置价格</desc>
<request>
<param>
<name>adgroup_places_json</name>
<type>String</type>
<required>required</required>
<desc>推广组id，投放位置id，出价，是否默认出价 json数组字符串，数组个数最多200个。是否默认出价不能为空, 出价以“分”为单位，不能小于5分，不能大于最高日限额，不能大于9999分。 
json数组中的key必须和对应实体AdGroupPlace中的属性字段保持一致，否则对应的实体对象属性获取不到相应的值</desc>
</param>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划ID</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>adgroup_place_list</name>
<type>ADGroupPlace</type>
<level>Object Array</level>
<desc>推广组定向推广位置列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.nonsearch.alldemographics.get</name>
<desc>获取定向投放人群维度列表</desc>
<response>
<param>
<name>demographic_list</name>
<type>Demographic</type>
<level>Object Array</level>
<desc>定向投放人群维度列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.nonsearch.allplaces.get</name>
<desc>获取单独出价投放位置列表</desc>
<response>
<param>
<name>place_list</name>
<type>Place</type>
<level>Object Array</level>
<desc>定向推广投放位置列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.nonsearch.demographics.get</name>
<desc>获取给定campaign设置的投放人群维度列表</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划ID</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>demographic_setting_list</name>
<type>DemographicSetting</type>
<level>Object Array</level>
<desc>人群维度设置列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.nonsearch.demographics.update</name>
<desc>设置投放人群维度加价，如果给定的campagin没有设置给定的人群维度则添加给定的人群维度，如果给定的campaign已存在给定的人群维度则修改加价</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划ID</desc>
</param>
<param>
<name>demographic_id_price_json</name>
<type>String</type>
<required>required</required>
<desc>投放人群维度Id，加价json数组字符串。数组长度不能超过15，json数组中的key必须和相应实体DemographicSetting中的属性字段保持一致，否则对应的实体对象属性获取不到相应的值 
incrementalPrice是整数，以“分”为单位，不能小于1，不能大于日限额,不能大于9999分; 可以为0表示不加价；投放人群维度ID必须有效</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>demographic_setting_list</name>
<type>DemographicSetting</type>
<level>Object Array</level>
<desc>人群维度设置列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.rpt.adgroupbase.get</name>
<desc>推广组基础报表数据对象</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>required</required>
<desc>推广组id</desc>
</param>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划id</desc>
</param>
<param>
<name>end_time</name>
<type>String</type>
<required>required</required>
<desc>结束时间，格式yyyy-mm-dd</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>每页大小&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>search_type</name>
<type>String</type>
<required>required</required>
<desc>报表类型（搜索：SEARCH,类目出价：CAT, 
定向投放：NOSEARCH）可以一次取多个例如：SEARCH,CAT</desc>
</param>
<param>
<name>source</name>
<type>String</type>
<required>required</required>
<desc>数据来源（站内：1，站外：2）可多选以逗号分隔，默认值为：1,2</desc>
</param>
<param>
<name>start_time</name>
<type>String</type>
<required>required</required>
<desc>开始时间，格式yyyy-mm-dd</desc>
</param>
<param>
<name>subway_token</name>
<type>String</type>
<required>required</required>
<desc>权限校验参数</desc>
</param>
</request>
<response>
<param>
<name>rpt_adgroup_base_list</name>
<type>String</type>
<level>Basic</level>
<desc>广告组基础数据对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.rpt.adgroupcreativebase.get</name>
<desc>推广组下创意报表基础数据查询(汇总数据，不分类型)</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>required</required>
<desc>推广组id</desc>
</param>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>查询推广计划id</desc>
</param>
<param>
<name>end_time</name>
<type>String</type>
<required>required</required>
<desc>结束日期，格式yyyy-mm-dd</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>每页大小&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>search_type</name>
<type>String</type>
<required>required</required>
<desc>报表类型（搜索：SEARCH,类目出价：CAT, 定向投放：NOSEARCH汇总：SUMMARY）SUMMARY必须单选，其他值可多选例如：SEARCH,CAT</desc>
</param>
<param>
<name>source</name>
<type>String</type>
<required>required</required>
<desc>数据来源（站内：1，站外：2 ，汇总：SUMMARY）SUMMARY必须单选，其他值可多选例如1,2</desc>
</param>
<param>
<name>start_time</name>
<type>String</type>
<required>required</required>
<desc>开始日期，格式yyyy-mm-dd</desc>
</param>
<param>
<name>subway_token</name>
<type>String</type>
<required>required</required>
<desc>权限验证信息</desc>
</param>
</request>
<response>
<param>
<name>rpt_adgroupcreative_base_list</name>
<type>String</type>
<level>Basic</level>
<desc>推广组下的创意基础数据列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.rpt.adgroupcreativeeffect.get</name>
<desc>推广组下的创意报表效果数据查询(汇总数据，不分类型)</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>required</required>
<desc>推广组id</desc>
</param>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>查询推广计划id</desc>
</param>
<param>
<name>end_time</name>
<type>String</type>
<required>required</required>
<desc>结束日期，格式yyyy-mm-dd</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>每页大小&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>search_type</name>
<type>String</type>
<required>required</required>
<desc>报表类型（搜索：SEARCH,类目出价：CAT, 定向投放：NOSEARCH汇总：SUMMARY）SUMMARY必须单选，其他值可多选例如：SEARCH,CAT</desc>
</param>
<param>
<name>source</name>
<type>String</type>
<required>required</required>
<desc>数据来源（站内：1，站外：2 ，汇总：SUMMARY）SUMMARY必须单选，其他值可多选例如1,2</desc>
</param>
<param>
<name>start_time</name>
<type>String</type>
<required>required</required>
<desc>开始日期，格式yyyy-mm-dd</desc>
</param>
<param>
<name>subway_token</name>
<type>String</type>
<required>required</required>
<desc>权限验证信息</desc>
</param>
</request>
<response>
<param>
<name>rpt_adgroupcreative_effect_list</name>
<type>String</type>
<level>Basic</level>
<desc>推广组下的创意效果数据列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.rpt.adgroupeffect.get</name>
<desc>推广组效果报表数据对象</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>required</required>
<desc>推广组id</desc>
</param>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划id</desc>
</param>
<param>
<name>end_time</name>
<type>String</type>
<required>required</required>
<desc>结束时间，格式yyyy-mm-dd</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>每页大小&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>search_type</name>
<type>String</type>
<required>required</required>
<desc>报表类型（搜索：SEARCH,类目出价：CAT, 
定向投放：NOSEARCH ）可以一次取多个例如：SEARCH,CAT</desc>
</param>
<param>
<name>source</name>
<type>String</type>
<required>required</required>
<desc>数据来源（站内：1，站外：2）可多选以逗号分隔，默认值为：1,2</desc>
</param>
<param>
<name>start_time</name>
<type>String</type>
<required>required</required>
<desc>开始时间，格式yyyy-mm-dd</desc>
</param>
<param>
<name>subway_token</name>
<type>String</type>
<required>required</required>
<desc>权限校验参数</desc>
</param>
</request>
<response>
<param>
<name>rpt_adgroup_effect_list</name>
<type>String</type>
<level>Basic</level>
<desc>推广组效果报表数据对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.rpt.adgroupkeywordbase.get</name>
<desc>推广组下的词基础报表数据查询(明细数据不分类型查询)</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>required</required>
<desc>推广组ID</desc>
</param>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划ID</desc>
</param>
<param>
<name>end_time</name>
<type>String</type>
<required>required</required>
<desc>结束时间，格式yyyy-mm-dd</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>每页大小&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>search_type</name>
<type>String</type>
<required>required</required>
<desc>报表类型（搜索：SEARCH,类目出价：CAT, 定向投放：NOSEARCH）可多选例如：SEARCH,CAT</desc>
</param>
<param>
<name>source</name>
<type>String</type>
<required>required</required>
<desc>数据来源（站内：1，站外：2 ，汇总：SUMMARY）SUMMARY必须单选，其他值可多选例如1,2</desc>
</param>
<param>
<name>start_time</name>
<type>String</type>
<required>required</required>
<desc>开始时间，格式yyyy-mm-dd</desc>
</param>
<param>
<name>subway_token</name>
<type>String</type>
<required>required</required>
<desc>权限校验参数</desc>
</param>
</request>
<response>
<param>
<name>rpt_adgroupkeyword_base_list</name>
<type>String</type>
<level>Basic</level>
<desc>词基础数据返回结果</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.rpt.adgroupkeywordeffect.get</name>
<desc>推广组下的词效果报表数据查询(明细数据不分类型查询)</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>required</required>
<desc>推广组ID</desc>
</param>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划ID</desc>
</param>
<param>
<name>end_time</name>
<type>String</type>
<required>required</required>
<desc>结束时间，格式yyyy-mm-dd</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>每页大小&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>search_type</name>
<type>String</type>
<required>required</required>
<desc>报表类型（搜索：SEARCH,类目出价：CAT, 定向投放：NOSEARCH）可多选例如：SEARCH,CAT</desc>
</param>
<param>
<name>source</name>
<type>String</type>
<required>required</required>
<desc>数据来源（站内：1，站外：2 ，汇总：SUMMARY）SUMMARY必须单选，其他值可多选例如1,2</desc>
</param>
<param>
<name>start_time</name>
<type>String</type>
<required>required</required>
<desc>开始时间，格式yyyy-mm-dd</desc>
</param>
<param>
<name>subway_token</name>
<type>String</type>
<required>required</required>
<desc>权限校验参数</desc>
</param>
</request>
<response>
<param>
<name>rpt_adgroupkeyword_effect_list</name>
<type>String</type>
<level>Basic</level>
<desc>词效果数据返回结果</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.rpt.adgroupnonsearchbase.get</name>
<desc>推广组下的定向推广基础数据查询</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>optional</required>
<desc>推广组id</desc>
</param>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>optional</required>
<desc>推广计划id</desc>
</param>
<param>
<name>end_time</name>
<type>String</type>
<required>required</required>
<desc>结束时间,格式为：yyyy-mm-dd</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页大小</desc>
</param>
<param>
<name>start_time</name>
<type>String</type>
<required>required</required>
<desc>开始时间,格式为：yyyy-mm-dd</desc>
</param>
<param>
<name>subway_token</name>
<type>String</type>
<required>required</required>
<desc>权限校验参数</desc>
</param>
</request>
<response>
<param>
<name>rpt_adgroup_nonsearch_base</name>
<type>String</type>
<level>Basic</level>
<desc>非搜索推广组基础对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.rpt.adgroupnonsearcheffect.get</name>
<desc>推广组下的定向推广效果数据查询</desc>
<request>
<param>
<name>adgroup_id</name>
<type>Number</type>
<required>optional</required>
<desc>推广组id</desc>
</param>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>optional</required>
<desc>推广计划id</desc>
</param>
<param>
<name>end_time</name>
<type>String</type>
<required>required</required>
<desc>结束时间,格式为：yyyy-mm-dd</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页大小</desc>
</param>
<param>
<name>start_time</name>
<type>String</type>
<required>required</required>
<desc>开始时间,格式为：yyyy-mm-dd</desc>
</param>
<param>
<name>subway_token</name>
<type>String</type>
<required>required</required>
<desc>权限校验参数</desc>
</param>
</request>
<response>
<param>
<name>rpt_adgroup_nonsearch_effect</name>
<type>String</type>
<level>Basic</level>
<desc>非搜索推广组效果对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.rpt.campadgroupbase.get</name>
<desc>推广计划下的推广组报表基础数据查询(只有汇总数据，无分类类型)</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>查询推广计划id</desc>
</param>
<param>
<name>end_time</name>
<type>String</type>
<required>required</required>
<desc>结束日期,格式yyyy-mm-dd</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>每页大小&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>search_type</name>
<type>String</type>
<required>required</required>
<desc>报表类型（搜索：SEARCH,类目出价：CAT, 定向投放：NOSEARCH汇总：SUMMARY）SUMMARY必须单选，其他值可多选例如：SEARCH,CAT</desc>
</param>
<param>
<name>source</name>
<type>String</type>
<required>required</required>
<desc>数据来源（站内：1，站外：2 ，汇总：SUMMARY）SUMMARY必须单选，其他值可多选例如1,2</desc>
</param>
<param>
<name>start_time</name>
<type>String</type>
<required>required</required>
<desc>开始日期,格式yyyy-mm-dd</desc>
</param>
<param>
<name>subway_token</name>
<type>String</type>
<required>required</required>
<desc>权限验证信息</desc>
</param>
</request>
<response>
<param>
<name>rpt_campadgroup_base_list</name>
<type>String</type>
<level>Basic</level>
<desc>推广计划下推广组的基础数据列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.rpt.campadgroupeffect.get</name>
<desc>推广计划下的推广组报表效果数据查询(只有汇总数据，无分类类型)</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>查询推广计划id</desc>
</param>
<param>
<name>end_time</name>
<type>String</type>
<required>required</required>
<desc>结束日期，格式yyyy-mm-dd</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>每页大小&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>search_type</name>
<type>String</type>
<required>required</required>
<desc>报表类型（搜索：SEARCH,类目出价：CAT, 定向投放：NOSEARCH汇总：SUMMARY）SUMMARY必须单选，其他值可多选例如：SEARCH,CAT</desc>
</param>
<param>
<name>source</name>
<type>String</type>
<required>required</required>
<desc>数据来源（站内：1，站外：2 ，汇总：SUMMARY）SUMMARY必须单选，其他值可多选例如1,2</desc>
</param>
<param>
<name>start_time</name>
<type>String</type>
<required>required</required>
<desc>开始日期，格式yyyy-mm-dd</desc>
</param>
<param>
<name>subway_token</name>
<type>String</type>
<required>required</required>
<desc>权限验证信息</desc>
</param>
</request>
<response>
<param>
<name>rpt_campadgroup_effect_list</name>
<type>String</type>
<level>Basic</level>
<desc>推广计划下推广组的效果数据列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.rpt.campaignbase.get</name>
<desc>推广计划报表基础数据对象</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划id</desc>
</param>
<param>
<name>end_time</name>
<type>String</type>
<required>required</required>
<desc>结束时间，格式yyyy-mm-dd</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>每页大小&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>search_type</name>
<type>String</type>
<required>required</required>
<desc>报表类型（搜索：SEARCH,类目出价：CAT, 定向投放：NOSEARCH 全部：ALL）可以一次取多个例如：SEARCH,CAT</desc>
</param>
<param>
<name>source</name>
<type>String</type>
<required>required</required>
<desc>数据来源（站内：1，站外：2）可多选以逗号分隔，默认值为：1,2</desc>
</param>
<param>
<name>start_time</name>
<type>String</type>
<required>required</required>
<desc>开始时间，格式yyyy-mm-dd</desc>
</param>
<param>
<name>subway_token</name>
<type>String</type>
<required>required</required>
<desc>权限校验参数</desc>
</param>
</request>
<response>
<param>
<name>rpt_campaign_base_list</name>
<type>String</type>
<level>Basic</level>
<desc>推广计划查询结果</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.rpt.campaigneffect.get</name>
<desc>推广计划效果报表数据对象</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>推广计划id</desc>
</param>
<param>
<name>end_time</name>
<type>String</type>
<required>required</required>
<desc>结束时间，格式yyyy-mm-dd</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>每页大小&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>search_type</name>
<type>String</type>
<required>required</required>
<desc>报表类型（搜索：SEARCH,类目出价：CAT, 
定向投放：NOSEARCH 全部：ALL）可以一次取多个例如：SEARCH,CAT</desc>
</param>
<param>
<name>source</name>
<type>String</type>
<required>required</required>
<desc>数据来源（站内：1，站外：2）可多选以逗号分隔，默认值为：1,2</desc>
</param>
<param>
<name>start_time</name>
<type>String</type>
<required>required</required>
<desc>开始时间，格式yyyy-mm-dd</desc>
</param>
<param>
<name>subway_token</name>
<type>String</type>
<required>required</required>
<desc>权限校验参数</desc>
</param>
</request>
<response>
<param>
<name>rpt_campaign_effect_list</name>
<type>String</type>
<level>Basic</level>
<desc>推广计划效果报表数据对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.rpt.custbase.get</name>
<desc>客户账户报表基础数据对象</desc>
<request>
<param>
<name>end_time</name>
<type>String</type>
<required>required</required>
<desc>结束日期，格式yyyy-mm-dd</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>每页大小&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>source</name>
<type>String</type>
<required>required</required>
<desc>数据来源（站内：1，站外：2 ，汇总：SUMMARY）SUMMARY必须单选，其他值可多选例如1,2</desc>
</param>
<param>
<name>start_time</name>
<type>String</type>
<required>required</required>
<desc>开始日期，格式yyyy-mm-dd</desc>
</param>
<param>
<name>subway_token</name>
<type>String</type>
<required>required</required>
<desc>权限验证信息</desc>
</param>
</request>
<response>
<param>
<name>rpt_cust_base_list</name>
<type>String</type>
<level>Basic</level>
<desc>用户帐户结果</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.rpt.custeffect.get</name>
<desc>用户账户报表效果数据查询（只有汇总数据，无分类数据）</desc>
<request>
<param>
<name>end_time</name>
<type>String</type>
<required>required</required>
<desc>结束时间，格式yyyy-mm-dd</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>每页大小&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>source</name>
<type>String</type>
<required>required</required>
<desc>数据来源（站内：1，站外：2 ，汇总：SUMMARY）SUMMARY必须单选，其他值可多选例如1,2</desc>
</param>
<param>
<name>start_time</name>
<type>String</type>
<required>required</required>
<desc>开始时间，格式yyyy-mm-dd</desc>
</param>
<param>
<name>subway_token</name>
<type>String</type>
<required>required</required>
<desc>权限校验参数</desc>
</param>
</request>
<response>
<param>
<name>rpt_cust_effect_list</name>
<type>String</type>
<level>Basic</level>
<desc>账户效果数据返回结果</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.rpt.demographicbase.get</name>
<desc>推广计划下的人群基础数据查询</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>optional</required>
<desc>推广计划id</desc>
</param>
<param>
<name>end_time</name>
<type>String</type>
<required>required</required>
<desc>结束时间,格式为：yyyy-mm-dd</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页大小</desc>
</param>
<param>
<name>start_time</name>
<type>String</type>
<required>required</required>
<desc>开始时间,格式为：yyyy-mm-dd</desc>
</param>
<param>
<name>subway_token</name>
<type>String</type>
<required>required</required>
<desc>权限校验参数</desc>
</param>
</request>
<response>
<param>
<name>rpt_demographic_base</name>
<type>String</type>
<level>Basic</level>
<desc>非搜索推广计划基础数据对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.rpt.demographiceffect.get</name>
<desc>推广计划下的人群维度效果数据查询</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>optional</required>
<desc>推广计划id</desc>
</param>
<param>
<name>end_time</name>
<type>String</type>
<required>required</required>
<desc>结束时间,格式为：yyyy-mm-dd</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>昵称</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页大小</desc>
</param>
<param>
<name>start_time</name>
<type>String</type>
<required>required</required>
<desc>开始时间,格式为：yyyy-mm-dd</desc>
</param>
<param>
<name>subway_token</name>
<type>String</type>
<required>required</required>
<desc>权限校验参数</desc>
</param>
</request>
<response>
<param>
<name>rpt_demographic_effect</name>
<type>String</type>
<level>Basic</level>
<desc>推广计划下的人群维度效果数据查询</desc>
</param>
</response>
</api>
<api>
<name>taobao.simba.tools.items.top.get</name>
<desc>取得一个关键词的推广组排名列表</desc>
<request>
<param>
<name>ip</name>
<type>String</type>
<required>required</required>
<desc>输入的必须是一个符合ipv4或者ipv6格式的IP地址</desc>
</param>
<param>
<name>keyword</name>
<type>String</type>
<required>required</required>
<desc>关键词</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>主人昵称</desc>
</param>
</request>
<response>
<param>
<name>rankeditems</name>
<type>RankedItem</type>
<level>Object Array</level>
<desc>推广组信息列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.topats.simba.campkeywordbase.get</name>
<desc>直通车推广计划下的词报表基础数据查询&lt;br/&gt; 
异步API使用方法，请查看：&lt;a href="http://open.taobao.com/doc/detail.htm?id=30"&gt;异步API使用说明&lt;/a&gt;&lt;br/&gt;</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>查询推广计划ID</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>查询的昵称</desc>
</param>
<param>
<name>search_type</name>
<type>String</type>
<required>required</required>
<desc>报表类型。可选值：SEARCH（搜索）、CAT（类目出价）、 NOSEARCH（定向投放），可多选，如：SEARCH,CAT</desc>
</param>
<param>
<name>source</name>
<type>String</type>
<required>required</required>
<desc>数据来源。可选值：1（站内）、2（站外）、SUMMARY（汇总），其中SUMMARY必须单选，其它值可多选，如：1,2</desc>
</param>
<param>
<name>time_slot</name>
<type>String</type>
<required>required</required>
<desc>时间参数（昨天：DAY、 前一周：7DAY 、前15天：15DAY 、前30天：30DAY 、前90天：90DAY）单选</desc>
</param>
</request>
<response>
<param>
<name>task</name>
<type>Task</type>
<level>Object</level>
<desc>创建任务信息。里面只包含task_id和created</desc>
</param>
</response>
</api>
<api>
<name>taobao.topats.simba.campkeywordeffect.get</name>
<desc>推广计划下的词报表效果数据查询&lt;br/&gt; 
异步API使用方法，请查看：&lt;a href="http://open.taobao.com/doc/detail.htm?id=30"&gt;异步API使用说明&lt;/a&gt;&lt;br/&gt;</desc>
<request>
<param>
<name>campaign_id</name>
<type>Number</type>
<required>required</required>
<desc>查询推广计划ID</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>查询的昵称</desc>
</param>
<param>
<name>search_type</name>
<type>String</type>
<required>required</required>
<desc>报表类型。可选值：SEARCH（搜索）、CAT（类目出价）、 NOSEARCH（定向投放），可多选，如：SEARCH,CAT</desc>
</param>
<param>
<name>source</name>
<type>String</type>
<required>required</required>
<desc>数据来源。可选值：1（站内）、2（站外）、SUMMARY（汇总），其中SUMMARY必须单选，其它值可多选，如：1,2</desc>
</param>
<param>
<name>time_slot</name>
<type>String</type>
<required>required</required>
<desc>时间参数（昨天：DAY、 前一周：7DAY、 前15天：15DAY、 前30天：30DAY 、前90天：90DAY）单选</desc>
</param>
</request>
<response>
<param>
<name>task</name>
<type>Task</type>
<level>Object</level>
<desc>创建任务信息。里面只包含task_id和created</desc>
</param>
</response>
</api>
<api>
<name>taobao.marketing.promotion.kfc</name>
<desc>活动名称与描述违禁词检查</desc>
<request>
<param>
<name>promotion_desc</name>
<type>String</type>
<required>required</required>
<desc>活动描述</desc>
</param>
<param>
<name>promotion_title</name>
<type>String</type>
<required>required</required>
<desc>活动名称</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.marketing.promotions.get</name>
<desc>根据商品ID查询卖家使用该第三方工具对商品设置的所有优惠策略</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的优惠策略结构字段列表。可选值为Promotion中所有字段，如：promotion_id, promotion_title, item_id, status, tag_id等等</desc>
</param>
<param>
<name>is_new_tag</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否新标签标识</desc>
</param>
<param>
<name>num_iid</name>
<type>String</type>
<required>required</required>
<desc>商品数字ID。根据该ID查询商品下通过第三方工具设置的所有优惠策略</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>优惠策略状态。可选值：ACTIVE(有效)，UNACTIVE(无效)，若不传或者传入其他值，则默认查询全部</desc>
</param>
<param>
<name>tag_id</name>
<type>Number</type>
<required>optional</required>
<desc>标签ID</desc>
</param>
</request>
<response>
<param>
<name>promotions</name>
<type>Promotion</type>
<level>Object Array</level>
<desc>商品对应的所有优惠列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>结果总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotion.activity.get</name>
<desc>查询某个卖家的店铺优惠券领取活动 
返回，优惠券领取活动ID，优惠券ID，总领用量，每人限领量，已领取数量 
领取活动状态，优惠券领取链接 
最多50个优惠券</desc>
<request>
<param>
<name>activity_id</name>
<type>Number</type>
<required>optional</required>
<desc>活动的id</desc>
</param>
</request>
<response>
<param>
<name>activitys</name>
<type>Activity</type>
<level>Object Array</level>
<desc>活动列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotion.coupons.get</name>
<desc>查询卖家已经创建的优惠券，接口返回信息：优惠券ID，面值，创建时间，有效期，使用条件，使用渠道，创建渠道，优惠券总数量</desc>
<request>
<param>
<name>coupon_id</name>
<type>Number</type>
<required>optional</required>
<desc>优惠券的id，唯一标识这个优惠券</desc>
</param>
<param>
<name>denominations</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>3</min_value>
<desc>优惠券的面额，必须是3，5，10，20，50,100&lt;br /&gt; 支持最大值为：100&lt;br /&gt; 支持最小值为：3</desc>
</param>
<param>
<name>end_time</name>
<type>Date</type>
<required>optional</required>
<desc>优惠券的截止日期</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>查询的页号，结果集是分页返回的，每页20条&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_length>20</max_length>
<desc>每页条数&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
</request>
<response>
<param>
<name>coupons</name>
<type>Coupon</type>
<level>Object Array</level>
<desc>优惠券列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>查询的总数量</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotion.limitdiscount.detail.get</name>
<desc>限时打折详情查询。查询出指定限时打折的对应商品记录信息。</desc>
<request>
<param>
<name>limit_discount_id</name>
<type>Number</type>
<required>required</required>
<desc>限时打折ID。这个针对查询唯一限时打折情况。</desc>
</param>
</request>
<response>
<param>
<name>item_discount_detail_list</name>
<type>LimitDiscountDetail</type>
<level>Object Array</level>
<desc>限时打折对应的商品详情列表。</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotion.limitdiscount.get</name>
<desc>分页查询某个卖家的限时打折信息。每页20条数据，按照结束时间降序排列。也可指定某一个限时打折id查询唯一的限时打折信息。</desc>
<request>
<param>
<name>end_time</name>
<type>Date</type>
<required>optional</required>
<desc>限时打折结束时间。输入的时间会被截取，年月日有效，时分秒忽略。</desc>
</param>
<param>
<name>limit_discount_id</name>
<type>Number</type>
<required>optional</required>
<desc>限时打折ID。这个针对查询唯一限时打折情况。若此字段不为空，则说明操作为单条限时打折记录查询，其他字段忽略。若想分页按条件查询，这个字段置为空。</desc>
</param>
<param>
<name>page_number</name>
<type>Number</type>
<required>optional</required>
<desc>分页页号。默认1。当页数大于最大页数时，结果为最大页数的数据。</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>optional</required>
<desc>限时打折开始时间。输入的时间会被截取，年月日有效，时分秒忽略。</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>限时打折活动状态。ALL:全部状态;OVER:已结束;DOING:进行中;PROPARE:未开始(只支持大写)。当limit_discount_id为空时，为空时，默认为全部的状态。</desc>
</param>
</request>
<response>
<param>
<name>limit_discount_list</name>
<type>LimitDiscount</type>
<level>Object Array</level>
<desc>限时打折列表。</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>满足该查询条件的限时打折总数量。</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotion.meal.get</name>
<desc>搭配套餐查询。每个卖家最多创建50个搭配套餐，所以查询不会分页，会将所有的满足状态的搭配套餐全部查出。该接口不会校验商品的下架或库存为0，查询结果的状态表明搭配套餐在数据库中的状态，商品的状态请isv自己验证。在卖家后台页面点击查看会触发数据库状态的修改。</desc>
<request>
<param>
<name>meal_id</name>
<type>Number</type>
<required>optional</required>
<desc>搭配套餐id</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>套餐状态。有效：VALID;失效：INVALID(有效套餐为可使用的套餐,无效套餐为套餐中有商品下架或库存为0时)。默认时两种情况都会查询。</desc>
</param>
</request>
<response>
<param>
<name>meal_list</name>
<type>Meal</type>
<level>Object Array</level>
<desc>搭配套餐列表。</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotion.mjs.get</name>
<desc>满就送活动获取。针对淘宝店铺的满就送活动查询。</desc>
<response>
<param>
<name>end_time</name>
<type>Date</type>
<level>Basic</level>
<desc>活动结束时间。</desc>
</param>
<param>
<name>memo</name>
<type>String</type>
<level>Basic</level>
<desc>活动备注。可为空，100汉字以内。</desc>
</param>
<param>
<name>mjs_list</name>
<type>PromotionMjs</type>
<level>Object Array</level>
<desc>满就送活动优惠列表。</desc>
</param>
<param>
<name>mjs_name</name>
<type>String</type>
<level>Basic</level>
<desc>满就送名称。</desc>
</param>
<param>
<name>no_cap</name>
<type>Boolean</type>
<level>Basic</level>
<desc>上不封顶标识！</desc>
</param>
<param>
<name>shop_name</name>
<type>String</type>
<level>Basic</level>
<desc>淘宝店铺或外店的名字。</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<level>Basic</level>
<desc>活动开始时间。</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotionmisc.activity.range.add</name>
<desc>增加活动参与的商品，部分商品参与的活动，最大支持指定150个商品。</desc>
<request>
<param>
<name>activity_id</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>活动id。&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>ids</name>
<type>String</type>
<required>required</required>
<desc>商品id,多个id用逗号隔开，一次不超过50个。</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>增加商品范围是否成功。</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotionmisc.activity.range.all.remove</name>
<desc>清空活动参与的商品</desc>
<request>
<param>
<name>activity_id</name>
<type>Number</type>
<required>required</required>
<desc>活动id。</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>清空活动参与商品是否成功。</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotionmisc.activity.range.list.get</name>
<desc>查询活动参与的商品</desc>
<request>
<param>
<name>activity_id</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>活动id&lt;br /&gt; 支持最小值为：0</desc>
</param>
</request>
<response>
<param>
<name>promotion_range_list</name>
<type>PromotionRange</type>
<level>Object Array</level>
<desc>活动参与的商品列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotionmisc.activity.range.remove</name>
<desc>去除活动参与的商品</desc>
<request>
<param>
<name>activity_id</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>活动id。&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>ids</name>
<type>String</type>
<required>required</required>
<desc>商品id,多个id用逗号隔开。</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>去除活动参与的商品是否成功。</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotionmisc.item.activity.add</name>
<desc>创建无条件单品优惠活动。1、可以选择是全店参加或者部分商品参加：participate_range：0表示全部参与； 1表示部分商品参与。 
2、如果是部分商品参加，则需要通过taobao.promotionmisc.activity.range.add接口来指定需要参加的商品。 
3、该接口创建的优惠受店铺最低折扣限制，如优惠不生效，请让卖家检查该优惠是否低于店铺的最低折扣设置。</desc>
<request>
<param>
<name>decrease_amount</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>减多少钱。当is_decrease_money为true时，该值才有意义。注意：该值单位为分，即100表示1元。&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>discount_rate</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>折扣值。当is_discount为true时，该值才有意义。注意：800表示8折。&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>end_time</name>
<type>Date</type>
<required>required</required>
<desc>活动结束时间。</desc>
</param>
<param>
<name>is_decrease_money</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有减钱行为。</desc>
</param>
<param>
<name>is_discount</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有打折行为。</desc>
</param>
<param>
<name>is_user_tag</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否指定用户标签。</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>活动名称，超过5个汉字时，商品详情中显示的优惠名称为：卖家优惠。&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>participate_range</name>
<type>Number</type>
<required>required</required>
<max_length>1</max_length>
<max_value>1</max_value>
<min_value>0</min_value>
<desc>活动范围：0表示全部参与； 1表示部分商品参与。&lt;br /&gt; 支持最大值为：1&lt;br /&gt; 支持最小值为：0&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>活动开始时间。</desc>
</param>
<param>
<name>user_tag</name>
<type>String</type>
<required>optional</required>
<desc>用户标签。当is_user_tag为true时，该值才有意义。</desc>
</param>
</request>
<response>
<param>
<name>activity_id</name>
<type>Number</type>
<level>Basic</level>
<desc>活动id。</desc>
</param>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否保存成功。</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotionmisc.item.activity.delete</name>
<desc>删除无条件单品优惠活动</desc>
<request>
<param>
<name>activity_id</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>活动id。&lt;br /&gt; 支持最小值为：0</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功删除活动。</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotionmisc.item.activity.get</name>
<desc>查询无条件单品优惠活动</desc>
<request>
<param>
<name>activity_id</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>活动id。&lt;br /&gt; 支持最小值为：0</desc>
</param>
</request>
<response>
<param>
<name>item_promotion</name>
<type>ItemPromotion</type>
<level>Object</level>
<desc>单品优惠活动信息。</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotionmisc.item.activity.list.get</name>
<desc>查询无条件单品优惠活动列表</desc>
<request>
<param>
<name>page_no</name>
<type>Number</type>
<required>required</required>
<min_value>1</min_value>
<desc>页码。&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>required</required>
<min_value>1</min_value>
<desc>每页记录数，最大支持50 。&lt;br /&gt; 支持最小值为：1</desc>
</param>
</request>
<response>
<param>
<name>item_promotion_list</name>
<type>ItemPromotion</type>
<level>Object Array</level>
<desc>只包含活动的主要信息，如activity_id，name，description，start_time，end_time，participate_range。优惠的其他详细信息，请通过taobao.promotionmisc.item.activity.get获取。</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>记录总条数。</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotionmisc.item.activity.update</name>
<desc>修改无条件单品优惠活动。 
1、该接口只修改活动基本信息和打折信息，如需要增加、删除参与该活动的商品，请调用taobao.promotionmisc.activity.range.add和taobao.promotionmisc.activity.range.remove接口。  
2、使用该接口时需要同时把未做修改的字段值也传入。  
 
3、该接口受店铺最低折扣限制，如优惠不生效，请让卖家检查该优惠是否低于店铺的最低折扣设置。</desc>
<request>
<param>
<name>activity_id</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>活动id。&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>decrease_amount</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>减多少钱。当is_decrease_money为true时，该值才有意义。注意：该值单位为分，即100表示1元。&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>discount_rate</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>折扣值。当is_discount为true时，该值才有意义。注意：800表示8折。&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>end_time</name>
<type>Date</type>
<required>required</required>
<desc>活动结束时间。</desc>
</param>
<param>
<name>is_decrease_money</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有减钱行为。</desc>
</param>
<param>
<name>is_discount</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有打折行为。</desc>
</param>
<param>
<name>is_user_tag</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否指定用户标签。</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>活动名称。&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>participate_range</name>
<type>Number</type>
<required>required</required>
<max_length>1</max_length>
<max_value>1</max_value>
<min_value>0</min_value>
<desc>活动范围：0表示全部参与； 1表示部分商品参与。&lt;br /&gt; 支持最大值为：1&lt;br /&gt; 支持最小值为：0&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>活动开始时间。</desc>
</param>
<param>
<name>user_tag</name>
<type>String</type>
<required>optional</required>
<desc>用户标签。当is_user_tag为true时，该值才有意义。</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>修改是否成功。</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotionmisc.mjs.activity.add</name>
<desc>创建满就送活动。 
1、可以选择是全店参加或者部分商品参加：participate_range：0表示全部参与； 1表示部分商品参与。 2、如果是部分商品参加，则需要通过taobao.promotionmisc.activity.range.add接口来指定需要参加的商品。 3、该接口创建的优惠受店铺最低折扣限制，如优惠不生效，请让卖家检查该优惠是否低于店铺的最低折扣设置。</desc>
<request>
<param>
<name>decrease_amount</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>减多少钱。当is_decrease_money为true时，该值才有意义。注意：该值单位为分，即100表示1元。&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>discount_rate</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>折扣值。当is_discount为true时，该值才有意义。注意：800表示8折。&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>end_time</name>
<type>Date</type>
<required>required</required>
<desc>活动结束时间。</desc>
</param>
<param>
<name>exclude_area</name>
<type>String</type>
<required>optional</required>
<desc>免邮的排除地区，即，除指定地区外，其他地区包邮。当is_free_post为true时，该值才有意义。代码使用*链接，代码为行政区划代码。</desc>
</param>
<param>
<name>gift_id</name>
<type>Number</type>
<required>optional</required>
<desc>礼品id，当is_send_gift为true时，该值才有意义。 1）只有填写真实的淘宝商品id时，才能生成物流单，并且在确定订单的页面上可以点击该商品名称跳转到商品详情页面。2）当礼物为实物商品时(有宝贝id),礼物必须为上架商品,不能为虚拟商品,不能为拍卖商品,不能有sku,不符合条件的,不做为礼物。</desc>
</param>
<param>
<name>gift_name</name>
<type>String</type>
<required>optional</required>
<max_length>32</max_length>
<desc>礼品名称。当is_send_gift为true时，该值才有意义。&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>gift_url</name>
<type>String</type>
<required>optional</required>
<desc>商品详情的url，当is_send_gift为true时，该值才有效。</desc>
</param>
<param>
<name>is_amount_multiple</name>
<type>Boolean</type>
<required>optional</required>
<desc>满元是否上不封顶。当is_amount_over为true时，该值才有意义。当该值为true时，表示满元上不封顶，例如满100元减10元，当满200时，则减20元。。。默认为false。</desc>
</param>
<param>
<name>is_amount_over</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有满元条件。</desc>
</param>
<param>
<name>is_decrease_money</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有减钱行为。</desc>
</param>
<param>
<name>is_discount</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有打折行为。</desc>
</param>
<param>
<name>is_free_post</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有免邮行为。</desc>
</param>
<param>
<name>is_item_count_over</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有满件条件。</desc>
</param>
<param>
<name>is_item_multiple</name>
<type>Boolean</type>
<required>optional</required>
<desc>满件是否上不封顶。当is_amount_multiple为true时，该值才有意义。当该值为true时，表示满件上不封顶，例如满10件减2元，当满20件时，则减4元。。。 默认为false。</desc>
</param>
<param>
<name>is_send_gift</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有送礼品行为。</desc>
</param>
<param>
<name>is_shop_member</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有店铺会员等级条件。</desc>
</param>
<param>
<name>is_user_tag</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否指定用户标签。</desc>
</param>
<param>
<name>item_count</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>满多少件。当is_item_count_over为true时，该值才有意义。&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>活动名称。&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>participate_range</name>
<type>Number</type>
<required>required</required>
<max_length>1</max_length>
<max_value>1</max_value>
<min_value>0</min_value>
<desc>活动范围：0表示全部参与； 1表示部分商品参与。&lt;br /&gt; 支持最大值为：1&lt;br /&gt; 支持最小值为：0&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
<param>
<name>shop_member_level</name>
<type>Number</type>
<required>optional</required>
<max_value>9</max_value>
<min_value>0</min_value>
<desc>店铺会员等级，当is_shop_member为true时，该值才有意义。0：店铺客户；1：普通客户；2：高级会员；3：VIP会员； 4：至尊VIP会员。&lt;br /&gt; 支持最大值为：9&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>活动开始时间。</desc>
</param>
<param>
<name>total_price</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>满多少元。当is_amount_over为true时，该才字段有意义。注意：单位是分，即10000表示100元。&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>type</name>
<type>Number</type>
<required>required</required>
<max_length>1</max_length>
<max_value>2</max_value>
<min_value>1</min_value>
<desc>活动类型： 1表示商品级别的活动；2表示店铺级别的活动&lt;br /&gt; 支持最大值为：2&lt;br /&gt; 支持最小值为：1&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
<param>
<name>user_tag</name>
<type>String</type>
<required>optional</required>
<desc>用户标签。当is_user_tag为true时，该值才有意义。</desc>
</param>
</request>
<response>
<param>
<name>activity_id</name>
<type>Number</type>
<level>Basic</level>
<desc>活动id。</desc>
</param>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否保存成功。</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotionmisc.mjs.activity.delete</name>
<desc>删除满就送活动</desc>
<request>
<param>
<name>activity_id</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>活动id。&lt;br /&gt; 支持最小值为：0</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功删除活动。</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotionmisc.mjs.activity.get</name>
<desc>查询满就送活动</desc>
<request>
<param>
<name>activity_id</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>活动id。&lt;br /&gt; 支持最小值为：0</desc>
</param>
</request>
<response>
<param>
<name>mjs_promotion</name>
<type>MjsPromotion</type>
<level>Object</level>
<desc>满就送活动信息。</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotionmisc.mjs.activity.list.get</name>
<desc>查询满就送活动列表。注意，该接口的返回值中，只包含活动的主要信息，如activity_id，name，description，start_time，end_time，type，participate_range。优惠的详细信息，请通过taobao.promotionmisc.mjs.activity.get获取。</desc>
<request>
<param>
<name>activity_type</name>
<type>Number</type>
<required>required</required>
<max_length>1</max_length>
<max_value>2</max_value>
<min_value>1</min_value>
<desc>活动类型： 1表示商品级别的活动；2表示店铺级别的活动。&lt;br /&gt; 支持最大值为：2&lt;br /&gt; 支持最小值为：1&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>required</required>
<min_value>1</min_value>
<desc>页码。&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>required</required>
<min_value>1</min_value>
<desc>每页记录数，最大支持50 。&lt;br /&gt; 支持最小值为：1</desc>
</param>
</request>
<response>
<param>
<name>mjs_promotion_list</name>
<type>MjsPromotion</type>
<level>Object Array</level>
<desc>只包含活动的主要信息，如activity_id，aame，description，start_time，end_time，type，participate_range。优惠的其他详细信息，请通过taobao.promotionmisc.mjs.activity.get获取。</desc>
</param>
<param>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<desc>记录总条数。</desc>
</param>
</response>
</api>
<api>
<name>taobao.promotionmisc.mjs.activity.update</name>
<desc>修改满就送活动。  
1、该接口只修改活动基本信息和打折信息，如需要增加、删除参与该活动的商品，请调用taobao.promotionmisc.activity.range.add和taobao.promotionmisc.activity.range.remove接口。  
2、使用该接口时需要同时把未做修改的字段值也传入。  
3、该接口创建的优惠受店铺最低折扣限制，如优惠不生效，请让卖家检查该优惠是否低于店铺的最低折扣设置。</desc>
<request>
<param>
<name>activity_id</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>活动id。&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>decrease_amount</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>减多少钱。当is_decrease_money为true时，该值才有意义。注意：该值单位为分，即100表示1元。&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>discount_rate</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>折扣值。当is_discount为true时，该值才有意义。注意：800表示8折。&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>end_time</name>
<type>Date</type>
<required>required</required>
<desc>活动结束时间。</desc>
</param>
<param>
<name>exclude_area</name>
<type>String</type>
<required>optional</required>
<desc>免邮的排除地区，即，除指定地区外，其他地区包邮。当is_free_post为true时，该值才有意义。代码使用*链接，代码为行政区划代码。</desc>
</param>
<param>
<name>gift_id</name>
<type>Number</type>
<required>optional</required>
<desc>礼品id，当is_send_gift为true时，该值才有意义。 1）只有填写真实的淘宝商品id时，才能生成物流单，并且在确定订单的页面上可以点击该商品名称跳转到商品详情页面。2）当礼物为实物商品时(有宝贝id),礼物必须为上架商品,不能为虚拟商品,不能为拍卖商品,不能有sku,不符合条件的,不做为礼物。</desc>
</param>
<param>
<name>gift_name</name>
<type>String</type>
<required>optional</required>
<max_length>32</max_length>
<desc>礼品名称。当is_send_gift为true时，该值才有意义。&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>gift_url</name>
<type>String</type>
<required>optional</required>
<desc>商品详情的url，当is_send_gift为true时，该值才有效。</desc>
</param>
<param>
<name>is_amount_multiple</name>
<type>Boolean</type>
<required>optional</required>
<desc>满元是否上不封顶。当is_amount_over为true时，该值才有意义。当该值为true时，表示满元上不封顶，例如满100元减10元，当满200时，则减20元。。。默认为false。</desc>
</param>
<param>
<name>is_amount_over</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有满元条件。</desc>
</param>
<param>
<name>is_decrease_money</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有减钱行为。</desc>
</param>
<param>
<name>is_discount</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有打折行为。</desc>
</param>
<param>
<name>is_free_post</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有免邮行为。</desc>
</param>
<param>
<name>is_item_count_over</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有满件条件。</desc>
</param>
<param>
<name>is_item_multiple</name>
<type>Boolean</type>
<required>optional</required>
<desc>满件是否上不封顶。当is_amount_multiple为true时，该值才有意义。当该值为true时，表示满件上不封顶，例如满10件减2元，当满20件时，则减4元。。。 默认为false。</desc>
</param>
<param>
<name>is_send_gift</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有送礼品行为。</desc>
</param>
<param>
<name>is_shop_member</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否有店铺会员等级条件。</desc>
</param>
<param>
<name>is_user_tag</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否指定用户标签。</desc>
</param>
<param>
<name>item_count</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>满多少件。当is_item_count_over为true时，该值才有意义。&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>活动名称。&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>participate_range</name>
<type>Number</type>
<required>required</required>
<max_length>1</max_length>
<max_value>1</max_value>
<min_value>0</min_value>
<desc>活动范围：0表示全部参与； 1表示部分商品参与。&lt;br /&gt; 支持最大值为：1&lt;br /&gt; 支持最小值为：0&lt;br /&gt; 支持的最大列表长度为：1</desc>
</param>
<param>
<name>shop_member_level</name>
<type>Number</type>
<required>optional</required>
<max_value>9</max_value>
<min_value>0</min_value>
<desc>店铺会员等级，当is_shop_member为true时，该值才有意义。0：店铺客户；1：普通客户；2：高级会员；3：VIP会员； 4：至尊VIP会员。&lt;br /&gt; 支持最大值为：9&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>活动开始时间。</desc>
</param>
<param>
<name>total_price</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>满多少元。当is_amount_over为true时，该才字段有意义。注意：单位是分，即10000表示100元。&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>user_tag</name>
<type>String</type>
<required>optional</required>
<desc>用户标签。当is_user_tag为true时，该值才有意义。</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>修改是否成功。</desc>
</param>
</response>
</api>
<api>
<name>tmall.promotag.tag.apply</name>
<desc>创建优惠标签</desc>
<request>
<param>
<name>end_time</name>
<type>Date</type>
<required>required</required>
<desc>标签结束时间</desc>
</param>
<param>
<name>start_time</name>
<type>Date</type>
<required>required</required>
<desc>标签开始时间</desc>
</param>
<param>
<name>tag_desc</name>
<type>String</type>
<required>required</required>
<desc>标签用途描述</desc>
</param>
<param>
<name>tag_name</name>
<type>String</type>
<required>required</required>
<desc>标签名称。
注意在UMP中使用新人群标签top变成大写的“NEW_” 如：老标签是top1234，新标签是NEW_1234 。</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否设置成功</desc>
</param>
<param>
<name>tag_id</name>
<type>Number</type>
<level>Basic</level>
<desc>优惠标签ID</desc>
</param>
</response>
</api>
<api>
<name>tmall.promotag.tag.find</name>
<desc>查询用户创建的所有标签</desc>
<request>
<param>
<name>page_no</name>
<type>Number</type>
<required>required</required>
<max_length>10</max_length>
<desc>当前页码&lt;br /&gt; 支持的最大列表长度为：10</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>required</required>
<max_length>100</max_length>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>每页显示个数&lt;br /&gt; 支持最大值为：100&lt;br /&gt; 支持最小值为：1&lt;br /&gt; 支持的最大列表长度为：100</desc>
</param>
<param>
<name>tag_id</name>
<type>Number</type>
<required>optional</required>
<desc>标签ID</desc>
</param>
<param>
<name>tag_name</name>
<type>String</type>
<required>optional</required>
<desc>标签名称，查询时可选项</desc>
</param>
</request>
<response>
<param>
<name>query_result</name>
<type>PromotionTagQuery</type>
<level>Object</level>
<desc>查询结果类型</desc>
</param>
</response>
</api>
<api>
<name>tmall.promotag.tag.removetag</name>
<desc>用于删除标签定义，但是要确保目前该标签没有人群在使用。</desc>
<request>
<param>
<name>tag_id</name>
<type>Number</type>
<required>required</required>
<desc>需要删除的标签id</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>删除操作是否成功</desc>
</param>
</response>
</api>
<api>
<name>tmall.promotag.taguser.judge</name>
<desc>查询用户是否有标签</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<desc>买家昵称</desc>
</param>
<param>
<name>tag_id</name>
<type>Number</type>
<required>required</required>
<desc>标签ID</desc>
</param>
</request>
<response>
<param>
<name>has_tag</name>
<type>Boolean</type>
<level>Basic</level>
<desc>用户是否有标签</desc>
</param>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>服务调用是否成功</desc>
</param>
</response>
</api>
<api>
<name>tmall.promotag.taguser.remove</name>
<desc>给用户载体去标</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<desc>买家昵称</desc>
</param>
<param>
<name>tag_id</name>
<type>Number</type>
<required>required</required>
<desc>标签ID</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>打标结果是否成功</desc>
</param>
</response>
</api>
<api>
<name>tmall.promotag.taguser.save</name>
<desc>给用户载体打标</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<desc>买家昵称</desc>
</param>
<param>
<name>tag_id</name>
<type>Number</type>
<required>required</required>
<desc>标签ID</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>打标结果是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.picture.category.add</name>
<desc>同一卖家最多添加500个图片分类，图片分类名称长度最大为20个字符</desc>
<request>
<param>
<name>parent_id</name>
<type>Number</type>
<required>optional</required>
<desc>图片分类的父分类,一级分类的parent_id为0,二级分类的则为其父分类的picture_category_id</desc>
</param>
<param>
<name>picture_category_name</name>
<type>String</type>
<required>required</required>
<desc>图片分类名称，最大长度20字符，中文字符算2个字符，不能为空</desc>
</param>
</request>
<response>
<param>
<name>picture_category</name>
<type>PictureCategory</type>
<level>Object</level>
<desc>图片分类信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.picture.category.get</name>
<desc>获取图片分类信息</desc>
<request>
<param>
<name>modified_time</name>
<type>Date</type>
<required>optional</required>
<desc>图片分类的修改时间点，格式:yyyy-MM-dd HH:mm:ss。查询此修改时间点之后到目前的图片分类。</desc>
</param>
<param>
<name>parent_id</name>
<type>Number</type>
<required>optional</required>
<desc>取二级分类时设置为对应父分类id 
取一级分类时父分类id设为0 
取全部分类的时候不设或设为-1</desc>
</param>
<param>
<name>picture_category_id</name>
<type>Number</type>
<required>optional</required>
<desc>图片分类ID</desc>
</param>
<param>
<name>picture_category_name</name>
<type>String</type>
<required>optional</required>
<desc>图片分类名，不支持模糊查询</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>optional</required>
<desc>分类类型,fixed代表店铺装修分类类别，auction代表宝贝分类类别，user-define代表用户自定义分类类别</desc>
</param>
</request>
<response>
<param>
<name>picture_categories</name>
<type>PictureCategory</type>
<level>Object Array</level>
<desc>图片分类</desc>
</param>
</response>
</api>
<api>
<name>taobao.picture.category.update</name>
<desc>更新图片分类的名字，或者更新图片分类的父分类（即分类移动）。只能移动2级分类到非2级分类，默认分类和1级分类不可移动。</desc>
<request>
<param>
<name>category_id</name>
<type>Number</type>
<required>required</required>
<desc>要更新的图片分类的id</desc>
</param>
<param>
<name>category_name</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>图片分类的新名字，最大长度20字符，不能为空&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>parent_id</name>
<type>Number</type>
<required>optional</required>
<desc>图片分类的新父分类id</desc>
</param>
</request>
<response>
<param>
<name>done</name>
<type>Boolean</type>
<level>Basic</level>
<desc>更新图片分类是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.picture.delete</name>
<desc>删除图片空间图片</desc>
<request>
<param>
<name>picture_ids</name>
<type>String</type>
<required>required</required>
<max_list_size>100</max_list_size>
<desc>图片ID字符串,可以一个也可以一组,用英文逗号间隔,如450,120,155.限制数量是100</desc>
</param>
</request>
<response>
<param>
<name>success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否删除</desc>
</param>
</response>
</api>
<api>
<name>taobao.picture.get</name>
<desc>获取图片信息</desc>
<request>
<param>
<name>client_type</name>
<type>String</type>
<required>optional</required>
<desc>图片使用，如果是pc宝贝detail使用，设置为client:computer，查询出来的图片是符合pc的宝贝detail显示的 
如果是手机宝贝detail使用，设置为client:phone，查询出来的图片是符合手机的宝贝detail显示的,默认值是全部</desc>
</param>
<param>
<name>deleted</name>
<type>String</type>
<required>optional</required>
<desc>是否删除,unfroze代表没有删除</desc>
</param>
<param>
<name>end_date</name>
<type>Date</type>
<required>optional</required>
<desc>查询上传结束时间点,格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>modified_time</name>
<type>Date</type>
<required>optional</required>
<desc>图片被修改的时间点，格式:yyyy-MM-dd HH:mm:ss。查询此修改时间点之后到目前的图片。</desc>
</param>
<param>
<name>order_by</name>
<type>String</type>
<required>optional</required>
<desc>图片查询结果排序,time:desc按上传时间从晚到早(默认), time:asc按上传时间从早到晚,sizes:desc按图片从大到小，sizes:asc按图片从小到大,默认time:desc</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码.传入值为1代表第一页,传入值为2代表第二页,依此类推,默认值为1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页条数.每页返回最多返回100条,默认值40</desc>
</param>
<param>
<name>picture_category_id</name>
<type>Number</type>
<required>optional</required>
<desc>图片分类ID</desc>
</param>
<param>
<name>picture_id</name>
<type>Number</type>
<required>optional</required>
<desc>图片ID</desc>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<required>optional</required>
<desc>查询上传开始时间点,格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>optional</required>
<desc>图片标题,最大长度50字符,中英文都算一字符</desc>
</param>
<param>
<name>urls</name>
<type>String</type>
<required>optional</required>
<desc>图片url查询接口</desc>
</param>
</request>
<response>
<param>
<name>pictures</name>
<type>Picture</type>
<level>Object Array</level>
<desc>图片信息列表</desc>
</param>
<param>
<name>totalResults</name>
<type>Number</type>
<level>Basic</level>
<desc>总的结果数</desc>
</param>
</response>
</api>
<api>
<name>taobao.picture.isreferenced.get</name>
<desc>查询图片是否被引用，被引用返回true，未被引用返回false</desc>
<request>
<param>
<name>picture_id</name>
<type>Number</type>
<required>required</required>
<desc>图片id</desc>
</param>
</request>
<response>
<param>
<name>is_referenced</name>
<type>Boolean</type>
<level>Basic</level>
<desc>图片是否被引用</desc>
</param>
</response>
</api>
<api>
<name>taobao.picture.replace</name>
<desc>替换一张图片，只替换图片数据，图片名称，图片分类等保持不变。</desc>
<request>
<param>
<name>image_data</name>
<type>byte[]</type>
<required>required</required>
<desc>图片二进制文件流,不能为空,允许png、jpg、gif图片格式</desc>
</param>
<param>
<name>picture_id</name>
<type>Number</type>
<required>required</required>
<desc>要替换的图片的id，必须大于0</desc>
</param>
</request>
<response>
<param>
<name>done</name>
<type>Boolean</type>
<level>Basic</level>
<desc>图片替换是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.picture.update</name>
<desc>修改指定图片的图片名</desc>
<request>
<param>
<name>new_name</name>
<type>String</type>
<required>required</required>
<max_length>50</max_length>
<desc>新的图片名，最大长度50字符，不能为空&lt;br /&gt; 支持最大长度为：50&lt;br /&gt; 支持的最大列表长度为：50</desc>
</param>
<param>
<name>picture_id</name>
<type>Number</type>
<required>required</required>
<desc>要更改名字的图片的id</desc>
</param>
</request>
<response>
<param>
<name>done</name>
<type>Boolean</type>
<level>Basic</level>
<desc>更新是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.picture.upload</name>
<desc>上传单张图片</desc>
<request>
<param>
<name>client_type</name>
<type>String</type>
<required>optional</required>
<desc>图片上传的来源，有电脑版本宝贝发布，手机版本宝贝发布 
client:computer电脑版本宝贝使用 
client:phone手机版本宝贝使用</desc>
</param>
<param>
<name>image_input_title</name>
<type>String</type>
<required>required</required>
<desc>包括后缀名的图片标题,不能为空，如Bule.jpg,有些卖家希望图片上传后取图片文件的默认名</desc>
</param>
<param>
<name>img</name>
<type>byte[]</type>
<required>required</required>
<desc>图片二进制文件流,不能为空,允许png、jpg、gif图片格式,3M以内。</desc>
</param>
<param>
<name>picture_category_id</name>
<type>Number</type>
<required>required</required>
<max_value>9223372036854775807</max_value>
<min_value>0</min_value>
<desc>图片分类ID，设置具体某个分类ID或设置0上传到默认分类，只能传入一个分类&lt;br /&gt; 支持最大值为：9223372036854775807&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>optional</required>
<desc>图片标题,如果为空,传的图片标题就取去掉后缀名的image_input_title,超过50字符长度会截取50字符,重名会在标题末尾加"(1)";标题末尾已经有"(数字)"了，则数字加1</desc>
</param>
</request>
<response>
<param>
<name>picture</name>
<type>Picture</type>
<level>Object</level>
<desc>当前上传的一张图片信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.picture.userinfo.get</name>
<desc>查询用户的图片空间使用信息，包括：订购量，已使用容量，免费容量，总的可使用容量，订购有效期，剩余容量</desc>
<response>
<param>
<name>user_info</name>
<type>UserInfo</type>
<level>Object</level>
<desc>用户使用图片空间的信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.video.add</name>
<desc>此api添加一个视频，视频发布后需要转码，审核等操作步骤，表示添加完成之后并不是立马能播放该视频，需要等后台转码成功，审核通过之后。线上视频转码审核过程比较快</desc>
<request>
<param>
<name>cover_url</name>
<type>String</type>
<required>required</required>
<max_length>512</max_length>
<desc>视频封面url,不能为空且不能超过512个英文字母&lt;br /&gt; 支持最大长度为：512&lt;br /&gt; 支持的最大列表长度为：512</desc>
</param>
<param>
<name>description</name>
<type>String</type>
<required>required</required>
<max_length>512</max_length>
<desc>视频描述信息，不能为空且不能超过256个汉字&lt;br /&gt; 支持最大长度为：512&lt;br /&gt; 支持的最大列表长度为：512</desc>
</param>
<param>
<name>tags</name>
<type>String</type>
<required>required</required>
<max_length>256</max_length>
<max_list_size>25</max_list_size>
<desc>视频标签，以','隔开，不能为空且总长度不超过128个汉字&lt;br /&gt; 支持最大长度为：256&lt;br /&gt; 支持的最大列表长度为：256</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>required</required>
<max_length>256</max_length>
<desc>视频标题，不能为空且不超过128个汉字&lt;br /&gt; 支持最大长度为：256&lt;br /&gt; 支持的最大列表长度为：256</desc>
</param>
<param>
<name>upload_id</name>
<type>String</type>
<required>required</required>
<desc>上传唯一识别符,上传id</desc>
</param>
<param>
<name>uploader_id</name>
<type>Number</type>
<required>required</required>
<desc>视频上传者数字id</desc>
</param>
<param>
<name>video_app_key</name>
<type>Number</type>
<required>required</required>
<desc>在淘宝视频中的应用key，该值向淘宝视频申请产生</desc>
</param>
</request>
<response>
<param>
<name>model</name>
<type>Number</type>
<level>Basic</level>
<desc>发布成功返回视频id</desc>
</param>
</response>
</api>
<api>
<name>taobao.video.update</name>
<desc>此api用于更新一个视频的基本信息，包括视频标题，标签，描述，封面等，不包括是否允许他人观看，更新是否允许他人观看详见taobao.videos.open</desc>
<request>
<param>
<name>cover_url</name>
<type>String</type>
<required>special</required>
<max_length>512</max_length>
<desc>视频封面url,不能超过512个英文字母&lt;br /&gt; 支持最大长度为：512&lt;br /&gt; 支持的最大列表长度为：512</desc>
</param>
<param>
<name>description</name>
<type>String</type>
<required>special</required>
<max_length>512</max_length>
<desc>视频描述信息，不能超过256个汉字&lt;br /&gt; 支持最大长度为：512&lt;br /&gt; 支持的最大列表长度为：512</desc>
</param>
<param>
<name>tags</name>
<type>String</type>
<required>special</required>
<max_length>256</max_length>
<max_list_size>25</max_list_size>
<desc>视频标签，以','隔开，且总长度不超过128个汉字&lt;br /&gt; 支持最大长度为：256&lt;br /&gt; 支持的最大列表长度为：256</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>special</required>
<max_length>256</max_length>
<desc>视频标题，不超过128个汉字。title, tags,cover_url和description至少必须传一个&lt;br /&gt; 支持最大长度为：256&lt;br /&gt; 支持的最大列表长度为：256</desc>
</param>
<param>
<name>video_app_key</name>
<type>Number</type>
<required>required</required>
<desc>在淘宝视频中的应用key，该值向淘宝视频申请产生</desc>
</param>
<param>
<name>video_id</name>
<type>Number</type>
<required>required</required>
<desc>视频id</desc>
</param>
</request>
<response>
<param>
<name>model</name>
<type>Boolean</type>
<level>Basic</level>
<desc>更新视频成功返回true</desc>
</param>
</response>
</api>
<api>
<name>taobao.videos.delete</name>
<desc>此api用于批量删除视频，删除后的视频无法被搜索，全部删除成功返回成功，不支持部分删除</desc>
<request>
<param>
<name>video_app_key</name>
<type>Number</type>
<required>required</required>
<desc>在淘宝视频中的应用key，该值向淘宝视频申请产生</desc>
</param>
<param>
<name>video_ids</name>
<type>Number</type>
<required>required</required>
<max_list_size>100</max_list_size>
<desc>视频id列表</desc>
</param>
</request>
<response>
<param>
<name>model</name>
<type>Boolean</type>
<level>Basic</level>
<desc>全部删除成功返回true，不支持部分删除</desc>
</param>
</response>
</api>
<api>
<name>taobao.videos.query</name>
<desc>此api用于批量查询指定视频，不返回已经被用户删除掉的视频，全部查询成功返回成功，不支持部分查询</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需要返回的视频对象字段。VideoItem结构体中所有字段均可返回；多个字段用“,”分隔；其中video_play_info中的播放url可选择性返回，其余属性全部返回；如果想返回整个子对象中所有url，那字段为video_play_info，如果是想返回子对象里面的字段，那字段为video_play_info.web_url。</desc>
</param>
<param>
<name>video_app_key</name>
<type>Number</type>
<required>required</required>
<desc>在淘宝视频中的应用key，该值向淘宝视频申请产生</desc>
</param>
<param>
<name>video_ids</name>
<type>Number</type>
<required>required</required>
<max_list_size>100</max_list_size>
<desc>视频id列表</desc>
</param>
</request>
<response>
<param>
<name>video_items</name>
<type>VideoItem</type>
<level>Object Array</level>
<desc>批量查询返回的视频列表，返回具体信息为入参fields请求的字段信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.videos.search</name>
<desc>此api用于搜索应用上传的所有视频，应用由appKey 唯一识别，搜索条件包含视频标题，标签，状态，关键字（标题or标签，不能同时设置），上传者数字id</desc>
<request>
<param>
<name>current_page</name>
<type>Number</type>
<required>optional</required>
<desc>页码。默认返回的数据是从第一页开始</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需要返回的视频对象字段。VideoItem结构体中所有字段均可返回；多个字段用“,”分隔；其中video_play_info中的播放url可选择性返回，其余属性全部返回；如果想返回整个子对象中所有url，那字段为video_play_info，如果是想返回子对象里面的字段，那字段为video_play_info.web_url。</desc>
</param>
<param>
<name>keywords</name>
<type>String</type>
<required>optional</required>
<desc>关键字(标题or标签，不能同时设置title,tag，否则冲突)</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页条数，默认值是12</desc>
</param>
<param>
<name>states</name>
<type>Number</type>
<required>optional</required>
<max_list_size>10</max_list_size>
<desc>视频状态列表；视频状态：等待转码（1），转码中（2），转码失败（3），等待审核（4），未通过审核（5），通过审核（6）</desc>
</param>
<param>
<name>tag</name>
<type>String</type>
<required>optional</required>
<max_length>256</max_length>
<desc>视频标签&lt;br /&gt; 支持最大长度为：256&lt;br /&gt; 支持的最大列表长度为：256</desc>
</param>
<param>
<name>title</name>
<type>String</type>
<required>optional</required>
<max_length>256</max_length>
<desc>视频标题&lt;br /&gt; 支持最大长度为：256&lt;br /&gt; 支持的最大列表长度为：256</desc>
</param>
<param>
<name>uploader_id</name>
<type>Number</type>
<required>required</required>
<desc>视频上传者数字id</desc>
</param>
<param>
<name>video_app_key</name>
<type>Number</type>
<required>required</required>
<desc>在淘宝视频中的应用key，该值向淘宝视频申请产生</desc>
</param>
</request>
<response>
<param>
<name>search_result</name>
<type>TOPSearchResult</type>
<level>Object</level>
<desc>搜索返回类，返回具体信息为入参fields请求的字段信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.sellercenter.role.add</name>
<desc>给指定的卖家创建新的子账号角色&lt;br/&gt; 
如果需要授权的权限点有下级权限点或上级权限点，把该权限点的父权限点和该权限点的所有子权限都一并做赋权操作，并递归处理&lt;br/&gt;例如：权限点列表如下&lt;br/&gt; 
code=sell 宝贝管理&lt;br/&gt; 
---------|code=sm 店铺管理&lt;br/&gt; 
---------|---------|code=sm-design 如店铺装修&lt;br/&gt; 
---------|---------|---------|code=sm-tbd-visit内店装修入口&lt;br/&gt; 
---------|---------|---------|code=sm-tbd-publish内店装修发布&lt;br/&gt; 
---------|---------|code=phone 手机淘宝店铺&lt;br/&gt; 
调用改接口给code=sm-design店铺装修赋权时，同时会将下列权限点都赋予默认角色&lt;br/&gt; 
code=sell 宝贝管理&lt;br/&gt; 
---------|code=sm 店铺管理&lt;br/&gt; 
---------|---------|code=sm-design 如店铺装修&lt;br/&gt; 
---------|---------|---------|code=sm-tbd-visit内店装修入口&lt;br/&gt; 
---------|---------|---------|code=sm-tbd-publish内店装修发布&lt;br/&gt;</desc>
<request>
<param>
<name>description</name>
<type>String</type>
<required>optional</required>
<max_length>20</max_length>
<desc>角色描述&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<max_length>20</max_length>
<desc>角色名&lt;br /&gt; 支持最大长度为：20&lt;br /&gt; 支持的最大列表长度为：20</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<max_length>500</max_length>
<desc>表示卖家昵称&lt;br /&gt; 支持最大长度为：500&lt;br /&gt; 支持的最大列表长度为：500</desc>
</param>
<param>
<name>permission_codes</name>
<type>String</type>
<required>optional</required>
<max_list_size>2000</max_list_size>
<desc>需要授权的权限点permission_code列表,以","分割.其code值可以通过调用taobao.sellercenter.user.permissions.get返回，其中permission.is_authorize=1的权限点可以通过本接口授权给对应角色。</desc>
</param>
</request>
<response>
<param>
<name>role</name>
<type>Role</type>
<level>Object</level>
<desc>子账号角色</desc>
</param>
</response>
</api>
<api>
<name>taobao.sellercenter.role.info.get</name>
<desc>获取指定角色的信息。只能查询属于自己的角色信息 (主账号或者某个主账号的子账号登陆，只能查询属于该主账号的角色信息)</desc>
<request>
<param>
<name>role_id</name>
<type>Number</type>
<required>required</required>
<max_length>100</max_length>
<desc>角色id&lt;br /&gt; 支持的最大列表长度为：100</desc>
</param>
</request>
<response>
<param>
<name>role</name>
<type>Role</type>
<level>Object</level>
<desc>角色具体信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.sellercenter.rolemembers.get</name>
<desc>获取指定卖家的角色下属员工列表，只能获取属于登陆者自己的信息。</desc>
<request>
<param>
<name>role_id</name>
<type>Number</type>
<required>required</required>
<max_length>100</max_length>
<desc>角色id&lt;br /&gt; 支持的最大列表长度为：100</desc>
</param>
</request>
<response>
<param>
<name>subusers</name>
<type>SubUserInfo</type>
<level>Object Array</level>
<desc>子账号基本信息列表。具体信息为id、子账号用户名、主账号id、主账号昵称、当前状态值、是否分流</desc>
</param>
</response>
</api>
<api>
<name>taobao.sellercenter.roles.get</name>
<desc>获取指定卖家的角色列表，只能获取属于登陆者自己的信息。</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<max_length>500</max_length>
<desc>卖家昵称(只允许查询自己的信息：当前登陆者)&lt;br /&gt; 支持最大长度为：500&lt;br /&gt; 支持的最大列表长度为：500</desc>
</param>
</request>
<response>
<param>
<name>roles</name>
<type>Role</type>
<level>Object Array</level>
<desc>卖家子账号角色列表。&lt;br/&gt;返回对象为 role数据对象中的role_id，role_name，description，seller_id，create_time，modified_time。不包含permissions(权限点)</desc>
</param>
</response>
</api>
<api>
<name>taobao.sellercenter.subuser.permissions.roles.get</name>
<desc>查询指定的子账号的被直接赋予的权限信息和角色信息。&lt;br/&gt;返回对象中包括直接赋予子账号的权限点信息、被赋予的角色以及角色的对应权限点信息。</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<max_length>100</max_length>
<desc>子账号昵称(子账号标识)&lt;br /&gt; 支持最大长度为：100&lt;br /&gt; 支持的最大列表长度为：100</desc>
</param>
</request>
<response>
<param>
<name>subuser_permission</name>
<type>SubUserPermission</type>
<level>Object</level>
<desc>子账号被所拥有的权限</desc>
</param>
</response>
</api>
<api>
<name>taobao.sellercenter.subusers.get</name>
<desc>根据主账号nick查询该账号下所有的子账号列表，只能查询属于自己的账号信息 (主账号以及所属子账号)</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<desc>表示卖家昵称</desc>
</param>
</request>
<response>
<param>
<name>subusers</name>
<type>SubUserInfo</type>
<level>Object Array</level>
<desc>子账号基本信息列表。具体信息为id、子账号用户名、主账号id、主账号昵称、当前状态值、是否分流</desc>
</param>
</response>
</api>
<api>
<name>taobao.sellercenter.user.permissions.get</name>
<desc>获取指定用户的权限集合，并不组装成树。如果是主账号，返回所有的权限列表；如果是子账号，返回所有已授权的权限。只能查询属于自己的账号信息 (如果是主账号，则是主账号以及所属子账号，如果是子账号则是对应主账号以及所属子账号)</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<desc>用户标识，次入参必须为子账号比如zhangsan:cool。如果只输入主账号zhangsan，将报错。</desc>
</param>
</request>
<response>
<param>
<name>permissions</name>
<type>Permission</type>
<level>Object Array</level>
<desc>权限列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.subuser.department.add</name>
<desc>根据主账号ID以及部门名称、父部门ID创建新的部门信息（通过主账号登陆只能新建属于该主账号的部门信息）</desc>
<request>
<param>
<name>department_name</name>
<type>String</type>
<required>required</required>
<desc>部门名称</desc>
</param>
<param>
<name>parent_id</name>
<type>Number</type>
<required>required</required>
<desc>父部门ID 如果是最高部门则传入0</desc>
</param>
<param>
<name>user_nick</name>
<type>String</type>
<required>required</required>
<desc>主账号用户名</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功 true:操作成功; false:操作失败</desc>
</param>
</response>
</api>
<api>
<name>taobao.subuser.department.delete</name>
<desc>根据主账号Nick和部门ID删除该主账号下的该部门信息，如果待删除部门下有子账号则无法删除该部门（通过主账号登陆只能删除属于该主账号下的部门信息）</desc>
<request>
<param>
<name>department_id</name>
<type>Number</type>
<required>required</required>
<desc>部门ID</desc>
</param>
<param>
<name>user_nick</name>
<type>String</type>
<required>required</required>
<desc>主账号用户名</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功 true:操作成功; false:操作失败</desc>
</param>
</response>
</api>
<api>
<name>taobao.subuser.department.update</name>
<desc>通过指定主账号ID和部门ID来修改该部门的名称或该部门的父部门ID。（通过主账号登陆只能修改属于该主账号的部门信息）</desc>
<request>
<param>
<name>department_id</name>
<type>Number</type>
<required>required</required>
<desc>部门ID</desc>
</param>
<param>
<name>department_name</name>
<type>String</type>
<required>optional</required>
<desc>部门名称</desc>
</param>
<param>
<name>parent_id</name>
<type>Number</type>
<required>optional</required>
<desc>父部门ID 如果是最高部门则传入0</desc>
</param>
<param>
<name>user_nick</name>
<type>String</type>
<required>required</required>
<desc>主账号用户名</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功 true:操作成功; false:操作失败</desc>
</param>
</response>
</api>
<api>
<name>taobao.subuser.departments.get</name>
<desc>获取指定账户的所有部门列表，其实包括有每个部门的ID、父部门ID、部门名称（通过主账号登陆只能查询属于该主账号下的所有部门信息）。</desc>
<request>
<param>
<name>user_nick</name>
<type>String</type>
<required>required</required>
<desc>主账号用户名</desc>
</param>
</request>
<response>
<param>
<name>departments</name>
<type>Department</type>
<level>Object Array</level>
<desc>部门信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.subuser.duty.add</name>
<desc>通过主账号ID来增加指定账户的职务信息，职务信息中包括职务名称以及职务级别（通过主账号登陆只能新建属于该主账号的职务信息）</desc>
<request>
<param>
<name>duty_level</name>
<type>Number</type>
<required>required</required>
<desc>职务级别</desc>
</param>
<param>
<name>duty_name</name>
<type>String</type>
<required>required</required>
<desc>职务名称</desc>
</param>
<param>
<name>user_nick</name>
<type>String</type>
<required>required</required>
<desc>主账号用户名</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功 true:操作成功; false:操作失败</desc>
</param>
</response>
</api>
<api>
<name>taobao.subuser.duty.delete</name>
<desc>通过主账号ID和职务ID来删除主账号下的该职务信息。使用此职务的员工中职务一栏将变为空（通过主账号登陆只能删除属于该主账号下的职务信息）</desc>
<request>
<param>
<name>duty_id</name>
<type>Number</type>
<required>required</required>
<desc>职务ID</desc>
</param>
<param>
<name>user_nick</name>
<type>String</type>
<required>required</required>
<desc>主账号用户名</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功 true:操作成功; false:操作失败</desc>
</param>
</response>
</api>
<api>
<name>taobao.subuser.duty.update</name>
<desc>通过主账号ID和职务ID来修改该职务信息中的职务名称及职务级别信息（通过主账号登陆只能修改属于该主账号下的职务信息）</desc>
<request>
<param>
<name>duty_id</name>
<type>Number</type>
<required>required</required>
<desc>职务ID</desc>
</param>
<param>
<name>duty_level</name>
<type>Number</type>
<required>optional</required>
<desc>职务级别</desc>
</param>
<param>
<name>duty_name</name>
<type>String</type>
<required>optional</required>
<desc>职务名称</desc>
</param>
<param>
<name>user_nick</name>
<type>String</type>
<required>required</required>
<desc>主账号用户名</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功 true:操作成功; false:操作失败</desc>
</param>
</response>
</api>
<api>
<name>taobao.subuser.dutys.get</name>
<desc>通过主账号Nick获取该账户下的所有职务信息，职务信息中包括职务ID、职务名称以及职务等级（通过主账号登陆只能获取属于该主账号下的职务信息）</desc>
<request>
<param>
<name>user_nick</name>
<type>String</type>
<required>required</required>
<desc>主账号用户名</desc>
</param>
</request>
<response>
<param>
<name>dutys</name>
<type>Duty</type>
<level>Object Array</level>
<desc>职务信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.subuser.employee.add</name>
<desc>给指定子账号新增一个员工信息（通过主账号登陆只能新建属于该主账号的员工信息）</desc>
<request>
<param>
<name>department_id</name>
<type>Number</type>
<required>required</required>
<desc>当前员工所属部门ID</desc>
</param>
<param>
<name>duty_id</name>
<type>Number</type>
<required>optional</required>
<desc>当前员工担任职务ID</desc>
</param>
<param>
<name>employee_name</name>
<type>String</type>
<required>required</required>
<desc>员工姓名</desc>
</param>
<param>
<name>employee_nickname</name>
<type>String</type>
<required>optional</required>
<desc>员工花名</desc>
</param>
<param>
<name>employee_num</name>
<type>String</type>
<required>optional</required>
<desc>员工工号(可以用大小写英文字母和数字)</desc>
</param>
<param>
<name>entry_date</name>
<type>Date</type>
<required>optional</required>
<desc>员工入职时间</desc>
</param>
<param>
<name>id_card_num</name>
<type>String</type>
<required>optional</required>
<desc>员工身份证号码</desc>
</param>
<param>
<name>leader_id</name>
<type>Number</type>
<required>optional</required>
<desc>直接上级的员工ID</desc>
</param>
<param>
<name>office_phone</name>
<type>String</type>
<required>optional</required>
<desc>办公电话</desc>
</param>
<param>
<name>personal_email</name>
<type>String</type>
<required>optional</required>
<desc>员工私人邮箱</desc>
</param>
<param>
<name>personal_mobile</name>
<type>String</type>
<required>optional</required>
<desc>员工手机号码</desc>
</param>
<param>
<name>sex</name>
<type>Number</type>
<required>required</required>
<desc>员工性别 1：男; 2:女</desc>
</param>
<param>
<name>sub_id</name>
<type>Number</type>
<required>required</required>
<desc>子账号ID</desc>
</param>
<param>
<name>work_location</name>
<type>String</type>
<required>optional</required>
<desc>工作地点</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功 true:操作成功; false:操作失败</desc>
</param>
</response>
</api>
<api>
<name>taobao.subuser.employee.update</name>
<desc>修改指定账户子账号的员工信息（通过主账号登陆只能修改属于该主账号下的员工信息）</desc>
<request>
<param>
<name>department_id</name>
<type>Number</type>
<required>optional</required>
<desc>当前员工所属部门ID</desc>
</param>
<param>
<name>duty_id</name>
<type>Number</type>
<required>optional</required>
<desc>当前员工担任职务ID(若需要将该字段的值置为空，请传入-1）</desc>
</param>
<param>
<name>employee_name</name>
<type>String</type>
<required>optional</required>
<desc>员工姓名</desc>
</param>
<param>
<name>employee_nickname</name>
<type>String</type>
<required>optional</required>
<desc>员工花名(若需要将该字段的值置为空，请传入“-1”）</desc>
</param>
<param>
<name>employee_num</name>
<type>String</type>
<required>optional</required>
<desc>员工工号(卖家自定义)(若需要将该字段的值置为空，请传入“-1”）</desc>
</param>
<param>
<name>employee_turnover</name>
<type>Boolean</type>
<required>optional</required>
<desc>登记员工离职  true:登记员工离职</desc>
</param>
<param>
<name>entry_date</name>
<type>Date</type>
<required>optional</required>
<desc>员工入职时间(若需要将该字段的值置为空，请传入1900-01-01 00:00:00）</desc>
</param>
<param>
<name>id_card_num</name>
<type>String</type>
<required>optional</required>
<desc>员工身份证号码(若需要将该字段的值置为空，请传入“-1”）</desc>
</param>
<param>
<name>leader_id</name>
<type>Number</type>
<required>optional</required>
<desc>直接上级的员工ID(若需要将该字段的值置为空，请传入-1）</desc>
</param>
<param>
<name>office_phone</name>
<type>String</type>
<required>optional</required>
<desc>办公电话(若需要将该字段的值置为空，请传入“-1”）</desc>
</param>
<param>
<name>personal_email</name>
<type>String</type>
<required>optional</required>
<desc>员工私人邮箱(若需要将该字段的值置为空，请传入“-1”）</desc>
</param>
<param>
<name>personal_mobile</name>
<type>String</type>
<required>optional</required>
<desc>员工手机号码(若需要将该字段的值置为空，请传入“-1”）</desc>
</param>
<param>
<name>sex</name>
<type>Number</type>
<required>optional</required>
<desc>员工性别  1：男;  2:女</desc>
</param>
<param>
<name>sub_id</name>
<type>Number</type>
<required>required</required>
<desc>子账号ID</desc>
</param>
<param>
<name>work_location</name>
<type>String</type>
<required>optional</required>
<desc>杭州大厦(若需要将该字段的值置为空，请传入“-1”）</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功 true:操作成功; false:操作失败</desc>
</param>
</response>
</api>
<api>
<name>taobao.subuser.fullinfo.get</name>
<desc>获取指定账户子账号的详细信息，其中包括子账号的账号信息以及员工、部门、职务信息（只能通过主账号登陆并查询属于该主账号下的某个子账号详细信息）</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>optional</required>
<desc>传入所需要的参数信息（若不需要获取子账号或主账号的企业邮箱地址，则无需传入该参数；若需要获取子账号或主账号的企业邮箱地址，则需要传入fields；可选参数值为subuser_email和user_email，传入其他参数值均无效；两个参数都需要则以逗号隔开传入即可，例如：subuser_email,user_email）</desc>
</param>
<param>
<name>sub_id</name>
<type>Number</type>
<required>special</required>
<desc>子账号ID（传参中sub_id和sub_nick至少需要其中一个，若sub_id与sub_nick同时传入并且合法，那么sub_nick优先，以sub_nick查询子账号）</desc>
</param>
<param>
<name>sub_nick</name>
<type>String</type>
<required>special</required>
<desc>子账号用户名（传参中sub_id和sub_nick至少需要其中一个，若sub_id与sub_nick同时传入并且合法，那么sub_nick优先，以sub_nick查询子账号）</desc>
</param>
</request>
<response>
<param>
<name>sub_fullinfo</name>
<type>SubUserFullInfo</type>
<level>Object</level>
<desc>子账号详细信息，其中包括账号基本信息、员工信息和部门职务信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.subuser.info.update</name>
<desc>修改指定账户子账号的基本信息（通过主账号登陆只能修改属于该主账号的子账号基本信息）</desc>
<request>
<param>
<name>is_disable_subaccount</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否停用子账号 true:表示停用该子账号false:表示开启该子账号</desc>
</param>
<param>
<name>is_dispatch</name>
<type>Boolean</type>
<required>optional</required>
<desc>子账号是否参与分流 true:参与分流 false:不参与分流</desc>
</param>
<param>
<name>sub_id</name>
<type>Number</type>
<required>required</required>
<desc>子账号ID</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>操作是否成功 true:操作成功; false:操作失败</desc>
</param>
</response>
</api>
<api>
<name>taobao.subusers.get</name>
<desc>获取主账号下的子账号简易账号信息集合。（只能通过主账号登陆并且查询该属于主账号的子账号信息）</desc>
<request>
<param>
<name>user_nick</name>
<type>String</type>
<required>required</required>
<desc>主账号用户名</desc>
</param>
</request>
<response>
<param>
<name>subaccounts</name>
<type>SubAccountInfo</type>
<level>Object Array</level>
<desc>子账号基本信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.fuwu.sale.link.gen</name>
<desc>服务商通过使用该接口来产生营销链接，通过把这种链接发送给商家来做自定义人群的服务营销&lt;br&gt; 
注：session是param_str这个参数串创建者生成的session，这个创建者与入参中的nick是不一致的。例如：A开发者创建了一个param_str的字符串，要为B商家生成一个营销链接，session必须是A开发者创建的session。</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>用户需要营销的目标人群中的用户nick</desc>
</param>
<param>
<name>param_str</name>
<type>String</type>
<required>required</required>
<desc>从服务商后台，营销链接功能中生成的参数串直接复制使用。不要修改，否则抛错。</desc>
</param>
</request>
<response>
<param>
<name>url</name>
<type>String</type>
<level>Basic</level>
<desc>通过营销链接接口生成的营销链接短地址</desc>
</param>
</response>
</api>
<api>
<name>taobao.fuwu.scores.get</name>
<desc>根据日期、查询appkey对应服务评价，每次调用只能查询某一天服务评价信息，可设置分页查询，页大小最大为100，非实时接口，延迟时间为30分钟</desc>
<request>
<param>
<name>current_page</name>
<type>Number</type>
<required>required</required>
<desc>当前页</desc>
</param>
<param>
<name>date</name>
<type>Date</type>
<required>required</required>
<desc>评价日期，查询某一天的评价</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>每页获取条数。默认值40，最小值1，最大值100。&lt;br /&gt; 支持最大值为：100&lt;br /&gt; 支持最小值为：1</desc>
</param>
</request>
<response>
<param>
<name>score_result</name>
<type>ScoreResult</type>
<level>Object Array</level>
<desc>评价流水记录</desc>
</param>
</response>
</api>
<api>
<name>taobao.vas.order.search</name>
<desc>用于ISV查询自己名下的应用及收费项目的订单记录（已付款订单）。 
建议用于查询前一日的历史记录，不适合用作实时数据查询。 
现在只能查询90天以内的数据 
该接口限制每分钟所有appkey调用总和只能有800次。</desc>
<request>
<param>
<name>article_code</name>
<type>String</type>
<required>required</required>
<desc>应用收费代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得该应用的收费代码</desc>
</param>
<param>
<name>biz_order_id</name>
<type>Number</type>
<required>optional</required>
<desc>订单号</desc>
</param>
<param>
<name>biz_type</name>
<type>Number</type>
<required>optional</required>
<desc>订单类型，1=新订 2=续订 3=升级 4=后台赠送 5=后台自动续订 6=订单审核后生成订购关系（暂时用不到） 空=全部</desc>
</param>
<param>
<name>end_created</name>
<type>Date</type>
<required>optional</required>
<desc>订单创建时间（订购时间）结束值</desc>
</param>
<param>
<name>item_code</name>
<type>String</type>
<required>optional</required>
<desc>收费项目代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得收费项目代码</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>淘宝会员名</desc>
</param>
<param>
<name>order_id</name>
<type>Number</type>
<required>optional</required>
<desc>子订单号</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>200</max_value>
<desc>一页包含的记录数&lt;br /&gt; 支持最大值为：200</desc>
</param>
<param>
<name>start_created</name>
<type>Date</type>
<required>optional</required>
<desc>订单创建时间（订购时间）起始值（当start_created和end_created都不填写时，默认返回最近90天的数据）</desc>
</param>
</request>
<response>
<param>
<name>article_biz_orders</name>
<type>ArticleBizOrder</type>
<level>Object Array</level>
<desc>商品订单对象</desc>
</param>
<param>
<name>total_item</name>
<type>Number</type>
<level>Basic</level>
<desc>总记录数</desc>
</param>
</response>
</api>
<api>
<name>taobao.vas.subsc.search</name>
<desc>用于ISV查询自己名下的应用及收费项目的订购记录</desc>
<request>
<param>
<name>article_code</name>
<type>String</type>
<required>required</required>
<desc>应用收费代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得该应用的收费代码</desc>
</param>
<param>
<name>autosub</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否自动续费，true=自动续费 false=非自动续费 空=全部</desc>
</param>
<param>
<name>end_deadline</name>
<type>Date</type>
<required>optional</required>
<desc>到期时间结束值</desc>
</param>
<param>
<name>expire_notice</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否到期提醒，true=到期提醒 false=非到期提醒 空=全部</desc>
</param>
<param>
<name>item_code</name>
<type>String</type>
<required>optional</required>
<desc>收费项目代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得收费项目代码</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>optional</required>
<desc>淘宝会员名</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>页码</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>200</max_value>
<desc>一页包含的记录数&lt;br /&gt; 支持最大值为：200</desc>
</param>
<param>
<name>start_deadline</name>
<type>Date</type>
<required>optional</required>
<desc>到期时间起始值（当start_deadline和end_deadline都不填写时，默认返回最近90天的数据）</desc>
</param>
<param>
<name>status</name>
<type>Number</type>
<required>optional</required>
<desc>订购记录状态，1=有效 2=过期 空=全部</desc>
</param>
</request>
<response>
<param>
<name>article_subs</name>
<type>ArticleSub</type>
<level>Object Array</level>
<desc>订购关系对象</desc>
</param>
<param>
<name>total_item</name>
<type>Number</type>
<level>Basic</level>
<desc>总记录数</desc>
</param>
</response>
</api>
<api>
<name>taobao.vas.subscribe.get</name>
<desc>用于ISV根据登录进来的淘宝会员名查询该为该会员开通哪些收费项目，ISV只能查询自己名下的应用及收费项目的订购情况</desc>
<request>
<param>
<name>article_code</name>
<type>String</type>
<required>required</required>
<desc>商品编码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得该应用的商品代码</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<desc>淘宝会员名</desc>
</param>
</request>
<response>
<param>
<name>article_user_subscribes</name>
<type>ArticleUserSubscribe</type>
<level>Object Array</level>
<desc>用户订购信息</desc>
</param>
</response>
</api>
<api>
<name>taobao.refund.get</name>
<desc>获取单笔退款详情</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需要返回的字段。目前支持有：refund_id, alipay_no, tid, oid, buyer_nick, seller_nick, total_fee, status, created, refund_fee, good_status, has_good_return, payment, reason, desc, num_iid, title, price, num, good_return_time, company_name, sid, address, shipping_type, refund_remind_timeout</desc>
</param>
<param>
<name>refund_id</name>
<type>Number</type>
<required>required</required>
<max_value>9223372036854775807</max_value>
<min_value>1</min_value>
<desc>退款单号&lt;br /&gt; 支持最大值为：9223372036854775807&lt;br /&gt; 支持最小值为：1</desc>
</param>
</request>
<response>
<param>
<name>refund</name>
<type>Refund</type>
<level>Object</level>
<desc>搜索到的交易信息列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.refund.message.add</name>
<desc>创建退款留言/凭证</desc>
<request>
<param>
<name>content</name>
<type>String</type>
<required>required</required>
<desc>留言内容。最大长度: 400个字节</desc>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<required>optional</required>
<desc>图片（凭证）。类型: JPG,GIF,PNG;最大为: 500K</desc>
</param>
<param>
<name>refund_id</name>
<type>Number</type>
<required>required</required>
<desc>退款编号。</desc>
</param>
</request>
<response>
<param>
<name>refund_message</name>
<type>RefundMessage</type>
<level>Object</level>
<desc>退款信息。包含id和created</desc>
</param>
</response>
</api>
<api>
<name>taobao.refund.messages.get</name>
<desc>单笔退款详情</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表。可选值：RefundMessage结构体中的所有字段，以半角逗号(,)分隔。</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码。取值范围:大于零的整数; 默认值:1&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>每页条数。取值范围:大于零的整数; 默认值:40;最大值:100&lt;br /&gt; 支持最大值为：100&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>refund_id</name>
<type>Number</type>
<required>required</required>
<desc>退款单号</desc>
</param>
</request>
<response>
<param>
<name>refund_messages</name>
<type>RefundMessage</type>
<level>Object Array</level>
<desc>搜索到的留言凭证信息列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到的留言凭证总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.refund.refuse</name>
<desc>卖家拒绝单笔退款（包含退款和退款退货）交易，要求如下： 
1. 传入的refund_id和相应的tid, oid必须匹配 
2. 如果一笔订单只有一笔子订单，则tid必须与oid相同 
3. 只有卖家才能执行拒绝退款操作 
4. 以下三种情况不能退款：卖家未发货；7天无理由退换货；网游订单</desc>
<request>
<param>
<name>oid</name>
<type>Number</type>
<required>optional</required>
<desc>退款记录对应的交易子订单号</desc>
</param>
<param>
<name>refund_id</name>
<type>Number</type>
<required>required</required>
<desc>退款单号</desc>
</param>
<param>
<name>refuse_message</name>
<type>String</type>
<required>required</required>
<max_length>200</max_length>
<desc>拒绝退款时的说明信息，长度2-200&lt;br /&gt; 支持最大长度为：200&lt;br /&gt; 支持的最大列表长度为：200</desc>
</param>
<param>
<name>refuse_proof</name>
<type>byte[]</type>
<required>optional</required>
<max_length>130000</max_length>
<desc>拒绝退款时的退款凭证，一般是卖家拒绝退款时使用的发货凭证，最大长度130000字节，支持的图片格式：GIF, JPG, PNG&lt;br /&gt; 支持的文件类型为：gif,jpg,png&lt;br /&gt; 支持的最大列表长度为：130000</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<required>optional</required>
<desc>退款记录对应的交易订单号</desc>
</param>
</request>
<response>
<param>
<name>refund</name>
<type>Refund</type>
<level>Object</level>
<desc>拒绝退款成功后，会返回Refund数据结构中的refund_id, status, modified字段</desc>
</param>
</response>
</api>
<api>
<name>taobao.refunds.apply.get</name>
<desc>查询买家申请的退款列表，且查询外店的退款列表时需要指定交易类型</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需要返回的字段。目前支持有：refund_id, tid, title, buyer_nick, seller_nick, total_fee, status, created, refund_fee</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码。传入值为 1 代表第一页，传入值为 2 代表第二页，依此类推。默认返回的数据是从第一页开始&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>每页条数。取值范围:大于零的整数; 默认值:40;最大值:100&lt;br /&gt; 支持最大值为：100&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>seller_nick</name>
<type>String</type>
<required>optional</required>
<desc>卖家昵称</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>退款状态，默认查询所有退款状态的数据，除了默认值外每次只能查询一种状态。 
WAIT_SELLER_AGREE(买家已经申请退款，等待卖家同意)  
WAIT_BUYER_RETURN_GOODS(卖家已经同意退款，等待买家退货)  
WAIT_SELLER_CONFIRM_GOODS(买家已经退货，等待卖家确认收货)  
SELLER_REFUSE_BUYER(卖家拒绝退款)  
CLOSED(退款关闭)  
SUCCESS(退款成功)</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>optional</required>
<desc>交易类型列表，一次查询多种类型可用半角逗号分隔，默认同时查询guarantee_trade, auto_delivery的2种类型的数据。 
fixed(一口价)  
auction(拍卖)  
guarantee_trade(一口价、拍卖)  
independent_simple_trade(旺店入门版交易)  
independent_shop_trade(旺店标准版交易)  
auto_delivery(自动发货)  
ec(直冲)  
cod(货到付款)  
fenxiao(分销)  
game_equipment(游戏装备)  
shopex_trade(ShopEX交易)  
netcn_trade(万网交易)  
external_trade(统一外部交易)</desc>
</param>
</request>
<response>
<param>
<name>refunds</name>
<type>Refund</type>
<level>Object Array</level>
<desc>搜索到的退款信息列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到的交易信息总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.refunds.receive.get</name>
<desc>查询卖家收到的退款列表，查询外店的退款列表时需要指定交易类型</desc>
<request>
<param>
<name>buyer_nick</name>
<type>String</type>
<required>optional</required>
<desc>买家昵称</desc>
</param>
<param>
<name>end_modified</name>
<type>Date</type>
<required>optional</required>
<desc>查询修改时间结束。格式: yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需要返回的字段。目前支持有：refund_id, tid, title, buyer_nick, seller_nick, total_fee, status, created, refund_fee, oid, good_status, company_name, sid, payment, reason, desc, has_good_return, modified, order_status</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码。取值范围:大于零的整数; 默认值:1&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>每页条数。取值范围:大于零的整数; 默认值:40;最大值:100&lt;br /&gt; 支持最大值为：100&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>start_modified</name>
<type>Date</type>
<required>optional</required>
<desc>查询修改时间开始。格式: yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<required>optional</required>
<desc>退款状态，默认查询所有退款状态的数据，除了默认值外每次只能查询一种状态。 
WAIT_SELLER_AGREE(买家已经申请退款，等待卖家同意)  
WAIT_BUYER_RETURN_GOODS(卖家已经同意退款，等待买家退货)  
WAIT_SELLER_CONFIRM_GOODS(买家已经退货，等待卖家确认收货)  
SELLER_REFUSE_BUYER(卖家拒绝退款)  
CLOSED(退款关闭)  
SUCCESS(退款成功)</desc>
</param>
<param>
<name>type</name>
<type>String</type>
<required>optional</required>
<desc>交易类型列表，一次查询多种类型可用半角逗号分隔，默认同时查询guarantee_trade, auto_delivery的2种类型的数据。 
fixed(一口价)  
auction(拍卖)  
guarantee_trade(一口价、拍卖)  
independent_simple_trade(旺店入门版交易)  
independent_shop_trade(旺店标准版交易)  
auto_delivery(自动发货)  
ec(直冲)  
cod(货到付款)  
fenxiao(分销)  
game_equipment(游戏装备)  
shopex_trade(ShopEX交易)  
netcn_trade(万网交易)  
external_trade(统一外部交易)</desc>
</param>
<param>
<name>use_has_next</name>
<type>Boolean</type>
<required>optional</required>
<desc>是否启用has_next的分页方式，如果指定true,则返回的结果中不包含总记录数，但是会新增一个是否存在下一页的的字段，通过此种方式获取增量退款，接口调用成功率在原有的基础上有所提升。</desc>
</param>
</request>
<response>
<param>
<name>has_next</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否存在下一页</desc>
</param>
<param>
<name>refunds</name>
<type>Refund</type>
<level>Object Array</level>
<desc>搜索到的退款信息列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>搜索到的退款信息总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.rp.returngoods.agree</name>
<desc>卖家同意退货接口</desc>
<request>
<param>
<name>address</name>
<type>String</type>
<required>required</required>
<desc>卖家提供的退货地址</desc>
</param>
<param>
<name>mobile</name>
<type>String</type>
<required>required</required>
<desc>卖家手机</desc>
</param>
<param>
<name>name</name>
<type>String</type>
<required>required</required>
<desc>卖家姓名</desc>
</param>
<param>
<name>post</name>
<type>String</type>
<required>required</required>
<desc>卖家提供的退货地址的邮编</desc>
</param>
<param>
<name>refund_id</name>
<type>Number</type>
<required>required</required>
<desc>退款编号</desc>
</param>
<param>
<name>remark</name>
<type>String</type>
<required>optional</required>
<desc>卖家退货留言</desc>
</param>
<param>
<name>tel</name>
<type>String</type>
<required>required</required>
<desc>卖家座机</desc>
</param>
</request>
<response>
<param>
<name>response</name>
<type>RefundBaseResponse</type>
<level>Object</level>
<desc>同意退货返回对象</desc>
</param>
</response>
</api>
<api>
<name>taobao.categoryrecommend.items.get</name>
<desc>根据类目信息推荐相关联的宝贝集</desc>
<request>
<param>
<name>category_id</name>
<type>Number</type>
<required>required</required>
<desc>传入叶子类目ID</desc>
</param>
<param>
<name>count</name>
<type>Number</type>
<required>required</required>
<desc>请求个数，建议获取20个</desc>
</param>
<param>
<name>ext</name>
<type>String</type>
<required>optional</required>
<desc>额外参数</desc>
</param>
<param>
<name>recommend_type</name>
<type>Number</type>
<required>required</required>
<desc>请求类型，1：类目下热门商品推荐。其他值当非法值处理</desc>
</param>
</request>
<response>
<param>
<name>favorite_items</name>
<type>FavoriteItem</type>
<level>Object Array</level>
<desc>返回关联的商品集合</desc>
</param>
</response>
</api>
<api>
<name>taobao.itemrecommend.items.get</name>
<desc>根据推荐类型获取推荐的关联关系商品</desc>
<request>
<param>
<name>count</name>
<type>Number</type>
<required>required</required>
<desc>请求返回宝贝的个数，建议取20个</desc>
</param>
<param>
<name>ext</name>
<type>String</type>
<required>optional</required>
<desc>额外的参数信息</desc>
</param>
<param>
<name>item_id</name>
<type>Number</type>
<required>required</required>
<desc>商品ID</desc>
</param>
<param>
<name>recommend_type</name>
<type>Number</type>
<required>required</required>
<desc>查询类型标识符，可传入1-3，1：同类商品推荐，2：异类商品推荐， 3：同店商品推荐。其他值当非法值处理</desc>
</param>
</request>
<response>
<param>
<name>values</name>
<type>FavoriteItem</type>
<level>Object Array</level>
<desc>返回的推荐商品列表结果集</desc>
</param>
</response>
</api>
<api>
<name>taobao.shoprecommend.items.get</name>
<desc>根据店铺信息推荐相关联的宝贝集</desc>
<request>
<param>
<name>count</name>
<type>Number</type>
<required>required</required>
<desc>请求个数，最大只能获取10个</desc>
</param>
<param>
<name>ext</name>
<type>String</type>
<required>optional</required>
<desc>额外参数</desc>
</param>
<param>
<name>recommend_type</name>
<type>Number</type>
<required>required</required>
<desc>请求类型，1：店内热门商品推荐。其他值当非法值处理</desc>
</param>
<param>
<name>seller_id</name>
<type>Number</type>
<required>required</required>
<desc>&lt;p&gt;传入卖家ID。这里的seller_id得通过&lt;a href="http://api.taobao.com/apidoc/api.htm?path=cid:38-apiId:10449"&gt;taobao.taobaoke.shops.get&lt;/a&gt;
跟&lt;a href="http://api.taobao.com/apidoc/api.htm?path=cid:38-apiId:21419"&gt;taobao.taobaoke.widget.shops.convert&lt;/a&gt;这两个接口去获取user_id字段。&lt;/p&gt;
&lt;p&gt;如果是非淘客卖家，则无法获取，暂无替代方案。&lt;/p&gt;</desc>
</param>
</request>
<response>
<param>
<name>favorite_items</name>
<type>FavoriteItem</type>
<level>Object Array</level>
<desc>返回与店铺关联的宝贝集合</desc>
</param>
</response>
</api>
<api>
<name>taobao.shoprecommend.shops.get</name>
<desc>根据店铺信息推荐相关联的店铺集</desc>
<request>
<param>
<name>count</name>
<type>Number</type>
<required>required</required>
<desc>请求个数，建议获取16个</desc>
</param>
<param>
<name>ext</name>
<type>String</type>
<required>optional</required>
<desc>额外参数</desc>
</param>
<param>
<name>recommend_type</name>
<type>Number</type>
<required>required</required>
<desc>请求类型，1：关联店铺推荐。其他值当非法值处理</desc>
</param>
<param>
<name>seller_id</name>
<type>Number</type>
<required>required</required>
<desc>传入卖家ID</desc>
</param>
</request>
<response>
<param>
<name>favorite_shops</name>
<type>FavoriteShop</type>
<level>Object Array</level>
<desc>返回与店铺关联的店铺集</desc>
</param>
</response>
</api>
<api>
<name>taobao.userrecommend.items.get</name>
<desc>根据用户信息推荐相关联的宝贝集。仅支持widget入口调用，需要同时校验淘宝cookie登陆情况，以及cookie和session授权的一致性。调用入口为/widget/rest。签名方法简化为Hmac-md5,hmac(secret+‘app_key' ＋app_key +'timestamp' + timestamp+secret)。timestamp为60分钟内有效 
此API为组件API，调用方式需要参照：http://open.taobao.com/doc/detail.htm?id=988，以JS-SDK调用</desc>
<request>
<param>
<name>count</name>
<type>Number</type>
<required>required</required>
<desc>请求个数，建议取20个</desc>
</param>
<param>
<name>ext</name>
<type>String</type>
<required>optional</required>
<desc>额外参数</desc>
</param>
<param>
<name>recommend_type</name>
<type>Number</type>
<required>required</required>
<desc>请求类型，1：用户购买意图。其他值当非法值处理</desc>
</param>
</request>
<response>
<param>
<name>favorite_items</name>
<type>FavoriteItem</type>
<level>Object Array</level>
<desc>返回用户相关的关联宝贝集合</desc>
</param>
</response>
</api>
<api>
<name>taobao.jushita.jdp.rdsinfo.get</name>
<desc>用于数据推送服务获取rds信息。内部接口</desc>
<request>
<param>
<name>target_appkey</name>
<type>String</type>
<required>required</required>
<desc>查询的appkey</desc>
</param>
</request>
<response>
<param>
<name>rds_list</name>
<type>RdsConfig</type>
<level>Object Array</level>
<desc>app的rds列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.jushita.jdp.task.update</name>
<desc>数据推送2.0中，SDK通过此api把任务的执行结果更新回TOP</desc>
<request>
<param>
<name>error_message</name>
<type>String</type>
<required>optional</required>
<max_length>100</max_length>
<desc>任务执行失败的错误信息，可以方便排查问题。&lt;br /&gt; 支持最大长度为：100&lt;br /&gt; 支持的最大列表长度为：100</desc>
</param>
<param>
<name>execute_host</name>
<type>String</type>
<required>optional</required>
<max_length>30</max_length>
<desc>任务执行的机器主机名,用于方便排查问题。&lt;br /&gt; 支持最大长度为：30&lt;br /&gt; 支持的最大列表长度为：30</desc>
</param>
<param>
<name>id</name>
<type>Number</type>
<required>required</required>
<desc>任务的编号</desc>
</param>
<param>
<name>next_execute_time</name>
<type>Date</type>
<required>required</required>
<desc>任务的下次开始执行时间。</desc>
</param>
<param>
<name>now_sync_time</name>
<type>Date</type>
<required>required</required>
<desc>任务当前同步到的时间点。</desc>
</param>
<param>
<name>params</name>
<type>String</type>
<required>optional</required>
<max_length>512</max_length>
<desc>任务的参数，用json格式表示&lt;br /&gt; 支持最大长度为：512&lt;br /&gt; 支持的最大列表长度为：512</desc>
</param>
<param>
<name>status</name>
<type>Number</type>
<required>required</required>
<max_value>2</max_value>
<min_value>-1</min_value>
<desc>任务的状态，0表示任务新建或未执行完成，1表示任务停止，2表示任务已经完成，-1表示任务执行失败。&lt;br /&gt; 支持最大值为：2&lt;br /&gt; 支持最小值为：-1</desc>
</param>
<param>
<name>type</name>
<type>Number</type>
<required>optional</required>
<min_value>0</min_value>
<desc>任务的类型,&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>version</name>
<type>Number</type>
<required>required</required>
<desc>任务更新时的版本号，此值在选择出的任务中获取到。</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>更新任务是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.jushita.jdp.tasks.get</name>
<desc>查询应用未完成的任务</desc>
<request>
<param>
<name>fetch_num</name>
<type>Number</type>
<required>optional</required>
<max_value>200</max_value>
<min_value>1</min_value>
<desc>最大可返回的任务数量&lt;br /&gt; 支持最大值为：200&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>task_item_num</name>
<type>Number</type>
<required>special</required>
<min_value>1</min_value>
<desc>任务分组数量，表示把所有任务平均分成x组，在线订购应用此参数必传；非在线订购应用此参数忽略。&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>task_items</name>
<type>Number</type>
<required>special</required>
<max_list_size>500</max_list_size>
<desc>指定获取哪些分组的任务，取多个分组有半角逗号分隔，在线订购应用此参数必传；非在线订购应用此参数忽略。其中task_items &gt;= 0且task_items &lt; task_item_num</desc>
</param>
<param>
<name>type</name>
<type>Number</type>
<required>required</required>
<min_value>0</min_value>
<desc>任务类型&lt;br /&gt; 支持最小值为：0</desc>
</param>
<param>
<name>user_ids</name>
<type>Number</type>
<required>special</required>
<max_list_size>200</max_list_size>
<desc>需要查询哪些用户的任务，非在线订购应用此参数必传；在线订购应用此参数忽略。</desc>
</param>
</request>
<response>
<param>
<name>data_push_tasks</name>
<type>DataPushTask</type>
<level>Object Array</level>
<desc>查询到的未执行任务</desc>
</param>
</response>
</api>
<api>
<name>taobao.jushita.jdp.user.add</name>
<desc>提供给在线订购应用添加数据推送服务的用户。</desc>
<request>
<param>
<name>rds_name</name>
<type>String</type>
<required>optional</required>
<desc>RDS实例名称，如果有多个RDS必须设置。</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否添加成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.jushita.jdp.user.delete</name>
<desc>删除应用的数据推送用户，用户被删除后，重新添加时会重新同步历史数据。</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>special</required>
<desc>要删除用户的昵称</desc>
</param>
<param>
<name>user_id</name>
<type>Number</type>
<required>special</required>
<min_value>1</min_value>
<desc>需要删除的用户编号&lt;br /&gt; 支持最小值为：1</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否删除成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.jushita.jdp.users.get</name>
<desc>获取开通的订单同步服务的用户，含有rds的路由关系</desc>
<request>
<param>
<name>end_modified</name>
<type>Date</type>
<required>optional</required>
<desc>此参数一般不用传，用于查询最后更改时间在某个时间段内的用户</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<desc>当前页数</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<desc>每页记录数，默认200</desc>
</param>
<param>
<name>start_modified</name>
<type>Date</type>
<required>optional</required>
<desc>此参数一般不用传，用于查询最后更改时间在某个时间段内的用户</desc>
</param>
<param>
<name>user_id</name>
<type>Number</type>
<required>optional</required>
<desc>如果传了user_id表示单条查询</desc>
</param>
</request>
<response>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>总记录数</desc>
</param>
<param>
<name>users</name>
<type>JdpUser</type>
<level>Object Array</level>
<desc>用户列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.lz.center.perm.cancel</name>
<desc>取消某个权限</desc>
<request>
<param>
<name>app_engine</name>
<type>String</type>
<required>required</required>
<desc>app_engine</desc>
</param>
<param>
<name>privilege_code</name>
<type>String</type>
<required>required</required>
<desc>privilege_code</desc>
</param>
<param>
<name>seller_id</name>
<type>Number</type>
<required>required</required>
<desc>订购应用的用户ID</desc>
</param>
</request>
<response>
<param>
<name>cancel_result</name>
<type>String</type>
<level>Basic</level>
<desc>取消成功：success; 取消失败:failure</desc>
</param>
</response>
</api>
<api>
<name>taobao.lz.center.perm.check</name>
<desc>反向校验权限</desc>
<request>
<param>
<name>engine</name>
<type>String</type>
<required>required</required>
<desc>报表引擎编号</desc>
</param>
<param>
<name>privilege_code</name>
<type>String</type>
<required>required</required>
<desc>权限唯一编码</desc>
</param>
<param>
<name>seller_id</name>
<type>Number</type>
<required>required</required>
<desc>ISV服务的卖家ID(第三方ID)</desc>
</param>
<param>
<name>user_id</name>
<type>Number</type>
<required>required</required>
<desc>用户ID</desc>
</param>
</request>
<response>
<param>
<name>check_result</name>
<type>String</type>
<level>Basic</level>
<desc>校验结果 success | failure</desc>
</param>
</response>
</api>
<api>
<name>taobao.lz.center.perm.modify</name>
<desc>修改一条权限的privilege_name, privilege_level, order_by, privilege_url, privilege_type</desc>
<request>
<param>
<name>app_engine</name>
<type>String</type>
<required>required</required>
<desc>引擎名称</desc>
</param>
<param>
<name>order_by</name>
<type>Number</type>
<required>required</required>
<desc>排序字段</desc>
</param>
<param>
<name>privilege_code</name>
<type>String</type>
<required>required</required>
<desc>privilege_code</desc>
</param>
<param>
<name>privilege_name</name>
<type>String</type>
<required>required</required>
<desc>privilege_name</desc>
</param>
<param>
<name>privilege_type</name>
<type>Number</type>
<required>required</required>
<desc>1-前台功能; 2-后端功能</desc>
</param>
<param>
<name>privilege_url</name>
<type>String</type>
<required>required</required>
<desc>privilege_url</desc>
</param>
<param>
<name>seller_id</name>
<type>Number</type>
<required>required</required>
<desc>订购应用的卖家ID</desc>
</param>
</request>
<response>
<param>
<name>modify_result</name>
<type>String</type>
<level>Basic</level>
<desc>success, failure</desc>
</param>
</response>
</api>
<api>
<name>taobao.lz.center.perm.register</name>
<desc>自定义报表引擎授权注册接口</desc>
<request>
<param>
<name>engine</name>
<type>String</type>
<required>required</required>
<desc>报表引擎的描述字段</desc>
</param>
<param>
<name>order_by</name>
<type>Number</type>
<required>optional</required>
<desc>排序字段，由引擎方设定</desc>
</param>
<param>
<name>owner_user_id</name>
<type>Number</type>
<required>optional</required>
<desc>报表创建者的用户id</desc>
</param>
<param>
<name>parent_privilege_code</name>
<type>String</type>
<required>required</required>
<desc>父功能编码</desc>
</param>
<param>
<name>privilege_code</name>
<type>String</type>
<required>required</required>
<desc>功能点唯一编码</desc>
</param>
<param>
<name>privilege_level</name>
<type>Number</type>
<required>required</required>
<desc>1 引擎功能 
2 solution功能 
3 私有报表</desc>
</param>
<param>
<name>privilege_name</name>
<type>String</type>
<required>required</required>
<desc>名称</desc>
</param>
<param>
<name>privilege_type</name>
<type>Number</type>
<required>required</required>
<desc>1 前台功能 
2 后台功能</desc>
</param>
<param>
<name>privilege_url</name>
<type>String</type>
<required>optional</required>
<desc>功能url</desc>
</param>
<param>
<name>seller_id</name>
<type>Number</type>
<required>required</required>
<desc>订购应用的卖家ID</desc>
</param>
<param>
<name>solution_app_key</name>
<type>Number</type>
<required>required</required>
<desc>功能所属的solution对应的app key 
如果是私有报表，app_key 为报表引擎自身的app_key</desc>
</param>
</request>
<response>
<param>
<name>register_result</name>
<type>String</type>
<level>Basic</level>
<desc>注册结果 success|failure</desc>
</param>
</response>
</api>
<api>
<name>taobao.lz.center.permtree.get</name>
<desc>获取用户的权限树</desc>
<request>
<param>
<name>engine</name>
<type>String</type>
<required>required</required>
<desc>引擎编号</desc>
</param>
<param>
<name>seller_id</name>
<type>Number</type>
<required>required</required>
<desc>订购应用的卖家ID</desc>
</param>
<param>
<name>user_id</name>
<type>Number</type>
<required>required</required>
<desc>用户id</desc>
</param>
</request>
<response>
<param>
<name>plat_list</name>
<type>Privilege</type>
<level>Object Array</level>
<desc>报表引擎功能点列表</desc>
</param>
<param>
<name>private_list</name>
<type>Privilege</type>
<level>Object Array</level>
<desc>私有功能点列表</desc>
</param>
<param>
<name>solution_list</name>
<type>Privilege</type>
<level>Object Array</level>
<desc>solution功能点列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.topats.jushita.jdp.datadelete</name>
<desc>异步删除rds库数据推送表的数据</desc>
<request>
<param>
<name>end_modified</name>
<type>Date</type>
<required>required</required>
<desc>删除数据时间段的结束修改时间，格式为：yyyy-MM-dd HH:mm:ss，结束时间必须为前天的23:59:59秒以前，根据是业务的modified时间</desc>
</param>
<param>
<name>start_modified</name>
<type>Date</type>
<required>required</required>
<desc>删除数据时间段的起始修改时间，格式为：yyyy-MM-dd HH:mm:ss,根据是业务的modified时间</desc>
</param>
<param>
<name>sync_type</name>
<type>String</type>
<required>required</required>
<desc>推送的数据类型，可选值为：tb_trade(淘宝交易)，tb_item(淘宝商品)，tb_refund(淘宝退款)，fx_trade(分销订单)，tm_refund(天猫退款)，同时删除多种类型以分号分隔，如："tb_trade;tb_item;tb_refund;fx_trade;tm_refund"</desc>
</param>
<param>
<name>user_nick</name>
<type>String</type>
<required>optional</required>
<desc>用户昵称，不填表示删除所有用户的数据。</desc>
</param>
</request>
<response>
<param>
<name>task</name>
<type>Task</type>
<level>Object</level>
<desc>创建任务信息。里面只包含task_id和created</desc>
</param>
</response>
</api>
<api>
<name>taobao.clouddata.mbp.alg.get</name>
<desc>ISV通过该接口可以获取算法容器中产出的数据。如果使用了mbp中的算法容器，则需要通过此接口来获取结果</desc>
<request>
<param>
<name>group_id</name>
<type>String</type>
<required>required</required>
<desc>分组ID</desc>
</param>
<param>
<name>model_id</name>
<type>Number</type>
<required>required</required>
<desc>模型ID</desc>
</param>
<param>
<name>module_id</name>
<type>Number</type>
<required>optional</required>
<desc>已废弃</desc>
</param>
<param>
<name>parameter</name>
<type>String</type>
<required>optional</required>
<desc>调用ARIMA模型时，parameter设为"$预测时长"，其中"预测时长"是一个大于0小于60的整数。对于回归模型，parameter的格式为"!feature1,!feature2,...,!featureN"。其中被英文逗号隔开的每一个值表示一个feature的值，用英文叹号开头。</desc>
</param>
</request>
<response>
<param>
<name>column_list</name>
<type>String</type>
<level>Basic Array</level>
<desc>模型预测结果头信息。</desc>
</param>
<param>
<name>row_list</name>
<type>QueryRow</type>
<level>Object Array</level>
<desc>各列结果。顺序与column_list中列名顺序相同</desc>
</param>
</response>
</api>
<api>
<name>taobao.clouddata.mbp.data.flowback</name>
<desc>用户通过此接口向上传表上传数据</desc>
<request>
<param>
<name>data</name>
<type>String</type>
<required>required</required>
<desc>一、上传单行数据： 
1)	形式为column1=value1,column2=value2,...的字符串，列名称只能包含字母数字和下划线，Value如果包含=(半角等号),(半角逗号)\(反斜杠)必须用\转义，没有参数则不选  
2)	若想自行指定数据的日期，请在这个字段里追加上"dt=yyyymmdd"字段，如dt=20140605  
二、上传多行数据: 
1)	形式为:upload-multi-line;column1,column2,column3,dt;11,12,13,20140726;21,,23,20140727;31,,33,20140728...的字符串  
2)	每行数据之间使用;(半角分号)隔开 
3)	第一行固定是upload-multi-line，标识是多行上传模式 
4)	第二行是上传的数据的列名，列名之间使用,（半角逗号）分隔，列名只能是数字、字母和下划线，并且只能以字母开头，列名不能为空 
5)	第三列开始是上传的数据，数据都使用,(半角逗号) 分隔，数据顺序与对应列名顺序一致，数据可以为空，但是逗号不能省略，数据中如果包含;(半角分号),(半角逗号)\(反斜杠)必须用\转义 
6)	若想自行指定数据的日期，请在列名中加上dt，并在数据列对应位置加上yyyymmdd格式的数据，如20140605，不允许为空，格式必须正确 
7)	假如字段类型是boolean，数据请使用0或1，不支持true或者false 
8)	由于接口会有超时限制，建议单次上传的数据量不要超过15,000字节</desc>
</param>
<param>
<name>table_name</name>
<type>String</type>
<required>required</required>
<desc>MBP查询表名</desc>
</param>
</request>
<response>
<param>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<desc>执行结果</desc>
</param>
</response>
</api>
<api>
<name>taobao.clouddata.mbp.data.get</name>
<desc>ISV通过该接口可以获取自己在MBP中开发的数据表中的数据</desc>
<request>
<param>
<name>parameter</name>
<type>String</type>
<required>optional</required>
<desc>形式为param1=value1,param2=value2,...的字符串， 参数名称只能包含字母数字和下划线，Value如果包含=和，必须用\转义，没有参数则不选</desc>
</param>
<param>
<name>sql_id</name>
<type>Number</type>
<required>required</required>
<desc>SQL id</desc>
</param>
</request>
<response>
<param>
<name>column_list</name>
<type>String</type>
<level>Basic Array</level>
<desc>SQL查询的返回结果头信息。 
比如select结果的字段名字列表</desc>
</param>
<param>
<name>row_list</name>
<type>QueryRow</type>
<level>Object Array</level>
<desc>各列结果。顺序与column_list中列名顺序相同</desc>
</param>
</response>
</api>
<api>
<name>taobao.clouddata.mbp.status.get</name>
<desc>提供御膳房任务状态查询</desc>
<request>
<param>
<name>parameter</name>
<type>String</type>
<required>optional</required>
<desc>形式为param1=value1,param2=value2,...的字符串， 参数名称只能包含字母数字和下划线，Value如果包含=和，必须用\转义. 
 必填参数: 
query_type:用于描述查询类型，目前只有1，表示查询任务的运行状态 
其他参数： 
action_id:当query_type为1的时候必填，用于表示需要查询的任务的id 
 date:当query_type为1的时候必填，用于表示任务运行的日期,格式必须是yyyyMMdd</desc>
</param>
</request>
<response>
<param>
<name>column_list</name>
<type>String</type>
<level>Basic Array</level>
<desc>状态查询的返回结果头信息。 
当query_type为1的时候，有status,begin_time,end_time三个字段  
status的状态如下: 
   1:等待 2：就绪 3:运行中 4:成功 5:失败 
beginTime:任务开始运行时间，只有status为3、4、5时候有效,格式是yyyy-MM-dd HH:mm:ss，其他情况为空 
endTime:任务结束时间，只有status为4、5时候有效,格式是yyyy-MM-dd HH:mm:ss，其他情况下为空</desc>
</param>
<param>
<name>row_list</name>
<type>QueryRow</type>
<level>Object Array</level>
<desc>各列结果。顺序与column_list中列名顺序相同</desc>
</param>
</response>
</api>
<api>
<name>alipay.xiaodai.user.permit</name>
<desc>阿里金融为用户开通消息通道接口</desc>
<request>
<param>
<name>user_id</name>
<type>Number</type>
<required>required</required>
<desc>用户数字ID</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.tmc.group.add</name>
<desc>为已开通用户添加用户分组</desc>
<request>
<param>
<name>group_name</name>
<type>String</type>
<required>required</required>
<max_length>32</max_length>
<desc>分组名称，同一个应用下需要保证唯一性，最长32个字符。添加分组后，消息通道会为用户的消息分配独立分组，但之前的消息还是存储于默认分组中。不能以default开头，default开头为系统默认组。&lt;br /&gt; 支持最大长度为：32&lt;br /&gt; 支持的最大列表长度为：32</desc>
</param>
<param>
<name>nicks</name>
<type>String</type>
<required>required</required>
<max_list_size>200</max_list_size>
<desc>用户昵称列表，以半角逗号分隔，支持子账号，支持增量添加用户</desc>
</param>
</request>
<response>
<param>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<desc>创建时间</desc>
</param>
<param>
<name>group_name</name>
<type>String</type>
<level>Basic</level>
<desc>分组名称</desc>
</param>
</response>
</api>
<api>
<name>taobao.tmc.group.delete</name>
<desc>删除指定的分组或分组下的用户</desc>
<request>
<param>
<name>group_name</name>
<type>String</type>
<required>required</required>
<desc>分组名称，分组删除后，用户的消息将会存储于默认分组中。警告：由于分组已经删除，用户之前未消费的消息将无法再获取。不能以default开头，default开头为系统默认组。</desc>
</param>
<param>
<name>nicks</name>
<type>String</type>
<required>optional</required>
<max_list_size>20</max_list_size>
<desc>用户列表，不传表示删除整个分组，如果用户全部删除后，也会自动删除整个分组</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.tmc.groups.get</name>
<desc>获取自定义用户分组列表</desc>
<request>
<param>
<name>group_names</name>
<type>String</type>
<required>optional</required>
<max_list_size>20</max_list_size>
<desc>要查询分组的名称，多个分组用半角逗号分隔，不传代表查询所有分组信息，但不会返回组下面的用户信息。如果应用没有设置分组则返回空。组名不能以default开头，default开头是系统默认的组。</desc>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<required>optional</required>
<min_value>1</min_value>
<desc>页码&lt;br /&gt; 支持最小值为：1</desc>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<required>optional</required>
<max_value>100</max_value>
<min_value>1</min_value>
<desc>每页返回多少个分组&lt;br /&gt; 支持最大值为：100&lt;br /&gt; 支持最小值为：1</desc>
</param>
</request>
<response>
<param>
<name>groups</name>
<type>TmcGroup</type>
<level>Object Array</level>
<desc>分组列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<desc>分组总数</desc>
</param>
</response>
</api>
<api>
<name>taobao.tmc.message.produce</name>
<desc>发布单条消息</desc>
<request>
<param>
<name>content</name>
<type>String</type>
<required>required</required>
<max_length>2000</max_length>
<desc>消息内容的JSON表述，必须按照topic的定义来填充&lt;br /&gt; 支持最大长度为：2000&lt;br /&gt; 支持的最大列表长度为：2000</desc>
</param>
<param>
<name>topic</name>
<type>String</type>
<required>required</required>
<max_length>256</max_length>
<desc>发布消息关联的主题&lt;br /&gt; 支持最大长度为：256&lt;br /&gt; 支持的最大列表长度为：256</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.tmc.messages.confirm</name>
<desc>确认消费消息的状态</desc>
<request>
<param>
<name>f_message_ids</name>
<type>Number</type>
<required>optional</required>
<max_list_size>200</max_list_size>
<desc>处理失败的消息ID列表</desc>
</param>
<param>
<name>group_name</name>
<type>String</type>
<required>optional</required>
<desc>分组名称，不传代表默认分组</desc>
</param>
<param>
<name>s_message_ids</name>
<type>Number</type>
<required>required</required>
<max_list_size>200</max_list_size>
<desc>处理成功的消息ID列表
最大 200个ID</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.tmc.messages.consume</name>
<desc>消费多条消息</desc>
<request>
<param>
<name>group_name</name>
<type>String</type>
<required>optional</required>
<desc>用户分组名称，不传表示消费默认分组，如果应用没有设置用户分组，传入分组名称将会返回错误</desc>
</param>
<param>
<name>quantity</name>
<type>Number</type>
<required>optional</required>
<max_value>200</max_value>
<min_value>10</min_value>
<desc>每次批量消费消息的条数&lt;br /&gt; 支持最大值为：200&lt;br /&gt; 支持最小值为：10</desc>
</param>
</request>
<response>
<param>
<name>messages</name>
<type>TmcMessage</type>
<level>Object Array</level>
<desc>消息列表</desc>
</param>
</response>
</api>
<api>
<name>taobao.tmc.user.cancel</name>
<desc>取消用户的消息服务</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<desc>用户昵称，支持子账号</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功,如果为false并且没有错误码，表示删除的用户不存在。</desc>
</param>
</response>
</api>
<api>
<name>taobao.tmc.user.get</name>
<desc>查询指定用户开通的消息通道和组</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<required>required</required>
<desc>需返回的字段列表，多个字段以半角逗号分隔。可选值：TmcUser结构体中的所有字段，一定要返回topic。</desc>
</param>
<param>
<name>nick</name>
<type>String</type>
<required>required</required>
<max_length>100</max_length>
<desc>用户昵称&lt;br /&gt; 支持最大长度为：100&lt;br /&gt; 支持的最大列表长度为：100</desc>
</param>
</request>
<response>
<param>
<name>tmc_user</name>
<type>TmcUser</type>
<level>Object</level>
<desc>开通的用户数据</desc>
</param>
</response>
</api>
<api>
<name>taobao.tmc.user.permit</name>
<desc>为已授权的用户开通消息服务</desc>
<request>
<param>
<name>topics</name>
<type>String</type>
<required>optional</required>
<max_list_size>100</max_list_size>
<desc>消息主题列表，用半角逗号分隔。当用户订阅的topic是应用订阅的子集时才需要设置，不设置表示继承应用所订阅的所有topic，一般情况建议不要设置。</desc>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<desc>是否成功</desc>
</param>
</response>
</api>
<api>
<name>taobao.ma.packcode.create</name>
<desc>生成包裹码二维码图片链接</desc>
<response>
<param>
<name>qrcodeurl</name>
<type>String</type>
<level>Basic</level>
<desc>生成包裹码二维码图片链接</desc>
</param>
</response>
</api>
<api>
<name>taobao.wireless.bunting.item.shorturl.create</name>
<desc>通过商品id生成短链，用户点击短链后直接跳转手淘客户端，未安装则跳转下载页</desc>
<request>
<param>
<name>item_id</name>
<type>String</type>
<required>optional</required>
<desc>商品ID</desc>
</param>
</request>
<response>
<param>
<name>shorturl</name>
<type>String</type>
<level>Basic</level>
<desc>短地址</desc>
</param>
</response>
</api>
<api>
<name>taobao.wireless.bunting.shop.shorturl.create</name>
<desc>通过店铺id取得短链</desc>
<request>
<param>
<name>shop_id</name>
<type>String</type>
<required>optional</required>
<desc>商店id</desc>
</param>
</request>
<response>
<param>
<name>shorturl</name>
<type>String</type>
<level>Basic</level>
<desc>短链</desc>
</param>
</response>
</api>
</apis>
</metadata>
